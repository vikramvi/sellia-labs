{"ast":null,"code":"var _jsxFileName = \"/Users/bhavikshah/Work/Sellia/sellia-mono/selliafemono/packages/web/containers/Home/Categories/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { Row, Col } from 'react-styled-flexboxgrid';\nimport { GET_CATEGORIES } from 'core/graphql/Category.query';\nimport { SINGLE_CATEGORY_PAGE } from 'core/navigation/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport CategoryLoader from '../../../components/Loader/CategoryLoader';\nimport { CategoryGridCard as CategoryGridCardComp } from '../../../components/CategoryCard';\nimport ListGridComp from 'reusecore/src/elements/ListGrid';\nimport NoItemFound from '../../../components/NoItemFound';\nimport OnError from '../../../components/OnError';\nimport styled from 'styled-components';\nvar ListGrid = styled(ListGridComp).withConfig({\n  displayName: \"Categories__ListGrid\",\n  componentId: \"sc-1w382l2-0\"\n})([\".singleGridBox{margin-right:-1px;margin-bottom:-1px;transition:all ease 0.3s;&:hover{position:relative;z-index:1;box-shadow:rgba(39,79,117,0.2) 0px 40px 90px -30px;}}@media only screen and (max-width:767px){flex-wrap:nowrap;overflow-x:auto;padding-bottom:10px;}\"]);\n_c = ListGrid;\nvar CategoryGridCard = styled(CategoryGridCardComp).withConfig({\n  displayName: \"Categories__CategoryGridCard\",\n  componentId: \"sc-1w382l2-1\"\n})([\"height:100%;@media only screen and (max-width:767px){background-color:transparent;border:0;padding:0 32px;min-height:auto;}\"]);\n_c2 = CategoryGridCard;\nexport default function CategoryPost() {\n  _s();\n\n  var _this = this;\n\n  var QUERY_VARIABLES = {\n    LIMIT: 8\n  };\n\n  var _useQuery = useQuery(GET_CATEGORIES, {\n    variables: QUERY_VARIABLES\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (error) return __jsx(OnError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  });\n  var categories = !loading && data && data.categories ? data.categories.data : [];\n  categories.sort(function (a, b) {\n    return b.posts.total - a.posts.total;\n  });\n\n  var renderCategoryItem = function renderCategoryItem(item) {\n    var name = item.name,\n        url = item.image.url,\n        slug = item.slug;\n    return __jsx(Link, {\n      href: \"\".concat(SINGLE_CATEGORY_PAGE, \"/[slug]\"),\n      as: \"\".concat(SINGLE_CATEGORY_PAGE, \"/\").concat(slug),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, __jsx(\"a\", {\n      style: {\n        height: '100%',\n        display: 'block'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, __jsx(CategoryGridCard, {\n      imageSrc: url,\n      title: name,\n      style: {\n        marginRight: -1,\n        marginTop: -1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    mdOffset: 3,\n    smOffset: 2,\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, !categories ? __jsx(NoItemFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }) : __jsx(ListGrid, {\n    data: categories,\n    columnWidth: [1, 1 / 2, 1 / 3, 1 / 4],\n    component: renderCategoryItem,\n    loading: loading,\n    placeholder: __jsx(CategoryLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 26\n      }\n    }),\n    limit: QUERY_VARIABLES.LIMIT,\n    componentContainerStyle: {\n      p: 0\n    },\n    componentWrapperStyle: {\n      ml: 0,\n      mr: 0,\n      flexBox: true,\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })));\n}\n\n_s(CategoryPost, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c3 = CategoryPost;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ListGrid\");\n$RefreshReg$(_c2, \"CategoryGridCard\");\n$RefreshReg$(_c3, \"CategoryPost\");","map":{"version":3,"sources":["/Users/bhavikshah/Work/Sellia/sellia-mono/selliafemono/packages/web/containers/Home/Categories/index.js"],"names":["React","Link","Row","Col","GET_CATEGORIES","SINGLE_CATEGORY_PAGE","useQuery","CategoryLoader","CategoryGridCard","CategoryGridCardComp","ListGridComp","NoItemFound","OnError","styled","ListGrid","CategoryPost","QUERY_VARIABLES","LIMIT","variables","data","loading","error","categories","sort","a","b","posts","total","renderCategoryItem","item","name","url","image","slug","height","display","marginRight","marginTop","p","ml","mr","flexBox","flexWrap"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { Row, Col } from 'react-styled-flexboxgrid';\nimport { GET_CATEGORIES } from 'core/graphql/Category.query';\nimport { SINGLE_CATEGORY_PAGE } from 'core/navigation/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport CategoryLoader from '../../../components/Loader/CategoryLoader';\nimport { CategoryGridCard as CategoryGridCardComp } from '../../../components/CategoryCard';\nimport ListGridComp from 'reusecore/src/elements/ListGrid';\nimport NoItemFound from '../../../components/NoItemFound';\nimport OnError from '../../../components/OnError';\n\nimport styled from 'styled-components';\n\nconst ListGrid = styled(ListGridComp)`\n  .singleGridBox {\n    margin-right: -1px;\n    margin-bottom: -1px;\n    transition: all ease 0.3s;\n    &:hover {\n      position: relative;\n      z-index: 1;\n      box-shadow: rgba(39, 79, 117, 0.2) 0px 40px 90px -30px;\n    }\n  }\n\n  @media only screen and (max-width: 767px) {\n    flex-wrap: nowrap;\n    overflow-x: auto;\n    padding-bottom: 10px;\n  }\n`;\n\nconst CategoryGridCard = styled(CategoryGridCardComp)`\n  height: 100%;\n\n  @media only screen and (max-width: 767px) {\n    background-color: transparent;\n    border: 0;\n    padding: 0 32px;\n    min-height: auto;\n  }\n`;\n\nexport default function CategoryPost() {\n  const QUERY_VARIABLES = {\n    LIMIT: 8,\n  };\n  const { data, loading, error } = useQuery(GET_CATEGORIES, {\n    variables: QUERY_VARIABLES,\n  });\n  if (error) return <OnError />;\n\n  const categories =\n    !loading && data && data.categories ? data.categories.data : [];\n  categories.sort((a, b) => b.posts.total - a.posts.total);\n  const renderCategoryItem = item => {\n    const {\n      name,\n      image: { url },\n      slug,\n    } = item;\n    return (\n      <Link\n        href={`${SINGLE_CATEGORY_PAGE}/[slug]`}\n        as={`${SINGLE_CATEGORY_PAGE}/${slug}`}\n      >\n        <a style={{ height: '100%', display: 'block' }}>\n          <CategoryGridCard\n            imageSrc={url}\n            title={name}\n            style={{\n              marginRight: -1,\n              marginTop: -1,\n            }}\n          />\n        </a>\n      </Link>\n    );\n  };\n  return (\n    <Row>\n      <Col xs={12} mdOffset={3} smOffset={2} sm={8}>\n        {!categories ? (\n          <NoItemFound />\n        ) : (\n          <ListGrid\n            data={categories}\n            columnWidth={[1, 1 / 2, 1 / 3, 1 / 4]}\n            component={renderCategoryItem}\n            loading={loading}\n            placeholder={<CategoryLoader />}\n            limit={QUERY_VARIABLES.LIMIT}\n            componentContainerStyle={{ p: 0 }}\n            componentWrapperStyle={{\n              ml: 0,\n              mr: 0,\n              flexBox: true,\n              flexWrap: 'wrap',\n            }}\n          />\n        )}\n      </Col>\n    </Row>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}