{"ast":null,"code":"var _jsxFileName = \"/Users/bhavikshah/Work/Sellia/sellia-mono/selliafemono/packages/web/components/DropdownMenu/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { DropdownMenuWrapper, DropdownMenuItemsWrapper, DropdownMenuItemWrapper } from './style';\n\nconst DropdownMenu = props => {\n  const {\n    0: menuState,\n    1: setMenuState\n  } = useState({\n    show: false\n  });\n  useEffect(() => {\n    window.addEventListener('click', handleDocumentClick);\n    return () => {\n      window.removeEventListener('click', handleDocumentClick);\n    };\n  });\n\n  const handleToggle = () => {\n    setMenuState(prevState => _objectSpread(_objectSpread({}, menuState), {}, {\n      show: !prevState.show\n    }));\n  };\n\n  const handleDocumentClick = () => {\n    if (menuState.show) {\n      handleToggle();\n    }\n  };\n\n  const {\n    content,\n    dropdownItems,\n    dropdownDirection,\n    className\n  } = props;\n  return __jsx(DropdownMenuWrapper, {\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, content), menuState.show && __jsx(DropdownMenuItemsWrapper, {\n    className: className,\n    dropdownDirection: dropdownDirection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, dropdownItems && dropdownItems.map((item, index) => __jsx(DropdownMenuItemWrapper, {\n    key: index,\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, item))));\n};\n\nexport default DropdownMenu;","map":{"version":3,"sources":["/Users/bhavikshah/Work/Sellia/sellia-mono/selliafemono/packages/web/components/DropdownMenu/index.js"],"names":["React","useState","useEffect","DropdownMenuWrapper","DropdownMenuItemsWrapper","DropdownMenuItemWrapper","DropdownMenu","props","menuState","setMenuState","show","window","addEventListener","handleDocumentClick","removeEventListener","handleToggle","prevState","content","dropdownItems","dropdownDirection","className","e","stopPropagation","map","item","index"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,mBADF,EAEEC,wBAFF,EAGEC,uBAHF,QAIO,SAJP;;AAMA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,CAAC;AACzCS,IAAAA,IAAI,EAAE;AADmC,GAAD,CAA1C;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCC,mBAAjC;AACA,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAoCD,mBAApC;AACD,KAFD;AAGD,GALQ,CAAT;;AAOA,QAAME,YAAY,GAAG,MAAM;AACzBN,IAAAA,YAAY,CAACO,SAAS,oCACjBR,SADiB;AAEpBE,MAAAA,IAAI,EAAE,CAACM,SAAS,CAACN;AAFG,MAAV,CAAZ;AAID,GALD;;AAMA,QAAMG,mBAAmB,GAAG,MAAM;AAChC,QAAIL,SAAS,CAACE,IAAd,EAAoB;AAClBK,MAAAA,YAAY;AACb;AACF,GAJD;;AAMA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,aAAX;AAA0BC,IAAAA,iBAA1B;AAA6CC,IAAAA;AAA7C,MAA2Db,KAAjE;AACA,SACE,MAAC,mBAAD;AAAqB,IAAA,OAAO,EAAEc,CAAC,IAAIA,CAAC,CAACC,eAAF,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,OAAO,EAAEP,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BE,OAA9B,CADF,EAEGT,SAAS,CAACE,IAAV,IACC,MAAC,wBAAD;AACE,IAAA,SAAS,EAAEU,SADb;AAEE,IAAA,iBAAiB,EAAED,iBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGD,aAAa,IACZA,aAAa,CAACK,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAChB,MAAC,uBAAD;AAAyB,IAAA,GAAG,EAAEA,KAA9B;AAAqC,IAAA,OAAO,EAAEV,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,IADH,CADF,CALJ,CAHJ,CADF;AAkBD,CA3CD;;AA6CA,eAAelB,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  DropdownMenuWrapper,\n  DropdownMenuItemsWrapper,\n  DropdownMenuItemWrapper,\n} from './style';\n\nconst DropdownMenu = props => {\n  const [menuState, setMenuState] = useState({\n    show: false,\n  });\n\n  useEffect(() => {\n    window.addEventListener('click', handleDocumentClick);\n    return () => {\n      window.removeEventListener('click', handleDocumentClick);\n    };\n  });\n\n  const handleToggle = () => {\n    setMenuState(prevState => ({\n      ...menuState,\n      show: !prevState.show,\n    }));\n  };\n  const handleDocumentClick = () => {\n    if (menuState.show) {\n      handleToggle();\n    }\n  };\n\n  const { content, dropdownItems, dropdownDirection, className } = props;\n  return (\n    <DropdownMenuWrapper onClick={e => e.stopPropagation()}>\n      <span onClick={handleToggle}>{content}</span>\n      {menuState.show && (\n        <DropdownMenuItemsWrapper\n          className={className}\n          dropdownDirection={dropdownDirection}\n        >\n          {dropdownItems &&\n            dropdownItems.map((item, index) => (\n              <DropdownMenuItemWrapper key={index} onClick={handleToggle}>\n                {item}\n              </DropdownMenuItemWrapper>\n            ))}\n        </DropdownMenuItemsWrapper>\n      )}\n    </DropdownMenuWrapper>\n  );\n};\n\nexport default DropdownMenu;\n"]},"metadata":{},"sourceType":"module"}