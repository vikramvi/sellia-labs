{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/bhavikshah/Work/Sellia/sellia-mono/selliafemono/packages/web/pages/categories.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { Grid } from 'react-styled-flexboxgrid';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_CATEGORIES } from 'core/graphql/Category.query';\nimport { SINGLE_CATEGORY_PAGE } from 'core/navigation/constant';\nimport withLayout from '../hoc/withLayout';\nimport { CategoryGridCard } from '../components/CategoryCard';\nimport Box from 'reusecore/src/elements/Box';\nimport ListGrid from 'reusecore/src/elements/ListGrid';\nimport CategoryLoader from '../components/Loader/CategoryLoader';\nimport PageMeta from '../components/PageMeta';\nimport Heading from 'reusecore/src/elements/Heading';\nimport NoItemFound from '../components/NoItemFound';\nimport OnError from '../components/OnError';\nimport { withApollo } from '../helpers/apollo';\nexport default _c3 = withApollo(_c2 = withLayout(_c = _s(function () {\n  _s();\n\n  var _useState = useState(false),\n      loadingMore = _useState[0],\n      toggleLoading = _useState[1];\n\n  var _useState2 = useState(1),\n      page = _useState2[0],\n      paginate = _useState2[1];\n\n  var QUERY_VARIABLES = {\n    LIMIT: 20\n  };\n\n  var _useQuery = useQuery(GET_CATEGORIES, {\n    variables: QUERY_VARIABLES\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore;\n\n  if (error) return __jsx(OnError, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }\n  });\n  var categoryCount = data && data.categories && data.categories.data ? data.categories.data.length : 1;\n  var categories = data && data.categories && data.categories.data ? data.categories.data : [];\n  var totalCategory = data && data.categories ? data.categories.total : 1;\n\n  var renderCategoryItem = function renderCategoryItem(item) {\n    var slug = item.slug,\n        url = item.image.url,\n        name = item.name,\n        posts = item.posts;\n    var postNumber = posts ? posts.total : '';\n    return __jsx(Link, {\n      href: \"\".concat(SINGLE_CATEGORY_PAGE, \"/[slug]\"),\n      as: \"\".concat(SINGLE_CATEGORY_PAGE, \"/\").concat(slug),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, __jsx(CategoryGridCard, {\n      imageSrc: url,\n      title: name,\n      postNumber: \"\".concat(postNumber, \" post\"),\n      height: \"auto\",\n      mb: \"2rem\",\n      boxShadow: \"1px 3px 15px rgba(0, 0, 0, 0.05)\",\n      border: \"none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(PageMeta, {\n    title: \"Categories\",\n    description: \"Categories\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    pt: 70,\n    pb: 70,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    content: \"Categories\",\n    mb: 40,\n    style: {\n      fontSize: 24,\n      fontWeight: 600,\n      color: '#333333'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), !categories.length && !loading ? __jsx(NoItemFound, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }) : __jsx(ListGrid, {\n    data: categories,\n    totalPost: totalCategory,\n    postCount: categoryCount,\n    columnWidth: [1, 1 / 2, 1 / 4],\n    component: renderCategoryItem,\n    loading: loading ? loading : loadingMore,\n    placeholder: __jsx(CategoryLoader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 30\n      }\n    }),\n    limit: QUERY_VARIABLES.LIMIT,\n    handleLoadMore: function handleLoadMore() {\n      toggleLoading(true);\n      paginate(page + 1);\n      fetchMore({\n        variables: {\n          page: page + 1\n        },\n        updateQuery: function updateQuery(prev, _ref) {\n          var fetchMoreResult = _ref.fetchMoreResult;\n\n          if (!fetchMoreResult) {\n            toggleLoading(false);\n            return prev;\n          }\n\n          if (categoryCount && totalCategory) {\n            if (categoryCount <= totalCategory) {\n              toggleLoading(false);\n              return Object.assign({}, prev, {\n                categories: {\n                  data: [].concat(_toConsumableArray(prev.categories.data), _toConsumableArray(fetchMoreResult.categories.data)),\n                  total: totalCategory\n                }\n              });\n            }\n          }\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }))));\n}, \"rGadjvRkkFk17R26hi68/KEVYuw=\", false, function () {\n  return [useQuery];\n})));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"%default%$withApollo$withLayout\");\n$RefreshReg$(_c2, \"%default%$withApollo\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/bhavikshah/Work/Sellia/sellia-mono/selliafemono/packages/web/pages/categories.js"],"names":["useState","Link","Grid","useQuery","GET_CATEGORIES","SINGLE_CATEGORY_PAGE","withLayout","CategoryGridCard","Box","ListGrid","CategoryLoader","PageMeta","Heading","NoItemFound","OnError","withApollo","loadingMore","toggleLoading","page","paginate","QUERY_VARIABLES","LIMIT","variables","data","loading","error","fetchMore","categoryCount","categories","length","totalCategory","total","renderCategoryItem","item","slug","url","image","name","posts","postNumber","fontSize","fontWeight","color","updateQuery","prev","fetchMoreResult","Object","assign"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Link from 'next/link';\nimport { Grid } from 'react-styled-flexboxgrid';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_CATEGORIES } from 'core/graphql/Category.query';\nimport { SINGLE_CATEGORY_PAGE } from 'core/navigation/constant';\nimport withLayout from '../hoc/withLayout';\nimport { CategoryGridCard } from '../components/CategoryCard';\nimport Box from 'reusecore/src/elements/Box';\nimport ListGrid from 'reusecore/src/elements/ListGrid';\nimport CategoryLoader from '../components/Loader/CategoryLoader';\nimport PageMeta from '../components/PageMeta';\n\nimport Heading from 'reusecore/src/elements/Heading';\nimport NoItemFound from '../components/NoItemFound';\nimport OnError from '../components/OnError';\nimport { withApollo } from '../helpers/apollo';\nexport default withApollo(\n  withLayout(() => {\n    const [loadingMore, toggleLoading] = useState(false);\n    const [page, paginate] = useState(1);\n    let QUERY_VARIABLES = {\n      LIMIT: 20,\n    };\n    const { data, loading, error, fetchMore } = useQuery(GET_CATEGORIES, {\n      variables: QUERY_VARIABLES,\n    });\n    if (error) return <OnError />;\n\n    const categoryCount =\n      data && data.categories && data.categories.data\n        ? data.categories.data.length\n        : 1;\n    const categories =\n      data && data.categories && data.categories.data\n        ? data.categories.data\n        : [];\n    const totalCategory = data && data.categories ? data.categories.total : 1;\n    const renderCategoryItem = item => {\n      const {\n        slug,\n        image: { url },\n        name,\n        posts,\n      } = item;\n      const postNumber = posts ? posts.total : '';\n      return (\n        <Link\n          href={`${SINGLE_CATEGORY_PAGE}/[slug]`}\n          as={`${SINGLE_CATEGORY_PAGE}/${slug}`}\n        >\n          <a>\n            <CategoryGridCard\n              imageSrc={url}\n              title={name}\n              postNumber={`${postNumber} post`}\n              height=\"auto\"\n              mb=\"2rem\"\n              boxShadow=\"1px 3px 15px rgba(0, 0, 0, 0.05)\"\n              border=\"none\"\n            />\n          </a>\n        </Link>\n      );\n    };\n\n    return (\n      <>\n        <PageMeta title=\"Categories\" description=\"Categories\" />\n        <Box pt={70} pb={70}>\n          <Grid>\n            <Heading\n              content=\"Categories\"\n              mb={40}\n              style={{ fontSize: 24, fontWeight: 600, color: '#333333' }}\n            />\n            {!categories.length && !loading ? (\n              <NoItemFound />\n            ) : (\n              <ListGrid\n                data={categories}\n                totalPost={totalCategory}\n                postCount={categoryCount}\n                columnWidth={[1, 1 / 2, 1 / 4]}\n                component={renderCategoryItem}\n                loading={loading ? loading : loadingMore}\n                placeholder={<CategoryLoader />}\n                limit={QUERY_VARIABLES.LIMIT}\n                handleLoadMore={() => {\n                  toggleLoading(true);\n                  paginate(page + 1);\n                  fetchMore({\n                    variables: {\n                      page: page + 1,\n                    },\n                    updateQuery: (prev, { fetchMoreResult }) => {\n                      if (!fetchMoreResult) {\n                        toggleLoading(false);\n                        return prev;\n                      }\n                      if (categoryCount && totalCategory) {\n                        if (categoryCount <= totalCategory) {\n                          toggleLoading(false);\n                          return Object.assign({}, prev, {\n                            categories: {\n                              data: [\n                                ...prev.categories.data,\n                                ...fetchMoreResult.categories.data,\n                              ],\n                              total: totalCategory,\n                            },\n                          });\n                        }\n                      }\n                    },\n                  });\n                }}\n              />\n            )}\n          </Grid>\n        </Box>\n      </>\n    );\n  })\n);\n"]},"metadata":{},"sourceType":"module"}