{"ast":null,"code":"var _jsxFileName = \"/Users/bhavikshah/Work/Sellia/sellia-mono/selliafemono/packages/web/containers/Home/RecentPost/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { CURRENCY } from '../../../Config';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ALL_POST } from 'core/graphql/AllPost.query';\nimport { RECENT_POST_PAGE, SINGLE_POST_PAGE } from 'core/navigation/constant';\nimport { PostLoader } from '../../../components/Placeholder';\nimport PostCard from '../../../components/PostCard';\nimport ListGrid from 'reusecore/src/elements/ListGrid';\nimport Box from 'reusecore/src/elements/Box';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Button from 'reusecore/src/elements/Button';\nimport NoItemFound from '../../../components/NoItemFound';\nimport OnError from '../../../components/OnError';\nexport default function RecentPost() {\n  _s();\n\n  var _this = this;\n\n  // QUERY SECTION\n  var QUERY_VARIABLES = {\n    LIMIT: 8\n  };\n\n  var _useQuery = useQuery(GET_ALL_POST, {\n    variables: QUERY_VARIABLES\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; // Error Rendering.\n\n\n  if (error) return __jsx(OnError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }); // Extract Post Data\n\n  var recentPosts = data && data.posts ? data.posts.data : []; // Post Loop Control Area\n\n  var renderRecentPost = function renderRecentPost(item) {\n    var title = item.title,\n        slug = item.slug,\n        price = item.price,\n        _item$image = item.image,\n        url = _item$image.url,\n        largeUrl = _item$image.largeUrl;\n    return __jsx(Link, {\n      href: \"\".concat(SINGLE_POST_PAGE, \"/[slug]\"),\n      as: \"\".concat(SINGLE_POST_PAGE, \"/\").concat(slug),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, __jsx(PostCard, {\n      currency: CURRENCY,\n      title: title,\n      price: price,\n      imageSrc: [url, largeUrl],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    flexBox: true,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    content: \"Recently Uploaded\",\n    mb: 0,\n    fontSize: 20,\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), __jsx(Link, {\n    href: RECENT_POST_PAGE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    title: \"See all\",\n    color: \"#8c8c8c\",\n    fontWeight: 500,\n    variant: \"textButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })))), __jsx(Box, {\n    mt: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, !recentPosts ? __jsx(NoItemFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }) : __jsx(ListGrid, {\n    data: recentPosts,\n    columnWidth: [1, 1 / 2, 1 / 3, 1 / 4],\n    limit: QUERY_VARIABLES.LIMIT,\n    component: renderRecentPost,\n    loading: loading,\n    placeholder: __jsx(PostLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })));\n}\n\n_s(RecentPost, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = RecentPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecentPost\");","map":{"version":3,"sources":["/Users/bhavikshah/Work/Sellia/sellia-mono/selliafemono/packages/web/containers/Home/RecentPost/index.js"],"names":["React","Link","CURRENCY","useQuery","GET_ALL_POST","RECENT_POST_PAGE","SINGLE_POST_PAGE","PostLoader","PostCard","ListGrid","Box","Heading","Button","NoItemFound","OnError","RecentPost","QUERY_VARIABLES","LIMIT","variables","data","loading","error","recentPosts","posts","renderRecentPost","item","title","slug","price","image","url","largeUrl"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { CURRENCY } from '../../../Config';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ALL_POST } from 'core/graphql/AllPost.query';\nimport { RECENT_POST_PAGE, SINGLE_POST_PAGE } from 'core/navigation/constant';\nimport { PostLoader } from '../../../components/Placeholder';\n\nimport PostCard from '../../../components/PostCard';\nimport ListGrid from 'reusecore/src/elements/ListGrid';\nimport Box from 'reusecore/src/elements/Box';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Button from 'reusecore/src/elements/Button';\nimport NoItemFound from '../../../components/NoItemFound';\nimport OnError from '../../../components/OnError';\n\nexport default function RecentPost() {\n  // QUERY SECTION\n  let QUERY_VARIABLES = {\n    LIMIT: 8,\n  };\n\n  const { data, loading, error } = useQuery(GET_ALL_POST, {\n    variables: QUERY_VARIABLES,\n  });\n\n  // Error Rendering.\n  if (error) return <OnError />;\n  // Extract Post Data\n  const recentPosts = data && data.posts ? data.posts.data : [];\n  // Post Loop Control Area\n\n  const renderRecentPost = item => {\n    const {\n      title,\n      slug,\n      price,\n      image: { url, largeUrl },\n    } = item;\n    return (\n      <Link\n        href={`${SINGLE_POST_PAGE}/[slug]`}\n        as={`${SINGLE_POST_PAGE}/${slug}`}\n      >\n        <a>\n          <PostCard\n            currency={CURRENCY}\n            title={title}\n            price={price}\n            imageSrc={[url, largeUrl]}\n          />\n        </a>\n      </Link>\n    );\n  };\n\n  return (\n    <>\n      <Box flexBox justifyContent=\"space-between\" alignItems=\"center\">\n        <Heading\n          content=\"Recently Uploaded\"\n          mb={0}\n          fontSize={20}\n          fontWeight={600}\n        />\n        <Link href={RECENT_POST_PAGE}>\n          <a>\n            <Button\n              title=\"See all\"\n              color=\"#8c8c8c\"\n              fontWeight={500}\n              variant=\"textButton\"\n            />\n          </a>\n        </Link>\n      </Box>\n      <Box mt={20}>\n        {!recentPosts ? (\n          <NoItemFound />\n        ) : (\n          <ListGrid\n            data={recentPosts}\n            columnWidth={[1, 1 / 2, 1 / 3, 1 / 4]}\n            limit={QUERY_VARIABLES.LIMIT}\n            component={renderRecentPost}\n            loading={loading}\n            placeholder={<PostLoader />}\n          />\n        )}\n      </Box>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}