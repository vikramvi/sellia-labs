{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport Input from '../Input';\nimport LocationWrapper, { SearchResultWrapper } from './style';\n\nvar LocationSearchInput = function LocationSearchInput(props) {\n  var handleSelect = function handleSelect(selected) {\n    var address = selected;\n    props.handleAddress(address);\n    geocodeByAddress(selected).then(function (results) {\n      return getLatLng(results[0]);\n    }).then(function (latLng) {\n      return props.handleLocation(latLng, address);\n    })[\"catch\"](function (error) {\n      return console.error('Error', error);\n    });\n  };\n\n  var handleCloseClick = function handleCloseClick() {\n    setAddressState(_objectSpread({}, addressState, {\n      address: ''\n    }));\n  };\n\n  return __jsx(PlacesAutocomplete, {\n    value: props.address,\n    onChange: props.handleChange,\n    onSelect: handleSelect\n  }, function (_ref) {\n    var getInputProps = _ref.getInputProps,\n        suggestions = _ref.suggestions,\n        getSuggestionItemProps = _ref.getSuggestionItemProps,\n        loading = _ref.loading;\n    return __jsx(LocationWrapper, null, __jsx(\"div\", null, __jsx(Input, _extends({}, getInputProps(), {\n      required: \"required\",\n      label: \"Location\"\n    }))), props.address && __jsx(SearchResultWrapper, {\n      className: \"autocomplete-dropdown-container\"\n    }, loading && __jsx(\"div\", null, \"Loading...\"), suggestions.map(function (suggestion) {\n      var className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      var style = suggestion.active ? {\n        backgroundColor: '#e2e2e2'\n      } : {\n        backgroundColor: '#ffffff'\n      };\n      return __jsx(\"div\", getSuggestionItemProps(suggestion, {\n        className: className,\n        style: style\n      }), __jsx(\"span\", null, suggestion.description));\n    })));\n  });\n};\n\nexport default LocationSearchInput;","map":null,"metadata":{},"sourceType":"module"}