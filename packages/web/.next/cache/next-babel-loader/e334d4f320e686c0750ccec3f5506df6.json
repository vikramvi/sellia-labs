{"ast":null,"code":"import gql from 'graphql-tag';\nconst AuthorPostsFragment = gql`\n  fragment AuthorPostsQuery on Post {\n    id\n    slug\n    image {\n      url\n      largeUrl\n    }\n    title\n    price\n  }\n`;\nexport const GET_PROFILE_INFO = gql`\n  query Author($USERNAME: ID!, $LIMIT: Int) {\n    author(id: $USERNAME) {\n      id\n      name\n      username\n      address\n      mobile {\n        number\n      }\n      website\n      image {\n        url\n        largeUrl\n      }\n      posts(limit: $LIMIT) {\n        total\n      }\n      favourite(limit: $LIMIT) {\n        total\n      }\n      draft(limit: $LIMIT) {\n        total\n      }\n    }\n  }\n`;\nexport const GET_AUTHOR_INFO = gql`\n  query Author($USERNAME: ID!) {\n    author(id: $USERNAME) {\n      id\n      name\n      image {\n        url\n        largeUrl\n      }\n    }\n  }\n`;\nexport const GET_PUBLISHED_POST = gql`\n  query Author($USERNAME: ID!, $LIMIT: Int, $page: Int) {\n    author(id: $USERNAME) {\n      id\n      username\n      posts(limit: $LIMIT, page: $page) {\n        data {\n          ...AuthorPostsQuery\n        }\n        total\n      }\n    }\n  }\n  ${AuthorPostsFragment}\n`;\nexport const GET_FAVOURITE_POST = gql`\n  query Author($USERNAME: ID!, $LIMIT: Int, $page: Int) {\n    author(id: $USERNAME) {\n      id\n      favourite(limit: $LIMIT, page: $page) {\n        data {\n          ...AuthorPostsQuery\n        }\n        total\n      }\n    }\n  }\n  ${AuthorPostsFragment}\n`;\nexport const GET_DRAFT_POST = gql`\n  query Author($USERNAME: ID!, $LIMIT: Int, $page: Int) {\n    author(id: $USERNAME) {\n      id\n      draft(limit: $LIMIT, page: $page) {\n        data {\n          ...AuthorPostsQuery\n        }\n        total\n      }\n    }\n  }\n  ${AuthorPostsFragment}\n`;","map":null,"metadata":{},"sourceType":"module"}