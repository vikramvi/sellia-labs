{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { ShareModalWrapper, ShareLinkWrapper, ShareLink, CopyButton, Notify } from './style';\nimport Text from 'reusecore/src/elements/Text';\nimport SocialShare from '../../../components/SocialShare';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nvar ShareModal = /*#__PURE__*/function (_Component) {\n  _inherits(ShareModal, _Component);\n\n  var _super = _createSuper(ShareModal);\n\n  function ShareModal(props) {\n    var _this;\n\n    _classCallCheck(this, ShareModal);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isCopied: false,\n      text: props.data.link\n    };\n    return _this;\n  }\n\n  _createClass(ShareModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(ShareModalWrapper, null, __jsx(Text, {\n        type: \"heading\",\n        as: \"h3\",\n        fontSize: 20,\n        fontWeight: 600,\n        color: \"#333333\",\n        mb: \"5px\",\n        content: this.props.data.title\n      }), __jsx(Text, {\n        content: \"Posted by \".concat(this.props.data.author),\n        type: \"normal\",\n        size: \"medium\",\n        color: \"#595959\",\n        mb: 15,\n        style: {\n          fontWeight: '400'\n        }\n      }), __jsx(ShareLinkWrapper, null, __jsx(ShareLink, {\n        type: \"text\",\n        value: this.state.text,\n        onChange: function onChange(e) {\n          _this2.setState({\n            text: e.target.value,\n            isCpoied: false\n          });\n        }\n      }), __jsx(CopyToClipboard, {\n        onCopy: function onCopy() {\n          _this2.setState({\n            isCpoied: true\n          });\n        },\n        text: this.state.text\n      }, __jsx(CopyButton, null, this.state.isCpoied ? __jsx(Notify, null, \"Copied\") : null, \"Copy link\"))), __jsx(SocialShare, {\n        url: this.state.text,\n        title: this.props.data.title\n      }));\n    }\n  }]);\n\n  return ShareModal;\n}(Component);\n\nexport default ShareModal;","map":null,"metadata":{},"sourceType":"module"}