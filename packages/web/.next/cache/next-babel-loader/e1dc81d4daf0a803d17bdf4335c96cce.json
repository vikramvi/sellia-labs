{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport Router from 'next/router';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Icon from 'react-icons-kit';\nimport { locked } from 'react-icons-kit/iconic/locked';\nimport { phone } from 'react-icons-kit/iconic/phone';\nimport Text from 'reusecore/src/elements/Text';\nimport Button from 'reusecore/src/elements/Button';\nimport AuthHeader from '../../components/AuthHeader';\nimport Input from '../../components/Input';\nimport Box from 'reusecore/src/elements/Box';\nimport { FormGroup, ErrorNotification } from '../SignInForm/style';\nimport { REGISTER } from 'core/graphql/Mutations';\nimport { useMutation } from '@apollo/react-hooks';\nimport AuthHelper from '../../helpers/authHelper';\nimport { setFirebaseCookie } from '../../helpers/session';\nimport redirect from '../../helpers/redirect';\nvar SignupEnhancher = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: function mapPropsToValues(props) {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Invalid email address').required('Email is required!'),\n    password: Yup.string().required('Password is required')\n  })\n});\nvar token = '';\n\nvar SignUpForm = function SignUpForm(_ref) {\n  var values = _ref.values,\n      touched = _ref.touched,\n      errors = _ref.errors,\n      handleChange = _ref.handleChange,\n      handleSubmit = _ref.handleSubmit,\n      handleBlur = _ref.handleBlur,\n      setFieldValue = _ref.setFieldValue;\n\n  var _useState = useState({}),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useMutation = useMutation(REGISTER),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      registerMutation = _useMutation2[0],\n      data = _useMutation2[1].data;\n\n  handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var email, password, provider, _yield$AuthHelper$sig, user, _error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n\n              if (Object.keys(errors).length) {\n                _context.next = 17;\n                break;\n              }\n\n              email = values.email, password = values.password;\n              provider = 'password';\n              _context.next = 6;\n              return AuthHelper.signUp(provider, email, password);\n\n            case 6:\n              _yield$AuthHelper$sig = _context.sent;\n              user = _yield$AuthHelper$sig.user;\n              _error = _yield$AuthHelper$sig.error;\n\n              if (!user) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 12;\n              return user.getIdToken();\n\n            case 12:\n              token = _context.sent;\n              setFieldValue('token', token);\n              _context.next = 17;\n              break;\n\n            case 16:\n              if (_error) {\n                setLoading(false);\n                setError(_error);\n              }\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res, user;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n\n              if (!values.token) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 4;\n              return registerMutation({\n                variables: {\n                  user: {\n                    email: values.email,\n                    token: values.token\n                  }\n                }\n              });\n\n            case 4:\n              res = _context2.sent;\n\n              if (res && res.data && res.data.register) {\n                setLoading(false);\n                user = res.data.register;\n                setFirebaseCookie('id_token', token);\n                setFirebaseCookie('user', _objectSpread({}, user));\n                redirect({}, '/');\n              }\n\n            case 6:\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              setLoading(false);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }))();\n  }, [values.token]);\n  return __jsx(React.Fragment, null, __jsx(AuthHeader, null), __jsx(FormGroup, {\n    className: errors.email ? 'hasErrorMsg' : ''\n  }, __jsx(Input, {\n    elementType: \"input\",\n    elementConfig: {\n      type: 'email',\n      required: 'required'\n    },\n    value: values.email,\n    error: errors.email,\n    touched: touched,\n    label: \"Email\",\n    onBlur: handleBlur('email'),\n    changed: handleChange('email'),\n    highlightColor: \"#f09\"\n  }), __jsx(\"span\", {\n    className: \"errorMsg\"\n  }, errors.email && touched.email && errors.email)), __jsx(FormGroup, {\n    className: errors.password ? 'hasErrorMsg' : ''\n  }, __jsx(Input, {\n    elementType: \"input\",\n    elementConfig: {\n      type: 'password',\n      required: 'required'\n    },\n    value: values.password,\n    error: errors.password,\n    onBlur: handleBlur('password'),\n    touched: touched,\n    label: \"Password\",\n    changed: handleChange('password')\n  }), __jsx(\"span\", {\n    className: \"errorMsg\"\n  }, errors.password && touched.password && errors.password)), error.message ? __jsx(Box, {\n    flexBox: true,\n    mt: 20,\n    mb: 15,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, __jsx(ErrorNotification, null, error.message)) : '', __jsx(Button, {\n    onClick: handleSubmit,\n    title: \"Sign up now\",\n    width: 1,\n    isLoading: loading,\n    loaderColor: \"#fff\",\n    icon: __jsx(Icon, {\n      icon: locked,\n      size: 21\n    }),\n    mt: 20\n  }), __jsx(Box, {\n    flexBox: true,\n    mt: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Text, {\n    content: \" Have an account ?\",\n    color: \"#8C8C8C\",\n    mb: \"0\"\n  }), __jsx(Button, {\n    title: \"Sign In\",\n    variant: \"textButton\",\n    ml: \"5px\",\n    onClick: function onClick() {\n      return Router.push('/signin');\n    }\n  })));\n};\n\nexport default SignupEnhancher(SignUpForm);","map":null,"metadata":{},"sourceType":"module"}