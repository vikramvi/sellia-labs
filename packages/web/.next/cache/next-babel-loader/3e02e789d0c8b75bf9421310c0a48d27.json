{"ast":null,"code":"var _jsxFileName = \"/Users/bhavikshah/Work/Sellia/sellia-mono/selliafemono/node_modules/reusecore/src/elements/Range-with-RC-SLIDE/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-slider/assets/index.css';\nimport RangeBoxStyle from './range.style';\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nconst toolTipHandleFunc = props => {\n  const {\n    value,\n    dragging,\n    index\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"value\", \"dragging\", \"index\"]);\n\n  return __jsx(Tooltip, {\n    prefixCls: \"reusecore__rc_slider_tooltip rc-slider-tooltip\",\n    overlay: value,\n    visible: dragging,\n    placement: \"top\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(Handle, _extends({\n    value: value\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  })));\n};\n\nconst SliderBox = props => {\n  const {\n    min,\n    max,\n    stepper,\n    dots,\n    slideDefaultValue,\n    vertical,\n    disabled,\n    handleChangefunc\n  } = props,\n        others = _objectWithoutProperties(props, [\"min\", \"max\", \"stepper\", \"dots\", \"slideDefaultValue\", \"vertical\", \"disabled\", \"handleChangefunc\"]);\n\n  return __jsx(Slider, _extends({\n    dots: dots,\n    min: min,\n    max: max,\n    step: stepper,\n    value: slideDefaultValue,\n    onChange: handleChangefunc,\n    disabled: disabled,\n    handle: toolTipHandleFunc,\n    vertical: vertical\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst RangeBox = props => {\n  const {\n    min,\n    max,\n    stepper,\n    unit,\n    dots,\n    placement,\n    rangeDefaultValue,\n    vertical,\n    disabled,\n    handleChangefunc\n  } = props,\n        others = _objectWithoutProperties(props, [\"min\", \"max\", \"stepper\", \"unit\", \"dots\", \"placement\", \"rangeDefaultValue\", \"vertical\", \"disabled\", \"handleChangefunc\"]);\n\n  const defaultThresholdInit = rangeDefaultValue && rangeDefaultValue[0] ? rangeDefaultValue[0] : 0;\n  const defaultThresholdLast = rangeDefaultValue && rangeDefaultValue[1] ? rangeDefaultValue[1] : 0;\n  const toolTipConfig = {\n    placement,\n    prefixCls: 'reusecore__rc_slider_tooltip rc-slider-tooltip'\n  };\n  return __jsx(Range, _extends({\n    dots: dots,\n    min: min,\n    max: max,\n    step: stepper,\n    value: [defaultThresholdInit, defaultThresholdLast],\n    onChange: handleChangefunc,\n    disabled: disabled,\n    tipFormatter: value => `${value}${unit}`,\n    tipProps: toolTipConfig,\n    vertical: vertical\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default ((_ref) => {\n  let {\n    className,\n    labelText,\n    labelPosition,\n    type\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"labelText\", \"labelPosition\", \"type\"]);\n\n  // Add all classs to an array\n  const addAllClasses = ['reusecore__rangebox']; // Add label position class\n\n  if (labelPosition) {\n    addAllClasses.push(`label_${labelPosition}`);\n  } // label control\n\n\n  const position = labelPosition || 'right';\n\n  const LabelField = labelText && __jsx(\"span\", {\n    className: \"reusecore__field-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, labelText); // className prop checking\n\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, __jsx(RangeBoxStyle, {\n    className: addAllClasses.join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, position === 'left' || position === 'right' ? LabelField : '', type && type === 'range' ? __jsx(RangeBox, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })) : __jsx(SliderBox, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  })))));\n});\nRangeBox.propTypes = {\n  /** ClassName of the range-box */\n  className: PropTypes.string,\n\n  /** labelText of the range-box field */\n  labelText: PropTypes.string,\n\n  /** labelText of the range-box field */\n  labelPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** type of the range-box  */\n  type: PropTypes.oneOf(['range', 'slide']).isRequired,\n\n  /** toolitip-placement of the range-box [for type=\"range\" only]  */\n  placement: PropTypes.oneOf(['left', 'right', 'top', 'bottom', 'topLeft', 'topRight', 'bottomLeft', 'bottomRight']),\n\n  /** Minimum value of the range-box field */\n  min: PropTypes.number.isRequired,\n\n  /** Maximum value of the range-box field */\n  max: PropTypes.number.isRequired,\n\n  /** Stepper value of the range-box field */\n  stepper: PropTypes.number.isRequired,\n\n  /** Default value of the range-box field [for type=\"slide\" only] */\n  slideDefaultValue: PropTypes.number,\n\n  /** Default value of the range-box field [for type=\"range\" only] */\n  rangeDefaultValue: PropTypes.array,\n\n  /** Unit value of the range-box tooltip field [for type=\"range\" only] */\n  unit: PropTypes.string,\n\n  /** dots of the range-box field  */\n  dots: PropTypes.bool,\n\n  /** disabled of the range-box field */\n  disabled: PropTypes.bool,\n\n  /** vertical of the range-box field */\n  vertical: PropTypes.bool\n};\n/** RangeBox default proptype */\n\nRangeBox.defaultProps = {\n  labelText: 'ReuseCore RangeBox',\n  labelPosition: 'right',\n  className: 'rangebox_wrapper_className',\n  type: 'slide',\n  disabled: false,\n  min: 0,\n  max: 100,\n  stepper: 5,\n  unit: '',\n  placement: 'top',\n  slideDefaultValue: 3,\n  rangeDefaultValue: [0, 50],\n  dots: true,\n  vertical: false\n};","map":{"version":3,"sources":["/Users/bhavikshah/Work/Sellia/sellia-mono/selliafemono/node_modules/reusecore/src/elements/Range-with-RC-SLIDE/index.js"],"names":["React","Fragment","PropTypes","Slider","Tooltip","RangeBoxStyle","createSliderWithTooltip","Range","Handle","toolTipHandleFunc","props","value","dragging","index","restProps","SliderBox","min","max","stepper","dots","slideDefaultValue","vertical","disabled","handleChangefunc","others","RangeBox","unit","placement","rangeDefaultValue","defaultThresholdInit","defaultThresholdLast","toolTipConfig","prefixCls","className","labelText","labelPosition","type","addAllClasses","push","position","LabelField","join","propTypes","string","oneOf","isRequired","number","array","bool","defaultProps"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,4BAAP;AACA,OAAOC,aAAP,MAA0B,eAA1B;AAEA,MAAMC,uBAAuB,GAAGH,MAAM,CAACG,uBAAvC;AACA,MAAMC,KAAK,GAAGD,uBAAuB,CAACH,MAAM,CAACI,KAAR,CAArC;AACA,MAAMC,MAAM,GAAGL,MAAM,CAACK,MAAtB;;AAEA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AACjC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAA2CH,KAAjD;AAAA,QAAmCI,SAAnC,4BAAiDJ,KAAjD;;AACA,SACE,MAAC,OAAD;AACE,IAAA,SAAS,EAAC,gDADZ;AAEE,IAAA,OAAO,EAAEC,KAFX;AAGE,IAAA,OAAO,EAAEC,QAHX;AAIE,IAAA,SAAS,EAAC,KAJZ;AAKE,IAAA,GAAG,EAAEC,KALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAEF;AAAf,KAA0BG,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPF,CADF;AAWD,CAbD;;AAeA,MAAMC,SAAS,GAAGL,KAAK,IAAI;AACzB,QAAM;AACJM,IAAAA,GADI;AAEJC,IAAAA,GAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,iBALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA,QAPI;AAQJC,IAAAA;AARI,MAUFb,KAVJ;AAAA,QASKc,MATL,4BAUId,KAVJ;;AAWA,SACE,MAAC,MAAD;AACE,IAAA,IAAI,EAAES,IADR;AAEE,IAAA,GAAG,EAAEH,GAFP;AAGE,IAAA,GAAG,EAAEC,GAHP;AAIE,IAAA,IAAI,EAAEC,OAJR;AAKE,IAAA,KAAK,EAAEE,iBALT;AAME,IAAA,QAAQ,EAAEG,gBANZ;AAOE,IAAA,QAAQ,EAAED,QAPZ;AAQE,IAAA,MAAM,EAAEb,iBARV;AASE,IAAA,QAAQ,EAAEY;AATZ,KAUMG,MAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAcD,CA1BD;;AA4BA,MAAMC,QAAQ,GAAGf,KAAK,IAAI;AACxB,QAAM;AACJM,IAAAA,GADI;AAEJC,IAAAA,GAFI;AAGJC,IAAAA,OAHI;AAIJQ,IAAAA,IAJI;AAKJP,IAAAA,IALI;AAMJQ,IAAAA,SANI;AAOJC,IAAAA,iBAPI;AAQJP,IAAAA,QARI;AASJC,IAAAA,QATI;AAUJC,IAAAA;AAVI,MAYFb,KAZJ;AAAA,QAWKc,MAXL,4BAYId,KAZJ;;AAaA,QAAMmB,oBAAoB,GACxBD,iBAAiB,IAAIA,iBAAiB,CAAC,CAAD,CAAtC,GAA4CA,iBAAiB,CAAC,CAAD,CAA7D,GAAmE,CADrE;AAEA,QAAME,oBAAoB,GACxBF,iBAAiB,IAAIA,iBAAiB,CAAC,CAAD,CAAtC,GAA4CA,iBAAiB,CAAC,CAAD,CAA7D,GAAmE,CADrE;AAEA,QAAMG,aAAa,GAAG;AACpBJ,IAAAA,SADoB;AAEpBK,IAAAA,SAAS,EAAE;AAFS,GAAtB;AAIA,SACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAEb,IADR;AAEE,IAAA,GAAG,EAAEH,GAFP;AAGE,IAAA,GAAG,EAAEC,GAHP;AAIE,IAAA,IAAI,EAAEC,OAJR;AAKE,IAAA,KAAK,EAAE,CAACW,oBAAD,EAAuBC,oBAAvB,CALT;AAME,IAAA,QAAQ,EAAEP,gBANZ;AAOE,IAAA,QAAQ,EAAED,QAPZ;AAQE,IAAA,YAAY,EAAEX,KAAK,IAAK,GAAEA,KAAM,GAAEe,IAAK,EARzC;AASE,IAAA,QAAQ,EAAEK,aATZ;AAUE,IAAA,QAAQ,EAAEV;AAVZ,KAWMG,MAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAeD,CArCD;;AAuCA,gBAAe,UAA6D;AAAA,MAA5D;AAAES,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA,aAAxB;AAAuCC,IAAAA;AAAvC,GAA4D;AAAA,MAAZ1B,KAAY;;AAC1E;AACA,QAAM2B,aAAa,GAAG,CAAC,qBAAD,CAAtB,CAF0E,CAG1E;;AACA,MAAIF,aAAJ,EAAmB;AACjBE,IAAAA,aAAa,CAACC,IAAd,CAAoB,SAAQH,aAAc,EAA1C;AACD,GANyE,CAO1E;;;AACA,QAAMI,QAAQ,GAAGJ,aAAa,IAAI,OAAlC;;AACA,QAAMK,UAAU,GAAGN,SAAS,IAC1B;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CA,SAA1C,CADF,CAT0E,CAY1E;;;AACA,MAAID,SAAJ,EAAe;AACbI,IAAAA,aAAa,CAACC,IAAd,CAAmBL,SAAnB;AACD;;AACD,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,SAAS,EAAEI,aAAa,CAACI,IAAd,CAAmB,GAAnB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,OAApC,GAA8CC,UAA9C,GAA2D,EAD9D,EAEGJ,IAAI,IAAIA,IAAI,KAAK,OAAjB,GACC,MAAC,QAAD,eAAc1B,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,GAGC,MAAC,SAAD,eAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALJ,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,CADF,CADF;AAiBD,CAjCD;AAmCAe,QAAQ,CAACiB,SAAT,GAAqB;AACnB;AACAT,EAAAA,SAAS,EAAE/B,SAAS,CAACyC,MAFF;;AAInB;AACAT,EAAAA,SAAS,EAAEhC,SAAS,CAACyC,MALF;;AAOnB;AACAR,EAAAA,aAAa,EAAEjC,SAAS,CAAC0C,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,CAAhB,CARI;;AAUnB;AACAR,EAAAA,IAAI,EAAElC,SAAS,CAAC0C,KAAV,CAAgB,CAAC,OAAD,EAAU,OAAV,CAAhB,EAAoCC,UAXvB;;AAanB;AACAlB,EAAAA,SAAS,EAAEzB,SAAS,CAAC0C,KAAV,CAAgB,CACzB,MADyB,EAEzB,OAFyB,EAGzB,KAHyB,EAIzB,QAJyB,EAKzB,SALyB,EAMzB,UANyB,EAOzB,YAPyB,EAQzB,aARyB,CAAhB,CAdQ;;AAyBnB;AACA5B,EAAAA,GAAG,EAAEd,SAAS,CAAC4C,MAAV,CAAiBD,UA1BH;;AA4BnB;AACA5B,EAAAA,GAAG,EAAEf,SAAS,CAAC4C,MAAV,CAAiBD,UA7BH;;AA+BnB;AACA3B,EAAAA,OAAO,EAAEhB,SAAS,CAAC4C,MAAV,CAAiBD,UAhCP;;AAkCnB;AACAzB,EAAAA,iBAAiB,EAAElB,SAAS,CAAC4C,MAnCV;;AAqCnB;AACAlB,EAAAA,iBAAiB,EAAE1B,SAAS,CAAC6C,KAtCV;;AAwCnB;AACArB,EAAAA,IAAI,EAAExB,SAAS,CAACyC,MAzCG;;AA2CnB;AACAxB,EAAAA,IAAI,EAAEjB,SAAS,CAAC8C,IA5CG;;AA8CnB;AACA1B,EAAAA,QAAQ,EAAEpB,SAAS,CAAC8C,IA/CD;;AAiDnB;AACA3B,EAAAA,QAAQ,EAAEnB,SAAS,CAAC8C;AAlDD,CAArB;AAqDA;;AACAvB,QAAQ,CAACwB,YAAT,GAAwB;AACtBf,EAAAA,SAAS,EAAE,oBADW;AAEtBC,EAAAA,aAAa,EAAE,OAFO;AAGtBF,EAAAA,SAAS,EAAE,4BAHW;AAItBG,EAAAA,IAAI,EAAE,OAJgB;AAKtBd,EAAAA,QAAQ,EAAE,KALY;AAMtBN,EAAAA,GAAG,EAAE,CANiB;AAOtBC,EAAAA,GAAG,EAAE,GAPiB;AAQtBC,EAAAA,OAAO,EAAE,CARa;AAStBQ,EAAAA,IAAI,EAAE,EATgB;AAUtBC,EAAAA,SAAS,EAAE,KAVW;AAWtBP,EAAAA,iBAAiB,EAAE,CAXG;AAYtBQ,EAAAA,iBAAiB,EAAE,CAAC,CAAD,EAAI,EAAJ,CAZG;AAatBT,EAAAA,IAAI,EAAE,IAbgB;AActBE,EAAAA,QAAQ,EAAE;AAdY,CAAxB","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-slider/assets/index.css';\nimport RangeBoxStyle from './range.style';\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nconst toolTipHandleFunc = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"reusecore__rc_slider_tooltip rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nconst SliderBox = props => {\n  const {\n    min,\n    max,\n    stepper,\n    dots,\n    slideDefaultValue,\n    vertical,\n    disabled,\n    handleChangefunc,\n    ...others\n  } = props;\n  return (\n    <Slider\n      dots={dots}\n      min={min}\n      max={max}\n      step={stepper}\n      value={slideDefaultValue}\n      onChange={handleChangefunc}\n      disabled={disabled}\n      handle={toolTipHandleFunc}\n      vertical={vertical}\n      {...others}\n    />\n  );\n};\n\nconst RangeBox = props => {\n  const {\n    min,\n    max,\n    stepper,\n    unit,\n    dots,\n    placement,\n    rangeDefaultValue,\n    vertical,\n    disabled,\n    handleChangefunc,\n    ...others\n  } = props;\n  const defaultThresholdInit =\n    rangeDefaultValue && rangeDefaultValue[0] ? rangeDefaultValue[0] : 0;\n  const defaultThresholdLast =\n    rangeDefaultValue && rangeDefaultValue[1] ? rangeDefaultValue[1] : 0;\n  const toolTipConfig = {\n    placement,\n    prefixCls: 'reusecore__rc_slider_tooltip rc-slider-tooltip'\n  };\n  return (\n    <Range\n      dots={dots}\n      min={min}\n      max={max}\n      step={stepper}\n      value={[defaultThresholdInit, defaultThresholdLast]}\n      onChange={handleChangefunc}\n      disabled={disabled}\n      tipFormatter={value => `${value}${unit}`}\n      tipProps={toolTipConfig}\n      vertical={vertical}\n      {...others}\n    />\n  );\n};\n\nexport default ({ className, labelText, labelPosition, type, ...props }) => {\n  // Add all classs to an array\n  const addAllClasses = ['reusecore__rangebox'];\n  // Add label position class\n  if (labelPosition) {\n    addAllClasses.push(`label_${labelPosition}`);\n  }\n  // label control\n  const position = labelPosition || 'right';\n  const LabelField = labelText && (\n    <span className=\"reusecore__field-label\">{labelText}</span>\n  );\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n  return (\n    <Fragment>\n      <RangeBoxStyle className={addAllClasses.join(' ')}>\n        <label>\n          {position === 'left' || position === 'right' ? LabelField : ''}\n          {type && type === 'range' ? (\n            <RangeBox {...props} />\n          ) : (\n            <SliderBox {...props} />\n          )}\n          <div>\n            <div />\n          </div>\n        </label>\n      </RangeBoxStyle>\n    </Fragment>\n  );\n};\n\nRangeBox.propTypes = {\n  /** ClassName of the range-box */\n  className: PropTypes.string,\n\n  /** labelText of the range-box field */\n  labelText: PropTypes.string,\n\n  /** labelText of the range-box field */\n  labelPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** type of the range-box  */\n  type: PropTypes.oneOf(['range', 'slide']).isRequired,\n\n  /** toolitip-placement of the range-box [for type=\"range\" only]  */\n  placement: PropTypes.oneOf([\n    'left',\n    'right',\n    'top',\n    'bottom',\n    'topLeft',\n    'topRight',\n    'bottomLeft',\n    'bottomRight'\n  ]),\n\n  /** Minimum value of the range-box field */\n  min: PropTypes.number.isRequired,\n\n  /** Maximum value of the range-box field */\n  max: PropTypes.number.isRequired,\n\n  /** Stepper value of the range-box field */\n  stepper: PropTypes.number.isRequired,\n\n  /** Default value of the range-box field [for type=\"slide\" only] */\n  slideDefaultValue: PropTypes.number,\n\n  /** Default value of the range-box field [for type=\"range\" only] */\n  rangeDefaultValue: PropTypes.array,\n\n  /** Unit value of the range-box tooltip field [for type=\"range\" only] */\n  unit: PropTypes.string,\n\n  /** dots of the range-box field  */\n  dots: PropTypes.bool,\n\n  /** disabled of the range-box field */\n  disabled: PropTypes.bool,\n\n  /** vertical of the range-box field */\n  vertical: PropTypes.bool\n};\n\n/** RangeBox default proptype */\nRangeBox.defaultProps = {\n  labelText: 'ReuseCore RangeBox',\n  labelPosition: 'right',\n  className: 'rangebox_wrapper_className',\n  type: 'slide',\n  disabled: false,\n  min: 0,\n  max: 100,\n  stepper: 5,\n  unit: '',\n  placement: 'top',\n  slideDefaultValue: 3,\n  rangeDefaultValue: [0, 50],\n  dots: true,\n  vertical: false\n};\n"]},"metadata":{},"sourceType":"module"}