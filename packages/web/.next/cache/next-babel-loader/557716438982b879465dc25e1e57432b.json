{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Router from 'next/router';\nimport AuthHeader from '../../components/AuthHeader';\nimport Button from 'reusecore/src/elements/Button';\nimport Box from 'reusecore/src/elements/Box';\nimport { FormGroup, ErrorNotification } from '../SignInForm/style';\nimport Input from '../../components/Input';\nimport AuthHelper from '../../helpers/authHelper';\nconst ForgetPasswordEnhancer = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: props => ({\n    email: ''\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Invalid email address').required('Email is required!')\n  })\n});\n\nconst ForgetPasswordForm = ({\n  values,\n  handleChange,\n  touched,\n  errors,\n  handleSubmit,\n  handleBlur\n}) => {\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n\n  handleSubmit = async () => {\n    const hasPasswordReset = await AuthHelper.forgetPass(values.email);\n\n    if (hasPasswordReset && !hasPasswordReset.error) {\n      setMessage('Email Sent Successfully');\n    } else if (hasPasswordReset.error) {\n      setMessage(hasPasswordReset.error.message);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(AuthHeader, {\n    title: {\n      content: 'Forget Your Password?'\n    }\n  }), __jsx(FormGroup, {\n    className: errors.email ? 'hasErrorMsg' : ''\n  }, __jsx(Input, {\n    elementType: \"input\",\n    elementConfig: {\n      type: 'email',\n      required: 'required'\n    },\n    onBlur: handleBlur('email'),\n    value: values.email,\n    error: errors.email,\n    touched: touched,\n    label: \"Email Address\",\n    changed: handleChange('email')\n  }), __jsx(\"span\", {\n    className: \"errorMsg\"\n  }, errors.email && touched.email && errors.email)), message ? __jsx(Box, {\n    flexBox: true,\n    mt: 20,\n    mb: 15,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, __jsx(ErrorNotification, null, message)) : '', __jsx(Button, {\n    disabled: Object.keys(errors).length !== 0,\n    onClick: handleSubmit,\n    title: \"Submit\",\n    width: 1,\n    mt: 10\n  }), __jsx(Button, {\n    title: \"Not Now\",\n    color: \"#8C8C8C\",\n    variant: \"textButton\",\n    width: 1,\n    onClick: () => Router.push('/signin')\n  }));\n};\n\nexport default ForgetPasswordEnhancer(ForgetPasswordForm);","map":null,"metadata":{},"sourceType":"module"}