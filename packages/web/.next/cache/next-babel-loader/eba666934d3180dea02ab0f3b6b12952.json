{"ast":null,"code":"import gql from 'graphql-tag';\nexport const UPDATE_AUTHOR = gql`\n  mutation($author: authorInput!) {\n    addAuthor(input: $author) {\n      id\n      name\n      address\n      website\n      email\n      mobile {\n        number\n      }\n      username\n      image {\n        url\n        largeUrl\n      }\n    }\n  }\n`;\nexport const HANDLE_FAV = gql`\n  mutation($fav: adFavInput!) {\n    handleFav(input: $fav) {\n      data {\n        id\n      }\n    }\n  }\n`;\nexport const GET_VERIFICATION_CODE = gql`\n  mutation GetVerificationCode($mobileNumber: InputMobileNumber!) {\n    getVerificationCode(input: $mobileNumber) {\n      id\n      code\n    }\n  }\n`;\nexport const VERIFY_CODE = gql`\n  mutation VerifyCode($verify: InputVerifyNumber!) {\n    verifyCode(input: $verify) {\n      token\n    }\n  }\n`;\nexport const LOGIN = gql`\n  mutation Login($user: RegisterInput!) {\n    login(input: $user) {\n      userId\n      email\n      error\n    }\n  }\n`;\nexport const LOGOUT = gql`\n  mutation Logout($user: RegisterInput!) {\n    logout(input: $user) {\n      userId\n      email\n      error\n    }\n  }\n`;\nexport const REGISTER = gql`\n  mutation Register($user: RegisterInput!) {\n    register(input: $user) {\n      userId\n      email\n      error\n    }\n  }\n`;\nexport const RESET_PASS = gql`\n  mutation ResetPass($resetPass: ResetPassInput!) {\n    resetPass(input: $resetPass) {\n      userId\n      token\n    }\n  }\n`;\nexport const FOREGET_PASS_MAIL = gql`\n  mutation ForgetPassMail($forgetPassMail: ForgetPassMailInput!) {\n    forgetPassMail(input: $forgetPassMail) {\n      message\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/bhavikshah/Work/Sellia/sellia-mono/selliafemono/node_modules/@headless/core/graphql/Mutations/Author.js"],"names":["gql","UPDATE_AUTHOR","HANDLE_FAV","GET_VERIFICATION_CODE","VERIFY_CODE","LOGIN","LOGOUT","REGISTER","RESET_PASS","FOREGET_PASS_MAIL"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,aAAa,GAAGD,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBO;AAmBP,OAAO,MAAME,UAAU,GAAGF,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;AAUP,OAAO,MAAMG,qBAAqB,GAAGH,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,CAPO;AASP,OAAO,MAAMI,WAAW,GAAGJ,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CANO;AAQP,OAAO,MAAMK,KAAK,GAAGL,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;AAUP,OAAO,MAAMM,MAAM,GAAGN,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;AAUP,OAAO,MAAMO,QAAQ,GAAGP,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;AASP,OAAO,MAAMQ,UAAU,GAAGR,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAPO;AASP,OAAO,MAAMS,iBAAiB,GAAGT,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA,CANO","sourcesContent":["import gql from 'graphql-tag';\n\nexport const UPDATE_AUTHOR = gql`\n  mutation($author: authorInput!) {\n    addAuthor(input: $author) {\n      id\n      name\n      address\n      website\n      email\n      mobile {\n        number\n      }\n      username\n      image {\n        url\n        largeUrl\n      }\n    }\n  }\n`;\nexport const HANDLE_FAV = gql`\n  mutation($fav: adFavInput!) {\n    handleFav(input: $fav) {\n      data {\n        id\n      }\n    }\n  }\n`;\n\nexport const GET_VERIFICATION_CODE = gql`\n  mutation GetVerificationCode($mobileNumber: InputMobileNumber!) {\n    getVerificationCode(input: $mobileNumber) {\n      id\n      code\n    }\n  }\n`;\n\nexport const VERIFY_CODE = gql`\n  mutation VerifyCode($verify: InputVerifyNumber!) {\n    verifyCode(input: $verify) {\n      token\n    }\n  }\n`;\n\nexport const LOGIN = gql`\n  mutation Login($user: RegisterInput!) {\n    login(input: $user) {\n      userId\n      email\n      error\n    }\n  }\n`;\n\nexport const LOGOUT = gql`\n  mutation Logout($user: RegisterInput!) {\n    logout(input: $user) {\n      userId\n      email\n      error\n    }\n  }\n`;\n\nexport const REGISTER = gql`\n  mutation Register($user: RegisterInput!) {\n    register(input: $user) {\n      userId\n      email\n      error\n    }\n  }\n`;\nexport const RESET_PASS = gql`\n  mutation ResetPass($resetPass: ResetPassInput!) {\n    resetPass(input: $resetPass) {\n      userId\n      token\n    }\n  }\n`;\n\nexport const FOREGET_PASS_MAIL = gql`\n  mutation ForgetPassMail($forgetPassMail: ForgetPassMailInput!) {\n    forgetPassMail(input: $forgetPassMail) {\n      message\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}