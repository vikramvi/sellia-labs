{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport SinglePost from '../../containers/SinglePost';\nimport withLayout from '../../hoc/withLayout';\nimport { Modal } from '@redq/reuse-modal';\nimport PageMeta from '../../components/PageMeta';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_POST } from 'core/graphql/Post.query';\nimport { useRouter } from 'next/router';\nimport { withApollo } from '../../helpers/apollo';\nexport default withApollo(withLayout(({\n  isLoggedIn,\n  userId,\n  location\n}) => {\n  const {\n    query: {\n      slug\n    }\n  } = useRouter();\n  let QUERY_VARIABLES = {\n    lat: location && location.lat ? location.lat : null,\n    lng: location && location.lng ? location.lng : null,\n    LIMIT: 4,\n    slug: slug\n  };\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_POST, {\n    variables: QUERY_VARIABLES\n  });\n  if (error) return __jsx(\"p\", null, error.message);\n  const title = data && data.post ? data.post.title : '';\n  const content = data && data.post ? data.post.content : '';\n  return __jsx(React.Fragment, null, __jsx(PageMeta, {\n    title: title,\n    description: content\n  }), __jsx(SinglePost, {\n    data: data,\n    loading: loading,\n    userId: userId,\n    isLoggedIn: isLoggedIn,\n    error: error,\n    QUERY_VARIABLES: QUERY_VARIABLES\n  }), __jsx(Modal, null));\n}));","map":null,"metadata":{},"sourceType":"module"}