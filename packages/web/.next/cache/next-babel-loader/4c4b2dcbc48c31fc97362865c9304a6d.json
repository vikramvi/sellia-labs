{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from 'react';\nimport Icon from 'react-icons-kit';\nimport { archive } from 'react-icons-kit/ionicons/archive';\nimport { chevronRight } from 'react-icons-kit/ionicons/chevronRight';\nimport { uploadMultipleImages } from '../../../helpers/uploadMultipleImage';\nimport Box from 'reusecore/src/elements/Box';\nimport Button from 'reusecore/src/elements/Button';\nimport { chevronLeft } from 'react-icons-kit/ionicons/chevronLeft';\nimport Text from 'reusecore/src/elements/Text';\nimport Input from '../../../components/Input';\nimport { ADD_POST } from 'core/graphql/Mutations';\nimport AsyncSelect from 'react-select/async';\nimport { AddPostContext } from '../../../contexts/AddPostContext';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport AuthHelper from '../../../helpers/authHelper';\nimport { GET_CATEGORIES_FOR_DROPDOWN } from 'core/graphql/Category.query';\nvar colourStyles = {\n  control: function control() {\n    return {\n      display: 'flex',\n      backgroundColor: 'transparent',\n      color: '#8c8c8c',\n      border: '0',\n      borderBottom: '1px solid #e2e2e2'\n    };\n  },\n  valueContainer: function valueContainer(base) {\n    return _objectSpread({}, base, {\n      padding: '0'\n    });\n  },\n  placeholder: function placeholder() {\n    return {\n      color: '#8c8c8c'\n    };\n  },\n  indicatorSeparator: function indicatorSeparator() {\n    return {\n      display: 'none'\n    };\n  },\n  input: function input() {\n    return {\n      color: '#8c8c8c'\n    };\n  },\n  dropdownIndicator: function dropdownIndicator() {\n    return {\n      padding: '8px 0'\n    };\n  }\n};\nvar imagesUrl = [];\n\nvar CategoryAndDetailInfo = function CategoryAndDetailInfo(props) {\n  var _useContext = useContext(AddPostContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(false),\n      btnLoading = _useState[0],\n      setBtnLoading = _useState[1];\n\n  var _useMutation = useMutation(ADD_POST),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      postMutation = _useMutation2[0];\n\n  var _useQuery = useQuery(GET_CATEGORIES_FOR_DROPDOWN, {\n    variables: {\n      limit: 1000\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore;\n\n  var step = state.step,\n      adPost = state.adPost;\n  var options = [];\n\n  if (!loading && data.categories.data.length) {\n    data.categories.data.map(function (item, index) {\n      var categoryOptions = _objectSpread({}, item, {\n        value: item.id,\n        label: item.name\n      });\n\n      options.push(categoryOptions);\n    });\n  }\n\n  var handleDraftingPost =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return AuthHelper.refreshToken();\n\n            case 2:\n              setBtnLoading(true);\n\n              if (!adPost.localGallery.length) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 6;\n              return uploadMultipleImages(adPost.localGallery);\n\n            case 6:\n              imagesUrl = _context.sent;\n\n              if (imagesUrl && imagesUrl.length > 0) {\n                dispatch({\n                  type: 'UPDATE_FULL_ADPOST',\n                  payload: {\n                    gallery: adPost.gallery.concat(imagesUrl[0]),\n                    image: !adPost.image.url ? imagesUrl[0][0] : adPost.image,\n                    localImage: {},\n                    localGallery: []\n                  }\n                });\n              }\n\n              _context.next = 21;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.next = 13;\n              return postMutation({\n                variables: {\n                  post: finalData\n                }\n              });\n\n            case 13:\n              _data = _context.sent;\n              setBtnLoading(false);\n\n              if (!adPost.id) {\n                dispatch({\n                  type: 'UPDATE_ADPOST',\n                  payload: {\n                    key: 'id',\n                    value: _data.data.addPost.id\n                  }\n                });\n              }\n\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](10);\n              setBtnLoading(false);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[10, 18]]);\n    }));\n\n    return function handleDraftingPost() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var preImage = adPost.preImage,\n      preGallery = adPost.preGallery,\n      localImage = adPost.localImage,\n      localGallery = adPost.localGallery,\n      location = adPost.location,\n      prossedAdPostData = _objectWithoutProperties(adPost, [\"preImage\", \"preGallery\", \"localImage\", \"localGallery\", \"location\"]);\n\n  var finalData = prossedAdPostData;\n\n  if (location && location.lat) {\n    finalData = _objectSpread({}, prossedAdPostData, {\n      location: location\n    });\n  }\n\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _data2;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!imagesUrl.length) {\n                _context2.next = 12;\n                break;\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return postMutation({\n                variables: {\n                  post: finalData\n                }\n              });\n\n            case 4:\n              _data2 = _context2.sent;\n              setBtnLoading(false);\n\n              if (!adPost.id) {\n                dispatch({\n                  type: 'UPDATE_ADPOST',\n                  payload: {\n                    key: 'id',\n                    value: _data2.data.addPost.id\n                  }\n                });\n              }\n\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              setBtnLoading(false);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 9]]);\n    }))();\n  }, [prossedAdPostData.gallery]);\n\n  var _loadOptions =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(fetchMore, inputValue, callback, loading) {\n      var filteredData;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              filteredData = options.filter(function (item) {\n                return item.slug.includes(inputValue);\n              });\n              callback(filteredData);\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadOptions(_x, _x2, _x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Text, {\n    content: \"Select the preferred categories\",\n    pb: 20,\n    style: {\n      fontSize: 16,\n      fontWeight: 400,\n      color: '#595959'\n    }\n  }), __jsx(AsyncSelect, {\n    isMulti: true,\n    defaultValue: adPost.categories ? adPost.categories : [],\n    defaultOptions: options,\n    styles: colourStyles,\n    loadOptions: function loadOptions(inputValue, callback) {\n      return _loadOptions(fetchMore, inputValue, callback, loading);\n    },\n    onChange: function onChange(selectedCategories) {\n      dispatch({\n        type: 'UPDATE_ADPOST',\n        payload: {\n          key: 'categories',\n          value: selectedCategories\n        }\n      });\n    }\n  }), __jsx(Input, {\n    elementType: \"textarea\",\n    rows: 4,\n    elementConfig: {\n      type: 'text',\n      required: 'required'\n    },\n    label: \"Details\",\n    changed: function changed(details) {\n      return dispatch({\n        type: 'UPDATE_ADPOST',\n        payload: {\n          key: 'content',\n          value: details.target.value\n        }\n      });\n    },\n    value: adPost.content,\n    style: {\n      marginTop: 40\n    }\n  }), __jsx(Box, {\n    flexBox: true,\n    justifyContent: \"space-between\",\n    mt: 40\n  }, __jsx(Button, {\n    title: \"Save\",\n    iconPosition: \"left\",\n    icon: __jsx(Icon, {\n      icon: archive,\n      size: 18,\n      color: \"#8C8C8C\"\n    }),\n    onClick: handleDraftingPost,\n    variant: \"textButton\",\n    isLoading: btnLoading\n  }), __jsx(Button, {\n    title: \"Previous\",\n    iconPosition: \"left\",\n    onClick: function onClick() {\n      return dispatch({\n        type: 'UPDATE_STEP',\n        payload: {\n          step: step - 1\n        }\n      });\n    },\n    disabled: btnLoading,\n    icon: __jsx(Icon, {\n      icon: chevronLeft,\n      size: 14,\n      color: \"#8C8C8C\"\n    }),\n    variant: \"textButton\",\n    mr: 30,\n    ml: \"auto\"\n  }), __jsx(Button, {\n    title: \"Next\",\n    iconPosition: \"right\",\n    disabled: adPost.categories.length === 0 || btnLoading,\n    onClick: function onClick() {\n      return dispatch({\n        type: 'UPDATE_STEP',\n        payload: {\n          step: step + 1\n        }\n      });\n    },\n    icon: __jsx(Icon, {\n      icon: chevronRight,\n      size: 21,\n      color: \"#ffffff\"\n    }),\n    style: {\n      backgroundColor: adPost.categories.length === 0 || btnLoading ? '#e2e2e2' : '#30C56D'\n    }\n  })));\n};\n\nexport default CategoryAndDetailInfo;","map":null,"metadata":{},"sourceType":"module"}