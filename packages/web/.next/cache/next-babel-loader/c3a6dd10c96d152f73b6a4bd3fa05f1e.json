{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport { naviconRound } from \"react-icons-kit/ionicons/naviconRound\";\nimport { plusRound } from \"react-icons-kit/ionicons/plusRound\";\nimport { more } from \"react-icons-kit/ionicons/more\";\nimport { FullPageSpinner } from \"../../components/Loader/spinnerLoader\";\nimport { LOGOUT } from \"core/graphql/Mutations\";\nimport { GET_AUTHOR_INFO } from \"core/graphql/Profile.query\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport AuthHelper from \"../../helpers/authHelper\";\nimport { removeFirebaseCookie } from \"../../helpers/session\";\nimport redirect from \"../../helpers/redirect\";\nimport { androidClose } from \"react-icons-kit/ionicons/androidClose\";\nimport Icon from \"react-icons-kit\";\nimport Button from \"reusecore/src/elements/Button\";\nimport Navbar from \"../../components/Navbar\";\nimport Footer from \"../../components/Footer\";\nimport SideDrawer from \"reusecore/src/elements/Drawer\";\nimport { setFirebaseCookie } from \"../../helpers/session\";\nimport { HOME_PAGE, SEARCH_PAGE, NEAREST_POST_PAGE, RECENT_POST_PAGE, CATEGORIES_PAGE, SINGLE_CATEGORY_PAGE, SINGLE_POST_PAGE, FAVOURITE_PAGE, PROFILE_PAGE, SIGNIN_PAGE, SIGNUP_PAGE, FORGET_PASSWORD_PAGE, RESET_PASSWORD_PAGE, ADD_POST, ACCOUNT_SETTING_PAGE, CHAT_PAGE } from \"core/navigation/constant\";\nvar Main = styled.main.withConfig({\n  displayName: \"Layout__Main\",\n  componentId: \"sc-1ece30d-0\"\n})([\"min-height:100vh;min-height:calc(100vh - 153px);\"]);\nvar DrawerWrapper = styled(\"div\").withConfig({\n  displayName: \"Layout__DrawerWrapper\",\n  componentId: \"sc-1ece30d-1\"\n})([\"display:inline-flex;flex-direction:column;height:100%;width:100%;padding:70px 20px 50px;\"]);\nvar DrawerLink = styled(\"span\").withConfig({\n  displayName: \"Layout__DrawerLink\",\n  componentId: \"sc-1ece30d-2\"\n})([\"display:inline-flex;padding:11px 0;a{color:#333;}\"]);\nexport default (function (_ref) {\n  var children = _ref.children,\n      _ref$userId = _ref.userId,\n      userId = _ref$userId === void 0 ? \"\" : _ref$userId,\n      history = _ref.history,\n      isLoggedIn = _ref.isLoggedIn,\n      location = _ref.location,\n      logout = _ref.logout,\n      pathname = _ref.pathname;\n\n  var _useState = useState(false),\n      drawerState = _useState[0],\n      toggleDrawer = _useState[1];\n\n  var _useState2 = useState(false),\n      loggingOut = _useState2[0],\n      setloggingOut = _useState2[1];\n\n  var userAvatar = \"\";\n  var userFallbackAvatar = \"\";\n\n  var _useQuery = useQuery(GET_AUTHOR_INFO, {\n    variables: {\n      USERNAME: userId\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  userAvatar = data && data.author && data.author.image && data.author.image.url ? data.author.image.url : \"\";\n  userFallbackAvatar = data && data.author && data.author.image && data.author.image.largeUrl ? data.author.image.largeUrl : \"\";\n  useEffect(function () {\n    if (true && localStorage.getItem(\"currentLocation\") === null) {\n      getLocation();\n    }\n  }, []);\n\n  var getLocation = function getLocation() {\n    navigator.geolocation.getCurrentPosition(storePosition);\n  };\n\n  var storePosition = function storePosition(position) {\n    setFirebaseCookie(\"currentLocation\", {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    });\n  };\n\n  var handleLogout = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var isLoggedOut;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setloggingOut(true);\n              _context.next = 3;\n              return AuthHelper.logout();\n\n            case 3:\n              isLoggedOut = _context.sent;\n              setloggingOut(false);\n\n              if (isLoggedOut === true) {\n                removeFirebaseCookie(\"id_token\");\n                removeFirebaseCookie(\"user\");\n                redirect({}, \"/\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleLogout() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleToggle = function handleToggle() {\n    return toggleDrawer(!drawerState);\n  };\n\n  var DRAWER_MENU = [{\n    path: HOME_PAGE,\n    name: \"Home\"\n  }, {\n    path: \"\".concat(ADD_POST, \"/new\"),\n    name: \"Add Post\"\n  }, {\n    path: SEARCH_PAGE,\n    name: \"Search Page\"\n  }, {\n    path: NEAREST_POST_PAGE,\n    name: \"Nearest Post Page\"\n  }, {\n    path: RECENT_POST_PAGE,\n    name: \"Recent Post Page\"\n  }, {\n    path: CATEGORIES_PAGE,\n    name: \"Category Page\"\n  }];\n  return __jsx(React.Fragment, null, loggingOut && __jsx(FullPageSpinner, null), __jsx(Navbar, {\n    onToggle: handleToggle,\n    userId: userId,\n    history: history,\n    isLoggedIn: isLoggedIn,\n    location: location,\n    logout: handleLogout,\n    buttonIcon: __jsx(Icon, {\n      icon: naviconRound,\n      size: 21,\n      color: \"#ffffff\"\n    }),\n    menuButtonIcon: __jsx(Icon, {\n      icon: plusRound,\n      size: 20,\n      color: \"#595959\"\n    }),\n    dropdownMenuIcon: __jsx(Icon, {\n      icon: more,\n      size: 40,\n      color: \"#595959\"\n    }),\n    pathname: pathname,\n    avatar: [userAvatar, userFallbackAvatar]\n  }), drawerState && __jsx(SideDrawer, {\n    open: drawerState,\n    onClose: handleToggle,\n    toggleHandler: handleToggle,\n    isLoggedIn: isLoggedIn,\n    userId: userId,\n    logout: logout,\n    closeButton: __jsx(Icon, {\n      icon: androidClose,\n      size: 21,\n      color: \"#333333\"\n    }),\n    closeButtonStyle: {\n      display: \"inline-flex\",\n      position: \"absolute\",\n      top: 20,\n      right: 20,\n      cursor: \"pointer\"\n    }\n  }, __jsx(DrawerWrapper, null, DRAWER_MENU.map(function (item, index) {\n    return __jsx(DrawerLink, {\n      key: index\n    }, __jsx(Link, {\n      href: item.path\n    }, __jsx(\"a\", null, item.name)));\n  }), isLoggedIn ? __jsx(React.Fragment, null, __jsx(DrawerLink, {\n    key: PROFILE_PAGE\n  }, __jsx(Link, {\n    href: \"\".concat(PROFILE_PAGE, \"/[username]\"),\n    as: \"\".concat(PROFILE_PAGE, \"/\").concat(userId)\n  }, __jsx(\"a\", null, \"Profile changes\"))), __jsx(DrawerLink, {\n    key: CHAT_PAGE\n  }, __jsx(Link, {\n    href: \"\".concat(CHAT_PAGE, \"/[username]\"),\n    as: \"\".concat(CHAT_PAGE, \"/\").concat(userId)\n  }, __jsx(\"a\", null, \"Inbox\"))), __jsx(DrawerLink, {\n    key: ACCOUNT_SETTING_PAGE\n  }, __jsx(Link, {\n    href: \"\".concat(ACCOUNT_SETTING_PAGE, \"?view=edit-profile\")\n  }, __jsx(\"a\", null, \"Account Setting\"))), __jsx(Button, {\n    onClick: handleLogout,\n    title: \"Logout\",\n    variant: \"textButton\",\n    width: 1,\n    color: \"#EF5A5A\",\n    style: {\n      minHeight: \"auto\",\n      minWidth: \"auto\",\n      textDecoration: \"none\",\n      justifyContent: \"flex-start\",\n      marginTop: 8,\n      marginLeft: \"-4px\"\n    }\n  })) : __jsx(Link, {\n    href: SIGNIN_PAGE\n  }, __jsx(Button, {\n    title: \"Login\",\n    variant: \"textButton\",\n    width: 1,\n    color: \"#30C56D\",\n    style: {\n      minHeight: \"auto\",\n      minWidth: \"auto\",\n      textDecoration: \"none\",\n      justifyContent: \"flex-start\",\n      marginTop: 8,\n      marginLeft: \"-4px\"\n    }\n  })))), __jsx(Main, null, children), __jsx(Footer, null));\n});","map":null,"metadata":{},"sourceType":"module"}