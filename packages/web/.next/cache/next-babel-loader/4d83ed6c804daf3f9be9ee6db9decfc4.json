{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { Grid } from 'react-styled-flexboxgrid';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_CATEGORY_POST } from 'core/graphql/CategoryPost.query';\nimport { CURRENCY } from '../../Config';\nimport { SINGLE_POST_PAGE } from 'core/navigation/constant';\nimport withLayout from '../../hoc/withLayout';\nimport Box from 'reusecore/src/elements/Box';\nimport Heading from 'reusecore/src/elements/Heading';\nimport ListGrid from 'reusecore/src/elements/ListGrid';\nimport CardLoader from '../../components/Loader/CardLoader';\nimport PostCard from '../../components/PostCard';\nimport NoItemFound from '../../components/NoItemFound';\nimport OnError from '../../components/OnError';\nimport PageMeta from '../../components/PageMeta';\nimport { withApollo } from '../../helpers/apollo';\n\nvar SingleCategory = function SingleCategory(_ref) {\n  var data = _ref.data,\n      loading = _ref.loading,\n      fetchMore = _ref.fetchMore,\n      limit = _ref.limit;\n\n  var _useState = useState(false),\n      loadingMore = _useState[0],\n      toggleLoading = _useState[1];\n\n  var _useState2 = useState(1),\n      page = _useState2[0],\n      paginate = _useState2[1];\n\n  var fetchedCategoryPost = data && data.category ? data.category.posts.data : [];\n  var postCount = fetchedCategoryPost.length;\n  var totalPost = data && data.category ? data.category.posts.total : null;\n  var categoryName = data && data.category ? data.category.name : null;\n\n  var renderCategoryPost = function renderCategoryPost(item) {\n    var title = item.title,\n        _item$price = item.price,\n        price = _item$price === void 0 ? \"0.00\" : _item$price,\n        slug = item.slug,\n        _item$image = item.image,\n        url = _item$image.url,\n        largeUrl = _item$image.largeUrl;\n    return __jsx(Link, {\n      href: \"\".concat(SINGLE_POST_PAGE, \"/[slug]\"),\n      as: \"\".concat(SINGLE_POST_PAGE, \"/\").concat(slug)\n    }, __jsx(\"a\", null, __jsx(PostCard, {\n      currency: CURRENCY,\n      title: title,\n      price: price,\n      imageSrc: [url, largeUrl]\n    })));\n  };\n\n  return __jsx(Box, {\n    mt: 50,\n    mb: 50\n  }, __jsx(Grid, null, __jsx(Heading, {\n    content: categoryName,\n    mb: 40,\n    style: {\n      fontSize: 24,\n      fontWeight: 600,\n      color: '#333333'\n    }\n  }), !fetchedCategoryPost ? __jsx(NoItemFound, null) : __jsx(ListGrid, {\n    data: fetchedCategoryPost,\n    totalPost: totalPost,\n    postCount: postCount,\n    columnWidth: [1, 1 / 2, 1 / 4],\n    component: renderCategoryPost,\n    loading: loading ? loading : loadingMore,\n    isLoading: loadingMore,\n    placeholder: __jsx(CardLoader, null),\n    limit: limit,\n    handleLoadMore: function handleLoadMore(loading) {\n      toggleLoading(true);\n      paginate(page + 1);\n      fetchMore({\n        variables: {\n          page: page + 1\n        },\n        updateQuery: function updateQuery(prev, _ref2) {\n          var fetchMoreResult = _ref2.fetchMoreResult;\n\n          if (!fetchMoreResult) {\n            toggleLoading(false);\n            return prev;\n          }\n\n          var oldPosts = prev.category.posts.data;\n          var newPosts = fetchMoreResult.category.posts.data;\n\n          if (postCount && totalPost) {\n            if (postCount <= totalPost) {\n              toggleLoading(false);\n              var concatedPosts = oldPosts.concat(newPosts);\n              fetchMoreResult.category.posts.data = concatedPosts;\n              return fetchMoreResult;\n            }\n          }\n        }\n      });\n    }\n  })));\n};\n\nexport default withApollo(withLayout(function () {\n  var _useRouter = useRouter(),\n      slug = _useRouter.query.slug;\n\n  var QUERY_VARIABLES = {\n    SLUG: slug,\n    LIMIT: 20\n  };\n\n  var _useQuery = useQuery(GET_CATEGORY_POST, {\n    variables: QUERY_VARIABLES\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore;\n\n  if (error) return __jsx(OnError, null);\n\n  var _ref3 = data && data.category ? data.category : '',\n      name = _ref3.name;\n\n  return __jsx(Fragment, null, __jsx(PageMeta, {\n    title: name,\n    description: \"Product categories\"\n  }), __jsx(SingleCategory, {\n    data: data,\n    loading: loading,\n    fetchMore: fetchMore,\n    limit: QUERY_VARIABLES.LIMIT\n  }));\n}));","map":null,"metadata":{},"sourceType":"module"}