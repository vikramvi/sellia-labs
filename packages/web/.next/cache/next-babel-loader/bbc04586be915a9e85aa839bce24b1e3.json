{"ast":null,"code":"var _jsxFileName = \"/Users/bhavikshah/Work/headless-graphql/packages/web/components/Search/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport InputSearch from '../InputSearch';\nimport SearchWrapper, { SearchBox } from './Search.style';\nimport Icon from 'react-icons-kit';\nimport { androidSearch } from 'react-icons-kit/ionicons/androidSearch';\nimport Button from 'reusecore/src/elements/Button';\nexport default function Search() {\n  var _useState = useState(''),\n      searchValue = _useState[0],\n      setSearchValue = _useState[1];\n\n  var _useState2 = useState(false),\n      toggleSearch = _useState2[0],\n      setToggleSearch = _useState2[1];\n\n  var searchRef = useRef();\n  useEffect(function () {\n    document.addEventListener('click', handleClickOutside, false);\n    return function () {\n      document.removeEventListener('click', handleClickOutside, false);\n    };\n  }, []);\n\n  var handleSearchInput = function handleSearchInput(event) {\n    setSearchValue(event.target.value);\n  };\n\n  var handleClickOutside = function handleClickOutside(event) {\n    if (searchRef.current && !searchRef.current.contains(event.target)) {\n      setToggleSearch(false);\n    }\n  };\n\n  return __jsx(SearchWrapper, {\n    ref: searchRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(Button, {\n    icon: __jsx(Icon, {\n      icon: androidSearch,\n      size: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }),\n    variant: \"outlined\",\n    color: \"#8C8C8C\",\n    onClick: function onClick() {\n      return setToggleSearch(true);\n    },\n    style: {\n      marginLeft: 'auto',\n      border: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), __jsx(SearchBox, {\n    className: toggleSearch ? 'expanded' : 'collapsed',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(InputSearch, {\n    type: \"text\",\n    value: searchValue,\n    changed: handleSearchInput,\n    searchText: searchValue,\n    buttonIcon: __jsx(Icon, {\n      icon: androidSearch,\n      size: 21,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }),\n    placeholder: \"10,000 products available\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/bhavikshah/Work/headless-graphql/packages/web/components/Search/index.js"],"names":["React","useEffect","useRef","useState","InputSearch","SearchWrapper","SearchBox","Icon","androidSearch","Button","Search","searchValue","setSearchValue","toggleSearch","setToggleSearch","searchRef","document","addEventListener","handleClickOutside","removeEventListener","handleSearchInput","event","target","value","current","contains","display","marginLeft","border"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,aAAP,IAAwBC,SAAxB,QAAyC,gBAAzC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,aAAT,QAA8B,wCAA9B;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA,kBACOP,QAAQ,CAAC,EAAD,CADf;AAAA,MACxBQ,WADwB;AAAA,MACXC,cADW;;AAAA,mBAEST,QAAQ,CAAC,KAAD,CAFjB;AAAA,MAExBU,YAFwB;AAAA,MAEVC,eAFU;;AAI/B,MAAIC,SAAS,GAAGb,MAAM,EAAtB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCC,kBAAnC,EAAuD,KAAvD;AACA,WAAO,YAAM;AACXF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsCD,kBAAtC,EAA0D,KAA1D;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;;AAOA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AACjCT,IAAAA,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,MAAML,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAG,KAAK,EAAI;AAClC,QAAIN,SAAS,CAACS,OAAV,IAAqB,CAACT,SAAS,CAACS,OAAV,CAAkBC,QAAlB,CAA2BJ,KAAK,CAACC,MAAjC,CAA1B,EAAoE;AAClER,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GAJD;;AAMA,SACE,MAAC,aAAD;AAAe,IAAA,GAAG,EAAEC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEW,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,IAAI,EAAE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAElB,aAAZ;AAA2B,MAAA,IAAI,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,OAAO,EAAE;AAAA,aAAMM,eAAe,CAAC,IAAD,CAArB;AAAA,KAJX;AAKE,IAAA,KAAK,EAAE;AACLa,MAAAA,UAAU,EAAE,MADP;AAELC,MAAAA,MAAM,EAAE;AAFH,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAaE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEf,YAAY,GAAG,UAAH,GAAgB,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEF,WAFT;AAGE,IAAA,OAAO,EAAES,iBAHX;AAIE,IAAA,UAAU,EAAET,WAJd;AAKE,IAAA,UAAU,EAAE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEH,aAAZ;AAA2B,MAAA,IAAI,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALd;AAME,IAAA,WAAW,EAAC,2BANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,CADF;AA0BD","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport InputSearch from '../InputSearch';\nimport SearchWrapper, { SearchBox } from './Search.style';\nimport Icon from 'react-icons-kit';\nimport { androidSearch } from 'react-icons-kit/ionicons/androidSearch';\nimport Button from 'reusecore/src/elements/Button';\n\nexport default function Search() {\n  const [searchValue, setSearchValue] = useState('');\n  const [toggleSearch, setToggleSearch] = useState(false);\n\n  let searchRef = useRef();\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, false);\n    return () => {\n      document.removeEventListener('click', handleClickOutside, false);\n    };\n  }, []);\n\n  const handleSearchInput = event => {\n    setSearchValue(event.target.value);\n  };\n\n  const handleClickOutside = event => {\n    if (searchRef.current && !searchRef.current.contains(event.target)) {\n      setToggleSearch(false);\n    }\n  };\n\n  return (\n    <SearchWrapper ref={searchRef}>\n      <div style={{ display: 'flex' }}>\n        <Button\n          icon={<Icon icon={androidSearch} size={24} />}\n          variant=\"outlined\"\n          color=\"#8C8C8C\"\n          onClick={() => setToggleSearch(true)}\n          style={{\n            marginLeft: 'auto',\n            border: 'none',\n          }}\n        />\n      </div>\n      <SearchBox className={toggleSearch ? 'expanded' : 'collapsed'}>\n        <InputSearch\n          type=\"text\"\n          value={searchValue}\n          changed={handleSearchInput}\n          searchText={searchValue}\n          buttonIcon={<Icon icon={androidSearch} size={21} />}\n          placeholder=\"10,000 products available\"\n        />\n      </SearchBox>\n    </SearchWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}