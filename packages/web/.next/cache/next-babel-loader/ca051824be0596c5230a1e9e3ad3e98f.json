{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/bhavikshah/Work/headless-graphql/node_modules/reusecore/src/elements/Loader/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LoaderStyle from './loader.style';\n\nconst Loader = (_ref) => {\n  let {\n    loaderColor,\n    className\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"loaderColor\", \"className\"]);\n\n  // Add all classs to an array\n  const addAllClasses = ['reusecore__loader']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(LoaderStyle, _extends({\n    className: addAllClasses.join(' '),\n    loaderColor: loaderColor\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n};\n\nLoader.propTypes = {\n  /** ClassName of the Loader */\n  className: PropTypes.string,\n\n  /** Set loader width in number || string */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Set loader height in number || string */\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Set color for loader */\n  loaderColor: PropTypes.string\n};\nLoader.defaultProps = {};\nexport default Loader;","map":{"version":3,"sources":["/Users/bhavikshah/Work/headless-graphql/node_modules/reusecore/src/elements/Loader/index.js"],"names":["React","PropTypes","LoaderStyle","Loader","loaderColor","className","props","addAllClasses","push","join","propTypes","string","width","oneOfType","number","height","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,MAAM,GAAG,UAA0C;AAAA,MAAzC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAyC;AAAA,MAAZC,KAAY;;AACvD;AACA,QAAMC,aAAa,GAAG,CAAC,mBAAD,CAAtB,CAFuD,CAIvD;;AACA,MAAIF,SAAJ,EAAe;AACbE,IAAAA,aAAa,CAACC,IAAd,CAAmBH,SAAnB;AACD;;AACD,SACE,MAAC,WAAD;AACE,IAAA,SAAS,EAAEE,aAAa,CAACE,IAAd,CAAmB,GAAnB,CADb;AAEE,IAAA,WAAW,EAAEL;AAFf,KAGME,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAOD,CAfD;;AAiBAH,MAAM,CAACO,SAAP,GAAmB;AACjB;AACAL,EAAAA,SAAS,EAAEJ,SAAS,CAACU,MAFJ;;AAIjB;AACAC,EAAAA,KAAK,EAAEX,SAAS,CAACY,SAAV,CAAoB,CAACZ,SAAS,CAACU,MAAX,EAAmBV,SAAS,CAACa,MAA7B,CAApB,CALU;;AAOjB;AACAC,EAAAA,MAAM,EAAEd,SAAS,CAACY,SAAV,CAAoB,CAACZ,SAAS,CAACU,MAAX,EAAmBV,SAAS,CAACa,MAA7B,CAApB,CARS;;AAUjB;AACAV,EAAAA,WAAW,EAAEH,SAAS,CAACU;AAXN,CAAnB;AAcAR,MAAM,CAACa,YAAP,GAAsB,EAAtB;AAEA,eAAeb,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport LoaderStyle from './loader.style';\n\nconst Loader = ({ loaderColor, className, ...props }) => {\n  // Add all classs to an array\n  const addAllClasses = ['reusecore__loader'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n  return (\n    <LoaderStyle\n      className={addAllClasses.join(' ')}\n      loaderColor={loaderColor}\n      {...props}\n    />\n  );\n};\n\nLoader.propTypes = {\n  /** ClassName of the Loader */\n  className: PropTypes.string,\n\n  /** Set loader width in number || string */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Set loader height in number || string */\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Set color for loader */\n  loaderColor: PropTypes.string\n};\n\nLoader.defaultProps = {};\n\nexport default Loader;\n"]},"metadata":{},"sourceType":"module"}