{"ast":null,"code":"var _jsxFileName = \"/Users/bhavikshah/Work/Sellia/sellia-mono/selliafemono/packages/web/containers/Chat/Chat.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Eliza from \"elizabot\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport ChatProvider from \"./ChatContext\";\nimport ChatSidebar from \"./ChatSidebar/ChatSidebar\";\nimport ChatHeader from \"./ChatHeader/ChatHeader\";\nimport ShowChats from \"./ShowChats/ShowChats\";\nimport ChatInput from \"./ChatInput/ChatInput\";\nimport Wrapper, { Sidebar, Message, Header, ArrowButton, Body, Footer } from \"./Chat.styled\";\nconst eliza = new Eliza();\n\nconst Chat = () => {\n  const {\n    0: chats,\n    1: setChats\n  } = useState([]);\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n  const {\n    0: listen,\n    1: setListen\n  } = useState(false);\n  const {\n    0: toggleSidebar,\n    1: setToggleSidebar\n  } = useState(false);\n  useEffect(() => {\n    const setReply = () => {\n      const reply = eliza.transform(value);\n      chats.push({\n        id: Date.now(),\n        type: \"eliza\",\n        message: reply\n      });\n      setChats([...chats]);\n      setListen(false);\n    };\n\n    setTimeout(() => {\n      if (listen) setReply();\n    }, 1000); // scroll to bottom\n\n    const chatBody = document.getElementById(\"chatBody\");\n    chatBody.scrollTop = chatBody.scrollHeight;\n  }, [listen]);\n\n  const handleChat = e => {\n    e.preventDefault();\n\n    if (value === \"\") {\n      return alert(\"Please write your message!\");\n    }\n\n    chats.push({\n      id: Date.now(),\n      type: \"author\",\n      message: value\n    });\n    setChats([...chats]);\n    setValue(\"\");\n    setListen(true);\n  };\n\n  const resetChat = () => {\n    setChats([]);\n  };\n\n  return __jsx(ChatProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, __jsx(Sidebar, {\n    $isActive: toggleSidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(ChatSidebar, {\n    resetChat: resetChat,\n    setToggleSidebar: setToggleSidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  })), __jsx(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }\n  }, __jsx(ArrowButton, {\n    onClick: () => setToggleSidebar(!toggleSidebar),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(BsArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }\n  })), __jsx(ChatHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  })), __jsx(Body, {\n    id: \"chatBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }\n  }, __jsx(ShowChats, {\n    chats: chats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  })), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  }, __jsx(ChatInput, {\n    value: value,\n    onChange: e => setValue(e.target.value),\n    onSubmit: handleChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  })))));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/bhavikshah/Work/Sellia/sellia-mono/selliafemono/packages/web/containers/Chat/Chat.tsx"],"names":["React","useState","useEffect","Eliza","BsArrowLeft","ChatProvider","ChatSidebar","ChatHeader","ShowChats","ChatInput","Wrapper","Sidebar","Message","Header","ArrowButton","Body","Footer","eliza","Chat","chats","setChats","value","setValue","listen","setListen","toggleSidebar","setToggleSidebar","setReply","reply","transform","push","id","Date","now","type","message","setTimeout","chatBody","document","getElementById","scrollTop","scrollHeight","handleChat","e","preventDefault","alert","resetChat","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Eliza from \"elizabot\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport ChatProvider from \"./ChatContext\";\nimport ChatSidebar from \"./ChatSidebar/ChatSidebar\";\nimport ChatHeader from \"./ChatHeader/ChatHeader\";\nimport ShowChats from \"./ShowChats/ShowChats\";\nimport ChatInput from \"./ChatInput/ChatInput\";\nimport Wrapper, {\n\tSidebar,\n\tMessage,\n\tHeader,\n\tArrowButton,\n\tBody,\n\tFooter,\n} from \"./Chat.styled\";\n\nconst eliza = new Eliza();\n\nconst Chat = () => {\n\tconst [chats, setChats] = useState([]);\n\tconst [value, setValue] = useState(\"\");\n\tconst [listen, setListen] = useState(false);\n\tconst [toggleSidebar, setToggleSidebar] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst setReply = () => {\n\t\t\tconst reply = eliza.transform(value);\n\t\t\tchats.push({ id: Date.now(), type: \"eliza\", message: reply });\n\t\t\tsetChats([...chats]);\n\t\t\tsetListen(false);\n\t\t};\n\t\tsetTimeout(() => {\n\t\t\tif (listen) setReply();\n\t\t}, 1000);\n\n\t\t// scroll to bottom\n\t\tconst chatBody = document.getElementById(\"chatBody\");\n\t\tchatBody.scrollTop = chatBody.scrollHeight;\n\t}, [listen]);\n\n\tconst handleChat = (e) => {\n\t\te.preventDefault();\n\t\tif (value === \"\") {\n\t\t\treturn alert(\"Please write your message!\");\n\t\t}\n\t\tchats.push({ id: Date.now(), type: \"author\", message: value });\n\t\tsetChats([...chats]);\n\t\tsetValue(\"\");\n\t\tsetListen(true);\n\t};\n\n\tconst resetChat = () => {\n\t\tsetChats([]);\n\t};\n\n\treturn (\n\t\t<ChatProvider>\n\t\t\t<Wrapper>\n\t\t\t\t<Sidebar $isActive={toggleSidebar}>\n\t\t\t\t\t<ChatSidebar\n\t\t\t\t\t\tresetChat={resetChat}\n\t\t\t\t\t\tsetToggleSidebar={setToggleSidebar}\n\t\t\t\t\t/>\n\t\t\t\t</Sidebar>\n\t\t\t\t<Message>\n\t\t\t\t\t<Header>\n\t\t\t\t\t\t<ArrowButton onClick={() => setToggleSidebar(!toggleSidebar)}>\n\t\t\t\t\t\t\t<BsArrowLeft />\n\t\t\t\t\t\t</ArrowButton>\n\t\t\t\t\t\t<ChatHeader />\n\t\t\t\t\t</Header>\n\t\t\t\t\t<Body id=\"chatBody\">\n\t\t\t\t\t\t<ShowChats chats={chats} />\n\t\t\t\t\t</Body>\n\t\t\t\t\t<Footer>\n\t\t\t\t\t\t<ChatInput\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={(e) => setValue(e.target.value)}\n\t\t\t\t\t\t\tonSubmit={handleChat}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Footer>\n\t\t\t\t</Message>\n\t\t\t</Wrapper>\n\t\t</ChatProvider>\n\t);\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}