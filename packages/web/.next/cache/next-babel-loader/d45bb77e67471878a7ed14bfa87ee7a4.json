{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport InputSearch from '../InputSearch';\nimport SearchWrapper, { SearchBox } from './Search.style';\nimport Icon from 'react-icons-kit';\nimport { androidSearch } from 'react-icons-kit/ionicons/androidSearch';\nimport Button from 'reusecore/src/elements/Button';\nexport default function Search() {\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState('');\n  const {\n    0: toggleSearch,\n    1: setToggleSearch\n  } = useState(false);\n  let searchRef = useRef();\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, false);\n    return () => {\n      document.removeEventListener('click', handleClickOutside, false);\n    };\n  }, []);\n\n  const handleSearchInput = event => {\n    setSearchValue(event.target.value);\n  };\n\n  const handleClickOutside = event => {\n    if (searchRef.current && !searchRef.current.contains(event.target)) {\n      setToggleSearch(false);\n    }\n  };\n\n  return __jsx(SearchWrapper, {\n    ref: searchRef\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    }\n  }, __jsx(Button, {\n    icon: __jsx(Icon, {\n      icon: androidSearch,\n      size: 24\n    }),\n    variant: \"outlined\",\n    color: \"#8C8C8C\",\n    onClick: () => setToggleSearch(true),\n    style: {\n      marginLeft: 'auto',\n      border: 'none'\n    }\n  })), __jsx(SearchBox, {\n    className: toggleSearch ? 'expanded' : 'collapsed'\n  }, __jsx(InputSearch, {\n    type: \"text\",\n    value: searchValue,\n    changed: handleSearchInput,\n    searchText: searchValue,\n    buttonIcon: __jsx(Icon, {\n      icon: androidSearch,\n      size: 21\n    }),\n    placeholder: \"10,000 products available\"\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}