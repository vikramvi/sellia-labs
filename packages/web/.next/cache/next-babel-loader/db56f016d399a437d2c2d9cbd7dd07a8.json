{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport Input from '../Input';\nimport LocationWrapper, { SearchResultWrapper } from './style';\n\nconst LocationSearchInput = props => {\n  const {\n    0: addressState,\n    1: setAddressState\n  } = useState({\n    address: props.address || ''\n  });\n\n  const handleChange = address => {\n    setAddressState(_objectSpread({}, addressState, {\n      address\n    }));\n  };\n\n  const handleSelect = selected => {\n    setAddressState(_objectSpread({}, addressState, {\n      address: selected\n    }));\n    const address = selected;\n    props.handleAddress(address);\n    geocodeByAddress(selected).then(results => getLatLng(results[0])).then(latLng => props.handleLocation(latLng)).catch(error => console.error('Error', error));\n  };\n\n  return __jsx(PlacesAutocomplete, {\n    value: addressState.address,\n    onChange: handleChange,\n    onSelect: handleSelect\n  }, ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => __jsx(LocationWrapper, null, __jsx(\"div\", null, __jsx(Input, _extends({}, getInputProps(), {\n    required: \"required\",\n    label: \"Location\"\n  }))), addressState.address && __jsx(SearchResultWrapper, {\n    className: \"autocomplete-dropdown-container\"\n  }, loading && __jsx(\"div\", null, \"Loading...\"), suggestions.map(suggestion => {\n    const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item';\n    const style = suggestion.active ? {\n      backgroundColor: '#e2e2e2'\n    } : {\n      backgroundColor: '#ffffff'\n    };\n\n    __jsx(\"div\", getSuggestionItemProps(suggestion, {\n      className,\n      style\n    }), __jsx(\"span\", null, suggestion.description));\n  }))));\n};\n\nexport default LocationSearchInput;","map":null,"metadata":{},"sourceType":"module"}