{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Eliza from \"elizabot\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport ChatProvider from \"./ChatContext\";\nimport ChatSidebar from \"./ChatSidebar/ChatSidebar\";\nimport ChatHeader from \"./ChatHeader/ChatHeader\";\nimport ShowChats from \"./ShowChats/ShowChats\";\nimport ChatInput from \"./ChatInput/ChatInput\";\nimport Wrapper, { Sidebar, Message, Header, ArrowButton, Body, Footer } from \"./Chat.styled\";\nvar eliza = new Eliza();\n\nvar Chat = function Chat() {\n  var _useState = useState([]),\n      chats = _useState[0],\n      setChats = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      listen = _useState3[0],\n      setListen = _useState3[1];\n\n  var _useState4 = useState(false),\n      toggleSidebar = _useState4[0],\n      setToggleSidebar = _useState4[1];\n\n  useEffect(function () {\n    var setReply = function setReply() {\n      var reply = eliza.transform(value);\n      chats.push({\n        id: Date.now(),\n        type: \"eliza\",\n        message: reply\n      });\n      setChats(_toConsumableArray(chats));\n      setListen(false);\n    };\n\n    setTimeout(function () {\n      if (listen) setReply();\n    }, 1000); // scroll to bottom\n\n    var chatBody = document.getElementById(\"chatBody\");\n    chatBody.scrollTop = chatBody.scrollHeight;\n  }, [listen]);\n\n  var handleChat = function handleChat(e) {\n    e.preventDefault();\n\n    if (value === \"\") {\n      return alert(\"Please write your message!\");\n    }\n\n    chats.push({\n      id: Date.now(),\n      type: \"author\",\n      message: value\n    });\n    setChats(_toConsumableArray(chats));\n    setValue(\"\");\n    setListen(true);\n  };\n\n  var resetChat = function resetChat() {\n    setChats([]);\n  };\n\n  return __jsx(ChatProvider, null, __jsx(Wrapper, null, __jsx(Sidebar, {\n    $isActive: toggleSidebar\n  }, __jsx(ChatSidebar, {\n    resetChat: resetChat,\n    setToggleSidebar: setToggleSidebar\n  })), __jsx(Message, null, __jsx(Header, null, __jsx(ArrowButton, {\n    onClick: function onClick() {\n      return setToggleSidebar(!toggleSidebar);\n    }\n  }, __jsx(BsArrowLeft, null)), __jsx(ChatHeader, null)), __jsx(Body, {\n    id: \"chatBody\"\n  }, __jsx(ShowChats, {\n    chats: chats\n  })), __jsx(Footer, null, __jsx(ChatInput, {\n    value: value,\n    onChange: function onChange(e) {\n      return setValue(e.target.value);\n    },\n    onSubmit: handleChat\n  })))));\n};\n\nexport default Chat;","map":null,"metadata":{},"sourceType":"module"}