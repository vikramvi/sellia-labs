{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Eliza from \"elizabot\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport ChatProvider from \"./ChatContext\";\nimport ChatSidebar from \"./ChatSidebar/ChatSidebar\";\nimport ChatHeader from \"./ChatHeader/ChatHeader\";\nimport ShowChats from \"./ShowChats/ShowChats\";\nimport ChatInput from \"./ChatInput/ChatInput\";\nimport Wrapper, { Sidebar, Message, Header, ArrowButton, Body, Footer } from \"./Chat.styled\";\nconst eliza = new Eliza();\n\nconst Chat = () => {\n  const {\n    0: chats,\n    1: setChats\n  } = useState([]);\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n  const {\n    0: listen,\n    1: setListen\n  } = useState(false);\n  const {\n    0: toggleSidebar,\n    1: setToggleSidebar\n  } = useState(false);\n  useEffect(() => {\n    const setReply = () => {\n      const reply = eliza.transform(value);\n      chats.push({\n        id: Date.now(),\n        type: \"eliza\",\n        message: reply\n      });\n      setChats([...chats]);\n      setListen(false);\n    };\n\n    setTimeout(() => {\n      if (listen) setReply();\n    }, 1000); // scroll to bottom\n\n    const chatBody = document.getElementById(\"chatBody\");\n    chatBody.scrollTop = chatBody.scrollHeight;\n  }, [listen]);\n\n  const handleChat = e => {\n    e.preventDefault();\n\n    if (value === \"\") {\n      return alert(\"Please write your message!\");\n    }\n\n    chats.push({\n      id: Date.now(),\n      type: \"author\",\n      message: value\n    });\n    setChats([...chats]);\n    setValue(\"\");\n    setListen(true);\n  };\n\n  const resetChat = () => {\n    setChats([]);\n  };\n\n  return __jsx(ChatProvider, null, __jsx(Wrapper, null, __jsx(Sidebar, {\n    $isActive: toggleSidebar\n  }, __jsx(ChatSidebar, {\n    resetChat: resetChat,\n    setToggleSidebar: setToggleSidebar\n  })), __jsx(Message, null, __jsx(Header, null, __jsx(ArrowButton, {\n    onClick: () => setToggleSidebar(!toggleSidebar)\n  }, __jsx(BsArrowLeft, null)), __jsx(ChatHeader, null)), __jsx(Body, {\n    id: \"chatBody\"\n  }, __jsx(ShowChats, {\n    chats: chats\n  })), __jsx(Footer, null, __jsx(ChatInput, {\n    value: value,\n    onChange: e => setValue(e.target.value),\n    onSubmit: handleChat\n  })))));\n};\n\nexport default Chat;","map":null,"metadata":{},"sourceType":"module"}