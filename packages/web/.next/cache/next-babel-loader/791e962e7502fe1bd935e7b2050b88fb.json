{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, Fragment } from 'react';\n\nclass ReadMore extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      expanded: false\n    });\n\n    _defineProperty(this, \"toggleLines\", event => {\n      event.preventDefault();\n      this.setState({\n        expanded: !this.state.expanded\n      });\n    });\n  }\n\n  render() {\n    const {\n      children,\n      more,\n      less,\n      character\n    } = this.props;\n    const {\n      expanded\n    } = this.state;\n    if (!children) return '';\n    return __jsx(Fragment, null, children && children.length < character || expanded ? children : children.substring(0, character), children && children.length > character && !expanded && __jsx(\"span\", null, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.toggleLines,\n      style: {\n        marginLeft: 15,\n        color: '#30C56D'\n      }\n    }, more)), children && children.length > character && expanded && __jsx(\"span\", null, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.toggleLines,\n      style: {\n        marginLeft: 15,\n        color: '#30C56D'\n      }\n    }, less)));\n  }\n\n}\n\nReadMore.defaultProps = {\n  character: 150,\n  more: 'more',\n  less: 'less'\n};\nexport default ReadMore;","map":null,"metadata":{},"sourceType":"module"}