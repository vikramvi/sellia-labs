{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Text from 'reusecore/src/elements/Text';\nimport Image from 'reusecore/src/elements/Image';\nimport PlaceholderImage from 'core/static/images/categoryPlaceholder.svg';\nconst GridWrapper = styled('div').withConfig({\n  displayName: \"categoryListCard__GridWrapper\",\n  componentId: \"sc-1phjjuk-0\"\n})([\"display:flex;flex-direction:row;align-items:center;width:100%;margin-bottom:25px;flex-shrink:0;cursor:pointer;padding:10px 15px 10px 25px;&:last-child{margin-right:0;margin-bottom:0;}&:hover{background-color:rgba(226,226,226,0.15);}\"]);\nconst ImageWrapper = styled('div').withConfig({\n  displayName: \"categoryListCard__ImageWrapper\",\n  componentId: \"sc-1phjjuk-1\"\n})([\"width:50px;height:50px;display:flex;flex-shrink:0;overflow:hidden;position:relative;border-radius:25px;\"]);\nconst GridData = styled('div').withConfig({\n  displayName: \"categoryListCard__GridData\",\n  componentId: \"sc-1phjjuk-2\"\n})([\"width:100%;display:flex;flex-direction:column;align-items:flex-start;margin-left:20px;overflow:hidden;\"]);\n\nconst CategoryListCard = (_ref) => {\n  let {\n    title,\n    postNumber,\n    source,\n    imageStyle,\n    selected,\n    titleStyle,\n    postNumberStyle,\n    handleClick\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"title\", \"postNumber\", \"source\", \"imageStyle\", \"selected\", \"titleStyle\", \"postNumberStyle\", \"handleClick\"]);\n\n  const imgSrc = source ? source : PlaceholderImage;\n  const selectedBg = selected === true ? 'rgba(226,226,226,0.5)' : 'transparent';\n  return __jsx(GridWrapper, _extends({}, props, {\n    style: {\n      backgroundColor: selectedBg\n    }\n  }), imgSrc && __jsx(ImageWrapper, imageStyle, __jsx(Image, {\n    src: imgSrc,\n    alt: title,\n    width: \"100%\",\n    height: \"100%\",\n    style: {\n      objectFit: 'cover'\n    }\n  })), __jsx(GridData, {\n    onClick: handleClick\n  }, title && __jsx(Heading, _extends({\n    content: title,\n    color: \"#595959\",\n    fontSize: 16\n  }, titleStyle)), postNumber && __jsx(Text, _extends({\n    content: postNumber,\n    color: \"#8C8C8C\",\n    fontSize: 12,\n    style: {\n      margin: 0\n    }\n  }, postNumberStyle))));\n};\n\nCategoryListCard.defaultProps = {\n  titleStyle: {\n    fontSize: '16px',\n    fontWeight: 'normal',\n    mb: '0',\n    color: '#333333'\n  }\n};\nexport default CategoryListCard;","map":null,"metadata":{},"sourceType":"module"}