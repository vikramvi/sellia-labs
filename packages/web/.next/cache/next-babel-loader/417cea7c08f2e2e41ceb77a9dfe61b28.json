{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/bhavikshah/Work/headless-graphql/packages/web/components/Input/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport InputField from './Input.style'; // get input focus class\n\nvar getInputFocusClass = function getInputFocusClass(value) {\n  if (value !== '' && value != null) {\n    return 'is-focus';\n  } else {\n    return '';\n  }\n};\n\nvar input = function input(props) {\n  var inputElement;\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = __jsx(\"input\", _extends({}, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        onBlur: props.onBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n      break;\n\n    case 'select':\n      inputElement = __jsx(\"select\", {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, props.elementConfig.options.map(function (option) {\n        return __jsx(\"option\", {\n          key: option.value,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, option.name);\n      }));\n      break;\n\n    case 'textarea':\n      inputElement = __jsx(\"textarea\", _extends({}, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        rows: props.rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n      break;\n\n    default:\n      inputElement = __jsx(\"input\", _extends({}, props, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n  }\n\n  return __jsx(InputField, {\n    style: props.style,\n    className: \"\".concat(getInputFocusClass(props.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, inputElement, __jsx(\"span\", {\n    className: \"highlight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: props.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \" \", props.label, \" \"));\n};\n\nexport default input;","map":{"version":3,"sources":["/Users/bhavikshah/Work/headless-graphql/packages/web/components/Input/index.js"],"names":["React","InputField","getInputFocusClass","value","input","props","inputElement","elementType","elementConfig","changed","onBlur","options","map","option","name","rows","style","label"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK,EAAI;AAClC,MAAIA,KAAK,KAAK,EAAV,IAAgBA,KAAK,IAAI,IAA7B,EAAmC;AACjC,WAAO,UAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF,CAND;;AAQA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACrB,MAAIC,YAAJ;;AACA,UAAQD,KAAK,CAACE,WAAd;AACE,SAAK,OAAL;AACED,MAAAA,YAAY,GACV,4BACMD,KAAK,CAACG,aADZ;AAEE,QAAA,KAAK,EAAEH,KAAK,CAACF,KAFf;AAGE,QAAA,QAAQ,EAAEE,KAAK,CAACI,OAHlB;AAIE,QAAA,MAAM,EAAEJ,KAAK,CAACK,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAQA;;AACF,SAAK,QAAL;AACEJ,MAAAA,YAAY,GACV;AAAQ,QAAA,KAAK,EAAED,KAAK,CAACF,KAArB;AAA4B,QAAA,QAAQ,EAAEE,KAAK,CAACI,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,KAAK,CAACG,aAAN,CAAoBG,OAApB,CAA4BC,GAA5B,CAAgC,UAAAC,MAAM;AAAA,eACrC;AAAQ,UAAA,GAAG,EAAEA,MAAM,CAACV,KAApB;AAA2B,UAAA,KAAK,EAAEU,MAAM,CAACV,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGU,MAAM,CAACC,IADV,CADqC;AAAA,OAAtC,CADH,CADF;AASA;;AACF,SAAK,UAAL;AACER,MAAAA,YAAY,GACV,+BACMD,KAAK,CAACG,aADZ;AAEE,QAAA,KAAK,EAAEH,KAAK,CAACF,KAFf;AAGE,QAAA,QAAQ,EAAEE,KAAK,CAACI,OAHlB;AAIE,QAAA,IAAI,EAAEJ,KAAK,CAACU,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAQA;;AACF;AACET,MAAAA,YAAY,GAAG,4BAAWD,KAAX;AAAkB,QAAA,KAAK,EAAEA,KAAK,CAACF,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAjCJ;;AAmCA,SACE,MAAC,UAAD;AACE,IAAA,KAAK,EAAEE,KAAK,CAACW,KADf;AAEE,IAAA,SAAS,YAAKd,kBAAkB,CAACG,KAAK,CAACF,KAAP,CAAvB,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGG,YAJH,EAKE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAO,IAAA,OAAO,EAAED,KAAK,CAACY,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA+BZ,KAAK,CAACY,KAArC,MANF,CADF;AAUD,CA/CD;;AAiDA,eAAeb,KAAf","sourcesContent":["import React from 'react';\nimport InputField from './Input.style';\n\n// get input focus class\nconst getInputFocusClass = value => {\n  if (value !== '' && value != null) {\n    return 'is-focus';\n  } else {\n    return '';\n  }\n};\n\nconst input = props => {\n  let inputElement;\n  switch (props.elementType) {\n    case 'input':\n      inputElement = (\n        <input\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n          onBlur={props.onBlur}\n        />\n      );\n      break;\n    case 'select':\n      inputElement = (\n        <select value={props.value} onChange={props.changed}>\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.name}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    case 'textarea':\n      inputElement = (\n        <textarea\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n          rows={props.rows}\n        />\n      );\n      break;\n    default:\n      inputElement = <input {...props} value={props.value} />;\n  }\n  return (\n    <InputField\n      style={props.style}\n      className={`${getInputFocusClass(props.value)}`}\n    >\n      {inputElement}\n      <span className=\"highlight\" />\n      <label htmlFor={props.label}> {props.label} </label>\n    </InputField>\n  );\n};\n\nexport default input;\n"]},"metadata":{},"sourceType":"module"}