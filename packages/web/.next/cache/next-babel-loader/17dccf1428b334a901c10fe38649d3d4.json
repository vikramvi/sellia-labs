{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/Users/bhavikshah/Work/headless-graphql/packages/web/containers/SignUpForm/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Router from 'next/router';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Icon from 'react-icons-kit';\nimport { locked } from 'react-icons-kit/iconic/locked';\nimport { phone } from 'react-icons-kit/iconic/phone';\nimport Text from 'reusecore/src/elements/Text';\nimport Button from 'reusecore/src/elements/Button';\nimport AuthHeader from '../../components/AuthHeader';\nimport Input from '../../components/Input';\nimport Box from 'reusecore/src/elements/Box';\nimport { FormGroup, ErrorNotification } from '../SignInForm/style';\nimport { REGISTER } from 'core/graphql/Mutations';\nimport { useMutation } from '@apollo/react-hooks';\nimport AuthHelper from '../../helpers/authHelper';\nimport { setFirebaseCookie } from '../../helpers/session';\nimport redirect from '../../helpers/redirect';\nconst SignupEnhancher = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: props => ({\n    email: '',\n    password: ''\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Invalid email address').required('Email is required!'),\n    password: Yup.string().required('Password is required')\n  })\n});\nlet token = '';\n\nconst SignUpForm = ({\n  values,\n  touched,\n  errors,\n  handleChange,\n  handleSubmit,\n  handleBlur,\n  setFieldValue\n}) => {\n  const {\n    0: error,\n    1: setError\n  } = useState({});\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const [registerMutation, {\n    data\n  }] = useMutation(REGISTER);\n\n  handleSubmit = async () => {\n    setLoading(true);\n\n    if (!_Object$keys(errors).length) {\n      const {\n        email,\n        password\n      } = values;\n      const provider = 'password';\n      const {\n        user,\n        error\n      } = await AuthHelper.signUp(provider, email, password);\n\n      if (user) {\n        token = await user.getIdToken();\n        setFieldValue('token', token);\n      } else if (error) {\n        setLoading(false);\n        setError(error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    (async function () {\n      try {\n        if (values.token) {\n          const res = await registerMutation({\n            variables: {\n              user: {\n                email: values.email,\n                token: values.token\n              }\n            }\n          });\n\n          if (res && res.data && res.data.register) {\n            setLoading(false);\n            const user = res.data.register;\n            setFirebaseCookie('id_token', token);\n            setFirebaseCookie('user', _objectSpread({}, user));\n            redirect({}, '/');\n          }\n        }\n      } catch (error) {\n        setLoading(false);\n      }\n    })();\n  }, [values.token]);\n  return __jsx(React.Fragment, null, __jsx(AuthHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(FormGroup, {\n    className: errors.email ? 'hasErrorMsg' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Input, {\n    elementType: \"input\",\n    elementConfig: {\n      type: 'email',\n      required: 'required'\n    },\n    value: values.email,\n    error: errors.email,\n    touched: touched,\n    label: \"Email\",\n    onBlur: handleBlur('email'),\n    changed: handleChange('email'),\n    highlightColor: \"#f09\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    className: \"errorMsg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, errors.email && touched.email && errors.email)), __jsx(FormGroup, {\n    className: errors.password ? 'hasErrorMsg' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(Input, {\n    elementType: \"input\",\n    elementConfig: {\n      type: 'password',\n      required: 'required'\n    },\n    value: values.password,\n    error: errors.password,\n    onBlur: handleBlur('password'),\n    touched: touched,\n    label: \"Password\",\n    changed: handleChange('password'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    className: \"errorMsg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, errors.password && touched.password && errors.password)), error.message ? __jsx(Box, {\n    flexBox: true,\n    mt: 20,\n    mb: 15,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(ErrorNotification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, error.message)) : '', __jsx(Button, {\n    onClick: handleSubmit,\n    title: \"Sign up now\",\n    width: 1,\n    isLoading: loading,\n    loaderColor: \"#fff\",\n    icon: __jsx(Icon, {\n      icon: locked,\n      size: 21,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }),\n    mt: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), __jsx(Box, {\n    flexBox: true,\n    mt: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, __jsx(Text, {\n    content: \" Have an account ?\",\n    color: \"#8C8C8C\",\n    mb: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), __jsx(Button, {\n    title: \"Sign In\",\n    variant: \"textButton\",\n    ml: \"5px\",\n    onClick: () => Router.push('/signin'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })));\n};\n\nexport default SignupEnhancher(SignUpForm);","map":{"version":3,"sources":["/Users/bhavikshah/Work/headless-graphql/packages/web/containers/SignUpForm/index.js"],"names":["React","useEffect","useState","Router","withFormik","Yup","Icon","locked","phone","Text","Button","AuthHeader","Input","Box","FormGroup","ErrorNotification","REGISTER","useMutation","AuthHelper","setFirebaseCookie","redirect","SignupEnhancher","enableReinitialize","mapPropsToValues","props","email","password","validationSchema","object","shape","string","required","token","SignUpForm","values","touched","errors","handleChange","handleSubmit","handleBlur","setFieldValue","error","setError","loading","setLoading","registerMutation","data","length","provider","user","signUp","getIdToken","res","variables","register","type","message","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Router from 'next/router';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Icon from 'react-icons-kit';\nimport { locked } from 'react-icons-kit/iconic/locked';\nimport { phone } from 'react-icons-kit/iconic/phone';\n\nimport Text from 'reusecore/src/elements/Text';\nimport Button from 'reusecore/src/elements/Button';\nimport AuthHeader from '../../components/AuthHeader';\nimport Input from '../../components/Input';\nimport Box from 'reusecore/src/elements/Box';\nimport { FormGroup, ErrorNotification } from '../SignInForm/style';\nimport { REGISTER } from 'core/graphql/Mutations';\nimport { useMutation } from '@apollo/react-hooks';\nimport AuthHelper from '../../helpers/authHelper';\nimport { setFirebaseCookie } from '../../helpers/session';\nimport redirect from '../../helpers/redirect';\n\nconst SignupEnhancher = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: props => ({ email: '', password: '' }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('Email is required!'),\n    password: Yup.string().required('Password is required'),\n  }),\n});\nlet token = '';\nconst SignUpForm = ({\n  values,\n  touched,\n  errors,\n  handleChange,\n  handleSubmit,\n  handleBlur,\n  setFieldValue,\n}) => {\n  const [error, setError] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [registerMutation, { data }] = useMutation(REGISTER);\n  handleSubmit = async () => {\n    setLoading(true);\n    if (!Object.keys(errors).length) {\n      const { email, password } = values;\n      const provider = 'password';\n      const { user, error } = await AuthHelper.signUp(\n        provider,\n        email,\n        password\n      );\n      if (user) {\n        token = await user.getIdToken();\n        setFieldValue('token', token);\n      } else if (error) {\n        setLoading(false);\n        setError(error);\n      }\n    }\n  };\n  useEffect(() => {\n    (async function() {\n      try {\n        if (values.token) {\n          const res = await registerMutation({\n            variables: { user: { email: values.email, token: values.token } },\n          });\n          if (res && res.data && res.data.register) {\n            setLoading(false);\n            const user = res.data.register;\n            setFirebaseCookie('id_token', token);\n            setFirebaseCookie('user', { ...user });\n            redirect({}, '/');\n          }\n        }\n      } catch (error) {\n        setLoading(false);\n      }\n    })();\n  }, [values.token]);\n  return (\n    <>\n      {/* auth page header section */}\n      <AuthHeader />\n\n      {/* signup form */}\n      <FormGroup className={errors.email ? 'hasErrorMsg' : ''}>\n        <Input\n          elementType=\"input\"\n          elementConfig={{\n            type: 'email',\n            required: 'required',\n          }}\n          value={values.email}\n          error={errors.email}\n          touched={touched}\n          label=\"Email\"\n          onBlur={handleBlur('email')}\n          changed={handleChange('email')}\n          highlightColor=\"#f09\"\n        />\n        <span className=\"errorMsg\">\n          {errors.email && touched.email && errors.email}\n        </span>\n      </FormGroup>\n\n      <FormGroup className={errors.password ? 'hasErrorMsg' : ''}>\n        <Input\n          elementType=\"input\"\n          elementConfig={{\n            type: 'password',\n            required: 'required',\n          }}\n          value={values.password}\n          error={errors.password}\n          onBlur={handleBlur('password')}\n          touched={touched}\n          label=\"Password\"\n          changed={handleChange('password')}\n        />\n        <span className=\"errorMsg\">\n          {errors.password && touched.password && errors.password}\n        </span>\n      </FormGroup>\n\n      {error.message ? (\n        <Box\n          flexBox\n          mt={20}\n          mb={15}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <ErrorNotification>{error.message}</ErrorNotification>\n        </Box>\n      ) : (\n        ''\n      )}\n\n      <Button\n        onClick={handleSubmit}\n        title=\"Sign up now\"\n        width={1}\n        isLoading={loading}\n        loaderColor=\"#fff\"\n        icon={<Icon icon={locked} size={21} />}\n        mt={20}\n      />\n\n      {/* <Text\n        fontSize={14}\n        content=\"Or\"\n        color=\"#8C8C8C\"\n        textAlign=\"center\"\n        mt={16}\n      /> */}\n\n      {/* <Button\n        onClick={handleSubmit}\n        title=\"Sign up with\"\n        icon={<Icon icon={phone} size={21} />}\n        width={1}\n        bg=\"#5CABE6\"\n      /> */}\n\n      {/* signin page redirection section */}\n\n      <Box flexBox mt={20} justifyContent=\"center\" alignItems=\"center\">\n        <Text content=\" Have an account ?\" color=\"#8C8C8C\" mb=\"0\" />\n\n        <Button\n          title=\"Sign In\"\n          variant=\"textButton\"\n          ml=\"5px\"\n          onClick={() => Router.push('/signin')}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default SignupEnhancher(SignUpForm);\n"]},"metadata":{},"sourceType":"module"}