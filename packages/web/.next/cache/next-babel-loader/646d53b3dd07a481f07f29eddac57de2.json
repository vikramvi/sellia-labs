{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Row } from 'react-styled-flexboxgrid';\nimport LocationSearchInput from '../../../components/InputGooglePlace/altered';\nimport { RangeBoxWrapper, RangeSlider, Holder, Col } from './style';\nimport Switch from 'reusecore/src/elements/Switch';\nimport { SearchContext, initialState } from '../../../contexts/SearchContext';\nimport { setStateToUrl, getUrlToState, clearUrl } from '../../../helpers/urlHandler';\nimport Button from 'reusecore/src/elements/Button';\nimport Text from 'reusecore/src/elements/Text';\nimport Input from '../../../components/Input';\n\nvar FilterElements = function FilterElements(props) {\n  var _useContext = useContext(SearchContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var urlState = getUrlToState();\n\n  var _useState = useState(_objectSpread({}, urlState)),\n      filterState = _useState[0],\n      setFilterState = _useState[1];\n\n  var negotiableSwitchToggle = function negotiableSwitchToggle(value) {\n    setFilterState(_objectSpread(_objectSpread({}, filterState), {}, {\n      isNegotiable: value\n    }));\n  };\n\n  var newConditionSwitchToggle = function newConditionSwitchToggle(value) {\n    setFilterState(_objectSpread(_objectSpread({}, filterState), {}, {\n      condition: value\n    }));\n  };\n\n  var onRadiusSlidingComplete = function onRadiusSlidingComplete(value) {\n    setFilterState(_objectSpread(_objectSpread({}, filterState), {}, {\n      radius: value\n    }));\n  };\n\n  var onPriceSlidingComplete = function onPriceSlidingComplete(value) {\n    setFilterState(_objectSpread(_objectSpread({}, filterState), {}, {\n      price: value\n    }));\n  };\n\n  var handleAddress = function handleAddress(address) {\n    setFilterState(_objectSpread(_objectSpread({}, filterState), {}, {\n      address: address\n    }));\n  };\n\n  var _handleLocation = function handleLocation(location, address) {\n    setFilterState(_objectSpread(_objectSpread({}, filterState), {}, {\n      address: address,\n      location_lat: location.lat,\n      location_lng: location.lng,\n      radius: filterState.radius ? filterState.radius : state.radius\n    }));\n  };\n\n  var handleApply = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: 'UPDATE',\n                payload: filterState\n              });\n              setStateToUrl(_objectSpread({}, filterState));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleApply() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleClearSearch = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              clearUrl();\n              setFilterState(_objectSpread(_objectSpread({}, initialState), {}, {\n                price: [0, 0],\n                radius: 0\n              }));\n              dispatch({\n                type: 'UPDATE',\n                payload: {}\n              }); // setStateToUrl({});\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleClearSearch() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var address = filterState.address,\n      isNegotiable = filterState.isNegotiable,\n      condition = filterState.condition,\n      radius = filterState.radius,\n      price = filterState.price,\n      text = filterState.text;\n  return __jsx(\"div\", {\n    style: {\n      paddingTop: 20,\n      paddingBottom: 40\n    }\n  }, __jsx(Input, {\n    elementType: \"input\",\n    value: text,\n    label: \"Title\",\n    elementConfig: {\n      type: 'email',\n      required: 'required'\n    },\n    changed: function changed(e) {\n      setFilterState(_objectSpread(_objectSpread({}, filterState), {}, {\n        text: e.target.value\n      }));\n    },\n    style: {\n      marginTop: 20\n    }\n  }), __jsx(LocationSearchInput, {\n    address: address,\n    handleAddress: function handleAddress() {},\n    handleChange: handleAddress,\n    handleLocation: function handleLocation(location, selectedAddress) {\n      return _handleLocation(location, selectedAddress);\n    }\n  }), __jsx(Row, null, __jsx(Col, {\n    md: 6,\n    sm: 12,\n    xs: 12,\n    style: {\n      marginBottom: 20\n    }\n  }, __jsx(Text, {\n    fontSize: 14,\n    color: \"#595959\",\n    mb: 10,\n    content: \"Radius\"\n  }), __jsx(RangeBoxWrapper, null, __jsx(RangeSlider, {\n    min: 20,\n    max: 1000,\n    labelText: \"\",\n    slideDefaultValue: radius,\n    tipFormatter: function tipFormatter(value) {\n      return \"\".concat(value, \"km\");\n    },\n    handleChangefunc: function handleChangefunc(value) {\n      return onRadiusSlidingComplete(value);\n    },\n    onAfterChange: function onAfterChange(value) {\n      return onRadiusSlidingComplete(value);\n    }\n  }))), __jsx(Col, {\n    md: 6,\n    sm: 12,\n    xs: 12\n  }, __jsx(Text, {\n    fontSize: 14,\n    color: \"#595959\",\n    mb: 10,\n    content: \"Price\"\n  }), __jsx(RangeBoxWrapper, null, __jsx(RangeSlider, {\n    min: 0,\n    max: 1000000,\n    step: 1000,\n    rangeDefaultValue: price,\n    labelText: \"\",\n    handleChangefunc: function handleChangefunc(value) {\n      return onPriceSlidingComplete(value);\n    },\n    onAfterChange: function onAfterChange(value) {\n      return onPriceSlidingComplete(value);\n    },\n    tipFormatter: function tipFormatter(value) {\n      return \"$ \".concat(value);\n    },\n    type: \"range\",\n    dotStyle: {\n      height: 0\n    }\n  })))), __jsx(Row, null, __jsx(Col, {\n    md: 6,\n    sm: 12,\n    xs: 12\n  }, __jsx(Holder, {\n    style: {\n      marginTop: 32\n    }\n  }, __jsx(Text, {\n    fontSize: 14,\n    color: \"#595959\",\n    mr: 30,\n    mb: 0,\n    content: \"Negotiable?\"\n  }), __jsx(Switch, {\n    onChange: function onChange(value) {\n      return negotiableSwitchToggle(value);\n    },\n    value: isNegotiable,\n    isChecked: isNegotiable,\n    switchSize: \"50px\",\n    switchColor: \"#30C56D\",\n    barColor: \"#30C56D\"\n  }))), __jsx(Col, {\n    md: 6,\n    sm: 12,\n    xs: 12\n  }, __jsx(Holder, {\n    style: {\n      marginTop: 32\n    }\n  }, __jsx(Text, {\n    fontSize: 14,\n    color: \"#595959\",\n    mr: 30,\n    mb: 0,\n    content: \"New Condition?\"\n  }), __jsx(Switch, {\n    onChange: function onChange(value) {\n      return newConditionSwitchToggle(value);\n    },\n    value: condition,\n    isChecked: condition,\n    switchSize: \"50px\",\n    switchColor: \"#30C56D\",\n    barColor: \"#30C56D\"\n  })))), __jsx(Row, null, __jsx(Col, {\n    mdOffset: 6,\n    md: 6,\n    xs: 12,\n    sm: 12\n  }, __jsx(Row, null, __jsx(Col, {\n    xs: true,\n    className: \"visible-lg\"\n  }, __jsx(Button, {\n    onClick: props.toggleSearchDrawer,\n    title: \"Hide\",\n    bg: \"#e2e2e2\",\n    color: \"#545454\",\n    style: {\n      marginTop: 30,\n      width: '100%'\n    }\n  })), __jsx(Col, {\n    xs: true\n  }, __jsx(Button, {\n    onClick: handleClearSearch,\n    title: \"Clear\",\n    bg: \"#e2e2e2\",\n    color: \"#545454\",\n    style: {\n      marginTop: 30,\n      width: '100%'\n    }\n  })), __jsx(Col, {\n    xs: true\n  }, __jsx(Button, {\n    onClick: handleApply,\n    title: \"Apply\",\n    style: {\n      marginTop: 30,\n      width: '100%'\n    }\n  }))))));\n};\n\nexport default FilterElements;","map":null,"metadata":{},"sourceType":"module"}