{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { StyledButton, ButtonIcon, ButtonText } from './style';\n\nconst TextButton = (_ref) => {\n  let {\n    title,\n    onClick,\n    style,\n    icon,\n    iconStyle,\n    iconPosition,\n    className,\n    disabled\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"title\", \"onClick\", \"style\", \"icon\", \"iconStyle\", \"iconPosition\", \"className\", \"disabled\"]);\n\n  return __jsx(StyledButton, _extends({\n    style: style,\n    onClick: onClick,\n    className: className,\n    disabled: disabled\n  }, props), icon && iconPosition === 'left' && __jsx(ButtonIcon, {\n    disabled: disabled,\n    style: iconStyle,\n    iconPosition: iconPosition\n  }, icon), __jsx(ButtonText, null, title), icon && iconPosition === 'right' && __jsx(ButtonIcon, {\n    disabled: disabled,\n    style: iconStyle,\n    iconPosition: iconPosition\n  }, icon));\n};\n\nTextButton.defaultProps = {\n  iconPosition: 'right',\n  activeOpacity: 0.9,\n  disabled: false\n};\nexport default TextButton;","map":null,"metadata":{},"sourceType":"module"}