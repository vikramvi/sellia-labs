{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  query Author($USERNAME: ID!, $LIMIT: Int, $page: Int) {\\n    author(id: $USERNAME) {\\n      id\\n      draft(limit: $LIMIT, page: $page) {\\n        data {\\n          ...AuthorPostsQuery\\n        }\\n        total\\n      }\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  query Author($USERNAME: ID!, $LIMIT: Int, $page: Int) {\\n    author(id: $USERNAME) {\\n      id\\n      favourite(limit: $LIMIT, page: $page) {\\n        data {\\n          ...AuthorPostsQuery\\n        }\\n        total\\n      }\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  query Author($USERNAME: ID!, $LIMIT: Int, $page: Int) {\\n    author(id: $USERNAME) {\\n      id\\n      username\\n      posts(limit: $LIMIT, page: $page) {\\n        data {\\n          ...AuthorPostsQuery\\n        }\\n        total\\n      }\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query Author($USERNAME: ID!) {\\n    author(id: $USERNAME) {\\n      id\\n      name\\n      image {\\n        url\\n        largeUrl\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query Author($USERNAME: ID!, $LIMIT: Int) {\\n    author(id: $USERNAME) {\\n      id\\n      name\\n      username\\n      address\\n      mobile {\\n        number\\n      }\\n      website\\n      image {\\n        url\\n        largeUrl\\n      }\\n      posts(limit: $LIMIT) {\\n        total\\n      }\\n      favourite(limit: $LIMIT) {\\n        total\\n      }\\n      draft(limit: $LIMIT) {\\n        total\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  fragment AuthorPostsQuery on Post {\\n    id\\n    slug\\n    image {\\n      url\\n      largeUrl\\n    }\\n    title\\n    price\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nvar AuthorPostsFragment = gql(_templateObject());\nexport var GET_PROFILE_INFO = gql(_templateObject2());\nexport var GET_AUTHOR_INFO = gql(_templateObject3());\nexport var GET_PUBLISHED_POST = gql(_templateObject4(), AuthorPostsFragment);\nexport var GET_FAVOURITE_POST = gql(_templateObject5(), AuthorPostsFragment);\nexport var GET_DRAFT_POST = gql(_templateObject6(), AuthorPostsFragment);","map":{"version":3,"sources":["/Users/bhavikshah/Work/Sellia/sellia-mono/selliafemono/node_modules/@headless/core/graphql/Profile.query.js"],"names":["gql","AuthorPostsFragment","GET_PROFILE_INFO","GET_AUTHOR_INFO","GET_PUBLISHED_POST","GET_FAVOURITE_POST","GET_DRAFT_POST"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,IAAMC,mBAAmB,GAAGD,GAAH,mBAAzB;AAaA,OAAO,IAAME,gBAAgB,GAAGF,GAAH,oBAAtB;AA2BP,OAAO,IAAMG,eAAe,GAAGH,GAAH,oBAArB;AAaP,OAAO,IAAMI,kBAAkB,GAAGJ,GAAH,qBAa3BC,mBAb2B,CAAxB;AAgBP,OAAO,IAAMI,kBAAkB,GAAGL,GAAH,qBAY3BC,mBAZ2B,CAAxB;AAeP,OAAO,IAAMK,cAAc,GAAGN,GAAH,qBAYvBC,mBAZuB,CAApB","sourcesContent":["import gql from 'graphql-tag';\n\nconst AuthorPostsFragment = gql`\n  fragment AuthorPostsQuery on Post {\n    id\n    slug\n    image {\n      url\n      largeUrl\n    }\n    title\n    price\n  }\n`;\n\nexport const GET_PROFILE_INFO = gql`\n  query Author($USERNAME: ID!, $LIMIT: Int) {\n    author(id: $USERNAME) {\n      id\n      name\n      username\n      address\n      mobile {\n        number\n      }\n      website\n      image {\n        url\n        largeUrl\n      }\n      posts(limit: $LIMIT) {\n        total\n      }\n      favourite(limit: $LIMIT) {\n        total\n      }\n      draft(limit: $LIMIT) {\n        total\n      }\n    }\n  }\n`;\nexport const GET_AUTHOR_INFO = gql`\n  query Author($USERNAME: ID!) {\n    author(id: $USERNAME) {\n      id\n      name\n      image {\n        url\n        largeUrl\n      }\n    }\n  }\n`;\n\nexport const GET_PUBLISHED_POST = gql`\n  query Author($USERNAME: ID!, $LIMIT: Int, $page: Int) {\n    author(id: $USERNAME) {\n      id\n      username\n      posts(limit: $LIMIT, page: $page) {\n        data {\n          ...AuthorPostsQuery\n        }\n        total\n      }\n    }\n  }\n  ${AuthorPostsFragment}\n`;\n\nexport const GET_FAVOURITE_POST = gql`\n  query Author($USERNAME: ID!, $LIMIT: Int, $page: Int) {\n    author(id: $USERNAME) {\n      id\n      favourite(limit: $LIMIT, page: $page) {\n        data {\n          ...AuthorPostsQuery\n        }\n        total\n      }\n    }\n  }\n  ${AuthorPostsFragment}\n`;\n\nexport const GET_DRAFT_POST = gql`\n  query Author($USERNAME: ID!, $LIMIT: Int, $page: Int) {\n    author(id: $USERNAME) {\n      id\n      draft(limit: $LIMIT, page: $page) {\n        data {\n          ...AuthorPostsQuery\n        }\n        total\n      }\n    }\n  }\n  ${AuthorPostsFragment}\n`;\n"]},"metadata":{},"sourceType":"module"}