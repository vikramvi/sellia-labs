{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar __jsx = React.createElement;\nimport React, { useReducer, createContext } from 'react';\nexport var STEPS = {\n  STEP_CHOOSE_IMAGES: 'STEP_CHOOSE_IMAGES',\n  STEP_SET_TITLE_AND_PRICE: 'STEP_SET_TITLE_AND_PRICE',\n  STEP_SET_LOCATION: 'STEP_SET_LOCATION',\n  STEP_SET_CATEGORY_AND_TAGS: 'STEP_SET_CATEGORY_AND_TAGS',\n  STEP_SET_CONTACT_NUMBER: 'STEP_SET_CONTACT_NUMBER',\n  STEP_VERIFY_MOBILE_NUMBER: 'STEP_VERIFY_MOBILE_NUMBER'\n};\nexport var adPostSteps = _Object$keys(STEPS);\nvar initState = {\n  step: 0,\n  adPost: {\n    image: {},\n    preImage: {},\n    authorId: false,\n    preGallery: [],\n    localGallery: [],\n    localImage: {},\n    gallery: [],\n    title: '',\n    slug: '',\n    price: 0,\n    isNegotiable: true,\n    condition: false,\n    location: null,\n    categories: [],\n    content: '',\n    contactNumber: '',\n    status: 'draft'\n  }\n};\nexport default function addPostReducer(state, action) {\n  switch (action.type) {\n    case 'UPDATE_ADPOST':\n      {\n        var key = action.payload.key;\n        return _objectSpread({}, state, {\n          adPost: _objectSpread({}, state.adPost, _defineProperty({}, key, action.payload.value))\n        });\n      }\n\n    case 'UPDATE_FULL_ADPOST':\n      {\n        return _objectSpread({}, state, {\n          adPost: _objectSpread({}, state.adPost, action.payload)\n        });\n      }\n\n    case 'CANCEL_AD_POSTING':\n      {\n        return _objectSpread({}, state, {\n          adPost: initState.adPost,\n          step: 0\n        });\n      }\n\n    case 'UPDATE_STEP':\n      {\n        return _objectSpread({}, state, {\n          step: action.payload.step\n        });\n      }\n\n    default:\n      return state;\n  }\n}\nexport var AddPostContext = createContext({});\nexport var AddPostProvider = function AddPostProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(addPostReducer, initState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return __jsx(AddPostContext.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    }\n  }, children);\n};","map":null,"metadata":{},"sourceType":"module"}