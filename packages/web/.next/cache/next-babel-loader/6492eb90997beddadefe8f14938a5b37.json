{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from 'react';\nimport Icon from 'react-icons-kit';\nimport { archive } from 'react-icons-kit/ionicons/archive';\nimport { chevronRight } from 'react-icons-kit/ionicons/chevronRight';\nimport { chevronLeft } from 'react-icons-kit/ionicons/chevronLeft';\nimport { uploadMultipleImages } from '../../../helpers/uploadMultipleImage';\nimport Box from 'reusecore/src/elements/Box';\nimport Button from 'reusecore/src/elements/Button';\nimport Text from 'reusecore/src/elements/Text';\nimport LocationSearchInput from '../../../components/InputGooglePlace/altered';\nimport { withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { ADD_POST } from 'core/graphql/Mutations';\nimport { useMutation } from '@apollo/react-hooks';\nimport AuthHelper from '../../../helpers/authHelper';\nimport { AddPostContext } from '../../../contexts/AddPostContext';\nvar MapView = withGoogleMap(function (props) {\n  return __jsx(GoogleMap, {\n    defaultZoom: 13,\n    center: {\n      lat: props.location.latitude,\n      lng: props.location.longitude\n    }\n  }, __jsx(Marker, {\n    position: {\n      lat: props.location.latitude,\n      lng: props.location.longitude\n    },\n    draggable: true,\n    onDragEnd: props.markerDrag\n  }));\n});\nvar imagesUrl = [];\nexport default (function () {\n  var _useContext = useContext(AddPostContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var step = state.step,\n      adPost = state.adPost;\n\n  var _useState = useState(false),\n      btnLoading = _useState[0],\n      setBtnLoading = _useState[1];\n\n  var _useMutation = useMutation(ADD_POST),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      postMutation = _useMutation2[0],\n      data = _useMutation2[1].data;\n\n  var handleLocation = function handleLocation(latlng, selected) {\n    var locationObject = {\n      lat: false,\n      lng: false,\n      formattedAddress: ''\n    };\n\n    var location = _objectSpread({}, locationObject, {\n      lat: latlng.lat,\n      lng: latlng.lng,\n      formattedAddress: selected\n    });\n\n    dispatch({\n      type: 'UPDATE_ADPOST',\n      payload: {\n        key: 'location',\n        value: location\n      }\n    });\n  };\n\n  var handleAddress = function handleAddress() {};\n\n  var handleDraftingPost =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return AuthHelper.refreshToken();\n\n            case 2:\n              setBtnLoading(true);\n\n              if (!adPost.localGallery.length) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 6;\n              return uploadMultipleImages(adPost.localGallery);\n\n            case 6:\n              imagesUrl = _context.sent;\n\n              if (imagesUrl && imagesUrl.length > 0) {\n                dispatch({\n                  type: 'UPDATE_FULL_ADPOST',\n                  payload: {\n                    gallery: adPost.gallery.concat(imagesUrl[0]),\n                    image: !adPost.image.url ? imagesUrl[0][0] : adPost.image,\n                    localImage: {},\n                    localGallery: []\n                  }\n                });\n              }\n\n              _context.next = 21;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.next = 13;\n              return postMutation({\n                variables: {\n                  post: finalData\n                }\n              });\n\n            case 13:\n              _data = _context.sent;\n              setBtnLoading(false);\n\n              if (!adPost.id) {\n                dispatch({\n                  type: 'UPDATE_ADPOST',\n                  payload: {\n                    key: 'id',\n                    value: _data.data.addPost.id\n                  }\n                });\n              }\n\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](10);\n              setBtnLoading(false);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[10, 18]]);\n    }));\n\n    return function handleDraftingPost() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var preImage = adPost.preImage,\n      preGallery = adPost.preGallery,\n      localImage = adPost.localImage,\n      localGallery = adPost.localGallery,\n      location = adPost.location,\n      prossedAdPostData = _objectWithoutProperties(adPost, [\"preImage\", \"preGallery\", \"localImage\", \"localGallery\", \"location\"]);\n\n  var finalData = prossedAdPostData;\n\n  if (location && location.lat) {\n    finalData = _objectSpread({}, prossedAdPostData, {\n      location: location\n    });\n  }\n\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _data2;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!imagesUrl.length) {\n                _context2.next = 12;\n                break;\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return postMutation({\n                variables: {\n                  post: finalData\n                }\n              });\n\n            case 4:\n              _data2 = _context2.sent;\n              setBtnLoading(false);\n\n              if (!adPost.id) {\n                dispatch({\n                  type: 'UPDATE_ADPOST',\n                  payload: {\n                    key: 'id',\n                    value: _data2.data.addPost.id\n                  }\n                });\n              }\n\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              setBtnLoading(false);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 9]]);\n    }))();\n  }, [prossedAdPostData.gallery]);\n  var latlng = {\n    latitude: 22.5104166,\n    longitude: 88.37109750000002\n  };\n\n  if (adPost.location != null) {\n    latlng = {\n      latitude: adPost.location.lat,\n      longitude: adPost.location.lng\n    };\n  }\n\n  var _markerDrag =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(marker) {\n      var geocoder;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              geocoder = new google.maps.Geocoder();\n              latlng = {\n                lat: Number(marker.latLng.lat().toFixed(4)),\n                lng: Number(marker.latLng.lng().toFixed(4))\n              };\n              geocoder.geocode({\n                latLng: latlng\n              }, function (results, status) {\n                if (results[0] && results[0].formatted_address) {\n                  var _location = {\n                    lat: latlng.lat,\n                    lng: latlng.lng,\n                    formattedAddress: results[0].formatted_address\n                  };\n                  dispatch({\n                    type: 'UPDATE_ADPOST',\n                    payload: {\n                      key: 'location',\n                      value: _location\n                    }\n                  });\n                }\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function markerDrag(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = function handleChange(address) {\n    dispatch({\n      type: 'UPDATE_ADPOST',\n      payload: {\n        key: 'location',\n        value: _objectSpread({}, adPost.location, {\n          formattedAddress: address\n        })\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Text, {\n    content: \"Enter your location\",\n    pb: 20,\n    style: {\n      fontSize: 16,\n      fontWeight: 400,\n      color: '#595959'\n    }\n  }), __jsx(LocationSearchInput, {\n    address: adPost.location && adPost.location.formattedAddress ? adPost.location.formattedAddress : '',\n    handleChange: handleChange,\n    handleAddress: handleAddress,\n    handleLocation: handleLocation\n  }), __jsx(MapView, {\n    containerElement: __jsx(\"div\", {\n      style: {\n        height: \"195px\",\n        marginTop: '8px'\n      }\n    }),\n    mapElement: __jsx(\"div\", {\n      style: {\n        height: \"100%\"\n      }\n    }),\n    location: latlng,\n    markerDrag: function markerDrag(marker) {\n      return _markerDrag(marker);\n    }\n  }), __jsx(Box, {\n    flexBox: true,\n    justifyContent: \"space-between\",\n    mt: 40\n  }, __jsx(Button, {\n    title: \"Save\",\n    iconPosition: \"left\",\n    icon: __jsx(Icon, {\n      icon: archive,\n      size: 18,\n      color: \"#8C8C8C\"\n    }),\n    onClick: handleDraftingPost,\n    variant: \"textButton\",\n    isLoading: btnLoading\n  }), __jsx(Button, {\n    title: \"Previous\",\n    iconPosition: \"left\",\n    onClick: function onClick() {\n      return dispatch({\n        type: 'UPDATE_STEP',\n        payload: {\n          step: step - 1\n        }\n      });\n    },\n    disabled: btnLoading,\n    icon: __jsx(Icon, {\n      icon: chevronLeft,\n      size: 14,\n      color: \"#8C8C8C\"\n    }),\n    variant: \"textButton\",\n    mr: 30,\n    ml: \"auto\"\n  }), __jsx(Button, {\n    title: \"Next\",\n    iconPosition: \"right\",\n    disabled: adPost.location == null || btnLoading,\n    onClick: function onClick() {\n      return dispatch({\n        type: 'UPDATE_STEP',\n        payload: {\n          step: step + 1\n        }\n      });\n    },\n    icon: __jsx(Icon, {\n      icon: chevronRight,\n      size: 21,\n      color: \"#ffffff\"\n    }),\n    style: {\n      backgroundColor: adPost.location == null || btnLoading ? '#e2e2e2' : '#30C56D'\n    }\n  })));\n});","map":null,"metadata":{},"sourceType":"module"}