{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from 'react';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-slider/assets/index.css';\nimport RangeBoxStyle from './range.style';\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nconst toolTipHandleFunc = props => {\n  const {\n    value,\n    dragging,\n    index\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"value\", \"dragging\", \"index\"]);\n\n  return __jsx(Tooltip, {\n    prefixCls: \"reusecore__rc_slider_tooltip rc-slider-tooltip\",\n    overlay: value,\n    visible: dragging,\n    placement: \"top\",\n    key: index\n  }, __jsx(Handle, _extends({\n    value: value\n  }, restProps)));\n};\n\nconst SliderBox = props => {\n  const {\n    min,\n    max,\n    stepper,\n    dots,\n    slideDefaultValue,\n    vertical,\n    disabled,\n    handleChangefunc\n  } = props,\n        others = _objectWithoutProperties(props, [\"min\", \"max\", \"stepper\", \"dots\", \"slideDefaultValue\", \"vertical\", \"disabled\", \"handleChangefunc\"]);\n\n  return __jsx(Slider, _extends({\n    dots: dots,\n    min: min,\n    max: max,\n    step: stepper,\n    value: slideDefaultValue,\n    onChange: handleChangefunc,\n    disabled: disabled,\n    handle: toolTipHandleFunc,\n    vertical: vertical\n  }, others));\n};\n\nconst RangeBox = props => {\n  const {\n    min,\n    max,\n    stepper,\n    unit,\n    dots,\n    placement,\n    rangeDefaultValue,\n    vertical,\n    disabled,\n    handleChangefunc\n  } = props,\n        others = _objectWithoutProperties(props, [\"min\", \"max\", \"stepper\", \"unit\", \"dots\", \"placement\", \"rangeDefaultValue\", \"vertical\", \"disabled\", \"handleChangefunc\"]);\n\n  const defaultThresholdInit = rangeDefaultValue && rangeDefaultValue[0] ? rangeDefaultValue[0] : 0;\n  const defaultThresholdLast = rangeDefaultValue && rangeDefaultValue[1] ? rangeDefaultValue[1] : 0;\n  const toolTipConfig = {\n    placement,\n    prefixCls: 'reusecore__rc_slider_tooltip rc-slider-tooltip'\n  };\n  return __jsx(Range, _extends({\n    dots: dots,\n    min: min,\n    max: max,\n    step: stepper,\n    value: [defaultThresholdInit, defaultThresholdLast],\n    onChange: handleChangefunc,\n    disabled: disabled,\n    tipFormatter: value => `${value}${unit}`,\n    tipProps: toolTipConfig,\n    vertical: vertical\n  }, others));\n};\n\nexport default ((_ref) => {\n  let {\n    className,\n    labelText,\n    labelPosition,\n    type\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"labelText\", \"labelPosition\", \"type\"]);\n\n  // Add all classs to an array\n  const addAllClasses = ['reusecore__rangebox']; // Add label position class\n\n  if (labelPosition) {\n    addAllClasses.push(`label_${labelPosition}`);\n  } // label control\n\n\n  const position = labelPosition || 'right';\n\n  const LabelField = labelText && __jsx(\"span\", {\n    className: \"reusecore__field-label\"\n  }, labelText); // className prop checking\n\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(Fragment, null, __jsx(RangeBoxStyle, {\n    className: addAllClasses.join(' ')\n  }, __jsx(\"label\", null, position === 'left' || position === 'right' ? LabelField : '', type && type === 'range' ? __jsx(RangeBox, props) : __jsx(SliderBox, props), __jsx(\"div\", null, __jsx(\"div\", null)))));\n});\n\n/** RangeBox default proptype */\nRangeBox.defaultProps = {\n  labelText: 'ReuseCore RangeBox',\n  labelPosition: 'right',\n  className: 'rangebox_wrapper_className',\n  type: 'slide',\n  disabled: false,\n  min: 0,\n  max: 100,\n  stepper: 5,\n  unit: '',\n  placement: 'top',\n  slideDefaultValue: 3,\n  rangeDefaultValue: [0, 50],\n  dots: true,\n  vertical: false\n};","map":null,"metadata":{},"sourceType":"module"}