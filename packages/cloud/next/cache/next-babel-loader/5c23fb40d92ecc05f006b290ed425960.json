{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { Grid } from 'react-styled-flexboxgrid';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_CATEGORIES } from 'core/graphql/Category.query';\nimport { SINGLE_CATEGORY_PAGE } from 'core/navigation/constant';\nimport withLayout from '../hoc/withLayout';\nimport { CategoryGridCard } from '../components/CategoryCard';\nimport Box from 'reusecore/src/elements/Box';\nimport ListGrid from 'reusecore/src/elements/ListGrid';\nimport CategoryLoader from '../components/Loader/CategoryLoader';\nimport PageMeta from '../components/PageMeta';\nimport Heading from 'reusecore/src/elements/Heading';\nimport NoItemFound from '../components/NoItemFound';\nimport OnError from '../components/OnError';\nimport { withApollo } from '../helpers/apollo';\nexport default withApollo(withLayout(function () {\n  var _useState = useState(false),\n      loadingMore = _useState[0],\n      toggleLoading = _useState[1];\n\n  var _useState2 = useState(1),\n      page = _useState2[0],\n      paginate = _useState2[1];\n\n  var QUERY_VARIABLES = {\n    LIMIT: 20\n  };\n\n  var _useQuery = useQuery(GET_CATEGORIES, {\n    variables: QUERY_VARIABLES\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore;\n\n  if (error) return __jsx(OnError, null);\n  var categoryCount = data && data.categories && data.categories.data ? data.categories.data.length : 1;\n  var categories = data && data.categories && data.categories.data ? data.categories.data : [];\n  var totalCategory = data && data.categories ? data.categories.total : 1;\n\n  var renderCategoryItem = function renderCategoryItem(item) {\n    var slug = item.slug,\n        url = item.image.url,\n        name = item.name,\n        posts = item.posts;\n    var postNumber = posts ? posts.total : '';\n    return __jsx(Link, {\n      href: \"\".concat(SINGLE_CATEGORY_PAGE, \"/[slug]\"),\n      as: \"\".concat(SINGLE_CATEGORY_PAGE, \"/\").concat(slug)\n    }, __jsx(\"a\", null, __jsx(CategoryGridCard, {\n      imageSrc: url,\n      title: name,\n      postNumber: \"\".concat(postNumber, \" post\"),\n      height: \"auto\",\n      mb: \"2rem\",\n      boxShadow: \"1px 3px 15px rgba(0, 0, 0, 0.05)\",\n      border: \"none\"\n    })));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(PageMeta, {\n    title: \"Categories\",\n    description: \"Categories\"\n  }), __jsx(Box, {\n    pt: 70,\n    pb: 70\n  }, __jsx(Grid, null, __jsx(Heading, {\n    content: \"Categories\",\n    mb: 40,\n    style: {\n      fontSize: 24,\n      fontWeight: 600,\n      color: '#333333'\n    }\n  }), !categories.length && !loading ? __jsx(NoItemFound, null) : __jsx(ListGrid, {\n    data: categories,\n    totalPost: totalCategory,\n    postCount: categoryCount,\n    columnWidth: [1, 1 / 2, 1 / 4],\n    component: renderCategoryItem,\n    loading: loading ? loading : loadingMore,\n    placeholder: __jsx(CategoryLoader, null),\n    limit: QUERY_VARIABLES.LIMIT,\n    handleLoadMore: function handleLoadMore() {\n      toggleLoading(true);\n      paginate(page + 1);\n      fetchMore({\n        variables: {\n          page: page + 1\n        },\n        updateQuery: function updateQuery(prev, _ref) {\n          var fetchMoreResult = _ref.fetchMoreResult;\n\n          if (!fetchMoreResult) {\n            toggleLoading(false);\n            return prev;\n          }\n\n          if (categoryCount && totalCategory) {\n            if (categoryCount <= totalCategory) {\n              toggleLoading(false);\n              return _Object$assign({}, prev, {\n                categories: {\n                  data: [].concat(_toConsumableArray(prev.categories.data), _toConsumableArray(fetchMoreResult.categories.data)),\n                  total: totalCategory\n                }\n              });\n            }\n          }\n        }\n      });\n    }\n  }))));\n}));","map":null,"metadata":{},"sourceType":"module"}