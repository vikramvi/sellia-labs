{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport { getThumbUrl } from './generateThumbUrl';\nimport { storage } from './init';\n/**\n * Helper functions to upload multiple image to firebase storage\n * @param {Array} images\n */\n\nexport async function uploadMultipleImages(images) {\n  let allImages = [];\n\n  storage.ref().constructor.prototype.putFiles = function (files) {\n    var ref = this;\n    return _Promise.all(files.map(function (file) {\n      return ref.child(file.name).put(file);\n    }));\n  };\n\n  const uploadedImages = await storage.ref().putFiles(images).then(function (metadatas) {\n    return metadatas;\n  });\n  return _Promise.all(uploadedImages.map(snapshot => {\n    return new _Promise(async (resolve, reject) => {\n      await snapshot.ref.getDownloadURL().then(function (downloadURL) {\n        const thumbUrl = getThumbUrl(downloadURL);\n        allImages.push({\n          url: thumbUrl,\n          largeUrl: downloadURL\n        });\n      });\n      resolve(allImages);\n    });\n  }));\n}","map":{"version":3,"sources":["/Users/bhavikshah/Work/headless-graphql/packages/web/helpers/uploadMultipleImage.js"],"names":["getThumbUrl","storage","uploadMultipleImages","images","allImages","ref","constructor","prototype","putFiles","files","all","map","file","child","name","put","uploadedImages","then","metadatas","snapshot","resolve","reject","getDownloadURL","downloadURL","thumbUrl","push","url","largeUrl"],"mappings":";AAAA,SAASA,WAAT,QAA4B,oBAA5B;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA;;;;;AAIA,OAAO,eAAeC,oBAAf,CAAoCC,MAApC,EAA4C;AACjD,MAAIC,SAAS,GAAG,EAAhB;;AACAH,EAAAA,OAAO,CAACI,GAAR,GAAcC,WAAd,CAA0BC,SAA1B,CAAoCC,QAApC,GAA+C,UAASC,KAAT,EAAgB;AAC7D,QAAIJ,GAAG,GAAG,IAAV;AACA,WAAO,SAAQK,GAAR,CACLD,KAAK,CAACE,GAAN,CAAU,UAASC,IAAT,EAAe;AACvB,aAAOP,GAAG,CAACQ,KAAJ,CAAUD,IAAI,CAACE,IAAf,EAAqBC,GAArB,CAAyBH,IAAzB,CAAP;AACD,KAFD,CADK,CAAP;AAKD,GAPD;;AAQA,QAAMI,cAAc,GAAG,MAAMf,OAAO,CACjCI,GAD0B,GAE1BG,QAF0B,CAEjBL,MAFiB,EAG1Bc,IAH0B,CAGrB,UAASC,SAAT,EAAoB;AACxB,WAAOA,SAAP;AACD,GAL0B,CAA7B;AAOA,SAAO,SAAQR,GAAR,CACLM,cAAc,CAACL,GAAf,CAAmBQ,QAAQ,IAAI;AAC7B,WAAO,aAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC5C,YAAMF,QAAQ,CAACd,GAAT,CAAaiB,cAAb,GAA8BL,IAA9B,CAAmC,UAASM,WAAT,EAAsB;AAC7D,cAAMC,QAAQ,GAAGxB,WAAW,CAACuB,WAAD,CAA5B;AACAnB,QAAAA,SAAS,CAACqB,IAAV,CAAe;AACbC,UAAAA,GAAG,EAAEF,QADQ;AAEbG,UAAAA,QAAQ,EAAEJ;AAFG,SAAf;AAID,OANK,CAAN;AAOAH,MAAAA,OAAO,CAAChB,SAAD,CAAP;AACD,KATM,CAAP;AAUD,GAXD,CADK,CAAP;AAcD","sourcesContent":["import { getThumbUrl } from './generateThumbUrl';\nimport { storage } from './init';\n\n/**\n * Helper functions to upload multiple image to firebase storage\n * @param {Array} images\n */\nexport async function uploadMultipleImages(images) {\n  let allImages = [];\n  storage.ref().constructor.prototype.putFiles = function(files) {\n    var ref = this;\n    return Promise.all(\n      files.map(function(file) {\n        return ref.child(file.name).put(file);\n      })\n    );\n  };\n  const uploadedImages = await storage\n    .ref()\n    .putFiles(images)\n    .then(function(metadatas) {\n      return metadatas;\n    });\n\n  return Promise.all(\n    uploadedImages.map(snapshot => {\n      return new Promise(async (resolve, reject) => {\n        await snapshot.ref.getDownloadURL().then(function(downloadURL) {\n          const thumbUrl = getThumbUrl(downloadURL);\n          allImages.push({\n            url: thumbUrl,\n            largeUrl: downloadURL,\n          });\n        });\n        resolve(allImages);\n      });\n    })\n  );\n}\n"]},"metadata":{},"sourceType":"module"}