{"ast":null,"code":"var pad = function pad(num, totalChars) {\n  var pad = '0';\n  num = num + '';\n\n  while (num.length < totalChars) {\n    num = pad + num;\n  }\n\n  return num;\n}; // Ratio is between 0 and 1\n\n\nvar changeColor = function changeColor(color, ratio, darker) {\n  // Trim trailing/leading whitespace\n  color = color.replace(/^\\s*|\\s*$/, ''); // Expand three-digit hex\n\n  color = color.replace(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i, '#$1$1$2$2$3$3'); // Calculate ratio\n\n  var difference = Math.round(ratio * 256) * (darker ? -1 : 1),\n      // Determine if input is RGB(A)\n  rgb = color.match(new RegExp('^rgba?\\\\(\\\\s*' + '(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])' + '\\\\s*,\\\\s*' + '(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])' + '\\\\s*,\\\\s*' + '(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])' + '(?:\\\\s*,\\\\s*' + '(0|1|0?\\\\.\\\\d+))?' + '\\\\s*\\\\)$', 'i')),\n      alpha = !!rgb && rgb[4] != null ? rgb[4] : null,\n      // Convert hex to decimal\n  decimal = !!rgb ? [rgb[1], rgb[2], rgb[3]] : color.replace(/^#?([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])/i, function () {\n    return parseInt(arguments[1], 16) + ',' + parseInt(arguments[2], 16) + ',' + parseInt(arguments[3], 16);\n  }).split(/,/); // Return RGB(A)\n\n  return !!rgb ? 'rgb' + (alpha !== null ? 'a' : '') + '(' + Math[darker ? 'max' : 'min'](parseInt(decimal[0], 10) + difference, darker ? 0 : 255) + ', ' + Math[darker ? 'max' : 'min'](parseInt(decimal[1], 10) + difference, darker ? 0 : 255) + ', ' + Math[darker ? 'max' : 'min'](parseInt(decimal[2], 10) + difference, darker ? 0 : 255) + (alpha !== null ? ', ' + alpha : '') + ')' : // Return hex\n  ['#', pad(Math[darker ? 'max' : 'min'](parseInt(decimal[0], 10) + difference, darker ? 0 : 255).toString(16), 2), pad(Math[darker ? 'max' : 'min'](parseInt(decimal[1], 10) + difference, darker ? 0 : 255).toString(16), 2), pad(Math[darker ? 'max' : 'min'](parseInt(decimal[2], 10) + difference, darker ? 0 : 255).toString(16), 2)].join('');\n};\n\nvar lightenColor = function lightenColor(color, ratio) {\n  return changeColor(color, ratio, false);\n};\n\nvar darkenColor = function darkenColor(color, ratio) {\n  return changeColor(color, ratio, true);\n};\n\nexport { lightenColor, darkenColor };","map":null,"metadata":{},"sourceType":"module"}