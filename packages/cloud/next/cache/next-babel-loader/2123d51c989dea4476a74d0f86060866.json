{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bhavikshah/Work/headless-graphql/packages/web/containers/AccountSetting/AddMobileNumber/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { withFormik } from 'formik';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Button from 'reusecore/src/elements/Button';\nimport Input from '../../../components/Input';\nimport MobileNumberList from './MobileNumberList';\nimport { useMutation } from '@apollo/react-hooks';\nimport { GET_VERIFICATION_CODE, VERIFY_CODE, UPDATE_AUTHOR } from 'core/graphql/Mutations';\nimport AuthHelper from '../../../helpers/authHelper';\nvar MobileNumbersEnhancer = withFormik({\n  mapPropsToValues: function mapPropsToValues(props) {\n    var author = props.author,\n        loading = props.loading;\n    var mobile = !loading && author && author.mobile && author.mobile.length ? author.mobile : [];\n    var number = '';\n    var code = '';\n    return {\n      mobile: mobile,\n      number: number,\n      code: code\n    };\n  },\n  handleSubmit: function handleSubmit(values, _ref) {\n    var props = _ref.props,\n        setSubmitting = _ref.setSubmitting;\n  }\n});\n\nvar Recaptcha = function Recaptcha() {\n  useEffect(function () {\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha');\n    window.recaptchaVerifier.render().then(function (widgetId) {\n      window.recaptchaWidgetId = widgetId;\n    });\n  }, []);\n  return __jsx(\"div\", {\n    id: \"recaptcha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  });\n};\n\nvar AddMobileNumber = function AddMobileNumber(_ref2) {\n  var values = _ref2.values,\n      touched = _ref2.touched,\n      handleChange = _ref2.handleChange,\n      handleSubmit = _ref2.handleSubmit,\n      userInfo = _ref2.userInfo,\n      showModal = _ref2.showModal,\n      author = _ref2.author,\n      setFieldValue = _ref2.setFieldValue,\n      loading = _ref2.loading;\n\n  var _useState = useState({\n    confirmResult: false,\n    isMobileVerified: false,\n    wrongCode: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useMutation = useMutation(UPDATE_AUTHOR),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      handleAuthorMutation = _useMutation2[0],\n      data = _useMutation2[1].data;\n\n  var confirmResult = state.confirmResult,\n      isMobileVerified = state.isMobileVerified,\n      wrongCode = state.wrongCode;\n\n  var HandleStoringMobileNumber =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return AuthHelper.refreshToken();\n\n            case 2:\n              _context.next = 4;\n              return handleAuthorMutation({\n                variables: {\n                  author: _objectSpread({}, author, {\n                    mobile: values.mobile\n                  })\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function HandleStoringMobileNumber() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleRemove =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(item) {\n      var mobileNumber, index;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return AuthHelper.refreshToken();\n\n            case 2:\n              mobileNumber = values.mobile;\n              index = mobileNumber.indexOf(item);\n\n              if (index > -1) {\n                mobileNumber.splice(index, 1);\n              }\n\n              setFieldValue('mobile', mobileNumber);\n              _context2.next = 8;\n              return handleAuthorMutation({\n                variables: {\n                  author: _objectSpread({}, author, {\n                    mobile: values.mobile\n                  })\n                }\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleRemove(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleGetVerificationCode =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var confirmResult;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return AuthHelper.login('phone', null, null, values.number);\n\n            case 2:\n              confirmResult = _context3.sent;\n              setState(_objectSpread({}, state, {\n                confirmResult: confirmResult\n              }));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleGetVerificationCode() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var handleVerifyCode =\n  /*#__PURE__*/\n  function () {\n    var _ref6 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var mobileNumbers, isVerified;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              mobileNumbers = values.mobile;\n              _context4.prev = 1;\n              _context4.next = 4;\n              return AuthHelper.confirmVerification(state.confirmResult, values.code);\n\n            case 4:\n              isVerified = _context4.sent;\n\n              if (!isVerified.error) {\n                setState(_objectSpread({}, state, {\n                  isMobileVerified: true\n                }));\n                mobileNumbers.push({\n                  number: values.number\n                });\n                setFieldValue('mobile', mobileNumbers);\n              } else {\n                setState(_objectSpread({}, state, {\n                  wrongCode: true\n                }));\n              }\n\n              _context4.next = 12;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.error(_context4.t0);\n              setState(_objectSpread({}, state, {\n                wrongCode: true\n              }));\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 8]]);\n    }));\n\n    return function handleVerifyCode() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Heading, {\n    as: \"h3\",\n    content: \"Mobile Number Settings\",\n    fontSize: 18,\n    color: \"#333333\",\n    fontWeight: 600,\n    mb: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), values.mobile && __jsx(MobileNumberList, {\n    items: values.mobile,\n    handleRemoveMobile: function handleRemoveMobile(item) {\n      return handleRemove(item);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), !confirmResult ? __jsx(React.Fragment, null, __jsx(Input, {\n    elementType: \"input\",\n    elementConfig: {\n      type: 'text',\n      required: 'required'\n    },\n    label: \"Enter Number(ex. +30*********)\",\n    changed: handleChange('number'),\n    value: values.number,\n    touched: touched,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), __jsx(Recaptcha, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), __jsx(Button, {\n    onClick: handleGetVerificationCode,\n    title: \"Send Verification Code\",\n    bg: \"#30C56D\",\n    color: \"#ffffff\",\n    mt: 30,\n    width: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })) : null, !isMobileVerified && confirmResult ? __jsx(React.Fragment, null, __jsx(Input, {\n    elementType: \"input\",\n    elementConfig: {\n      type: 'text',\n      required: 'required'\n    },\n    label: \"Verify Code\",\n    changed: handleChange('code'),\n    value: values.code,\n    touched: touched,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), __jsx(Button, {\n    onClick: handleVerifyCode,\n    title: \"Verify Code\",\n    bg: \"#30C56D\",\n    color: \"#ffffff\",\n    width: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })) : null, isMobileVerified ? __jsx(React.Fragment, null, __jsx(\"p\", {\n    style: {\n      color: '#30C56D',\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Your number is verified!\"), __jsx(Button, {\n    onClick: HandleStoringMobileNumber,\n    title: \"Save Mobile Number\",\n    bg: \"#30C56D\",\n    color: \"#ffffff\",\n    mt: 30,\n    width: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })) : '', !isMobileVerified && wrongCode ? __jsx(\"p\", {\n    style: {\n      color: '#EF5A5A',\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Invalid code!\") : '');\n};\n\nexport default MobileNumbersEnhancer(AddMobileNumber);","map":{"version":3,"sources":["/Users/bhavikshah/Work/headless-graphql/packages/web/containers/AccountSetting/AddMobileNumber/index.js"],"names":["React","useState","useEffect","firebase","withFormik","Heading","Button","Input","MobileNumberList","useMutation","GET_VERIFICATION_CODE","VERIFY_CODE","UPDATE_AUTHOR","AuthHelper","MobileNumbersEnhancer","mapPropsToValues","props","author","loading","mobile","length","number","code","handleSubmit","values","setSubmitting","Recaptcha","window","recaptchaVerifier","auth","RecaptchaVerifier","render","then","widgetId","recaptchaWidgetId","AddMobileNumber","touched","handleChange","userInfo","showModal","setFieldValue","confirmResult","isMobileVerified","wrongCode","state","setState","handleAuthorMutation","data","HandleStoringMobileNumber","refreshToken","variables","handleRemove","item","mobileNumber","index","indexOf","splice","handleGetVerificationCode","login","handleVerifyCode","mobileNumbers","confirmVerification","isVerified","error","push","console","type","required","color","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { withFormik } from 'formik';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Button from 'reusecore/src/elements/Button';\nimport Input from '../../../components/Input';\n\nimport MobileNumberList from './MobileNumberList';\nimport { useMutation } from '@apollo/react-hooks';\nimport {\n  GET_VERIFICATION_CODE,\n  VERIFY_CODE,\n  UPDATE_AUTHOR,\n} from 'core/graphql/Mutations';\nimport AuthHelper from '../../../helpers/authHelper';\n\nconst MobileNumbersEnhancer = withFormik({\n  mapPropsToValues: props => {\n    const { author, loading } = props;\n    const mobile =\n      !loading && author && author.mobile && author.mobile.length\n        ? author.mobile\n        : [];\n    const number = '';\n    const code = '';\n    return {\n      mobile,\n      number,\n      code,\n    };\n  },\n  handleSubmit: (values, { props, setSubmitting }) => {},\n});\n\nconst Recaptcha = () => {\n  useEffect(() => {\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha');\n\n    window.recaptchaVerifier.render().then(function(widgetId) {\n      window.recaptchaWidgetId = widgetId;\n    });\n  }, []);\n  return <div id=\"recaptcha\" />;\n};\n\nconst AddMobileNumber = ({\n  values,\n  touched,\n  handleChange,\n  handleSubmit,\n  userInfo,\n  showModal,\n  author,\n  setFieldValue,\n  loading,\n}) => {\n  const [state, setState] = useState({\n    confirmResult: false,\n    isMobileVerified: false,\n    wrongCode: false,\n  });\n  const [handleAuthorMutation, { data }] = useMutation(UPDATE_AUTHOR);\n  const { confirmResult, isMobileVerified, wrongCode } = state;\n  const HandleStoringMobileNumber = async () => {\n    await AuthHelper.refreshToken();\n    await handleAuthorMutation({\n      variables: {\n        author: {\n          ...author,\n          mobile: values.mobile,\n        },\n      },\n    });\n  };\n  const handleRemove = async item => {\n    await AuthHelper.refreshToken();\n    let mobileNumber = values.mobile;\n    const index = mobileNumber.indexOf(item);\n    if (index > -1) {\n      mobileNumber.splice(index, 1);\n    }\n    setFieldValue('mobile', mobileNumber);\n    await handleAuthorMutation({\n      variables: {\n        author: {\n          ...author,\n          mobile: values.mobile,\n        },\n      },\n    });\n  };\n\n  const handleGetVerificationCode = async () => {\n    const confirmResult = await AuthHelper.login(\n      'phone',\n      null,\n      null,\n      values.number\n    );\n    setState({ ...state, confirmResult });\n  };\n\n  const handleVerifyCode = async () => {\n    let mobileNumbers = values.mobile;\n    try {\n      const isVerified = await AuthHelper.confirmVerification(\n        state.confirmResult,\n        values.code\n      );\n      if (!isVerified.error) {\n        setState({ ...state, isMobileVerified: true });\n        mobileNumbers.push({ number: values.number });\n        setFieldValue('mobile', mobileNumbers);\n      } else {\n        setState({ ...state, wrongCode: true });\n      }\n    } catch (error) {\n      console.error(error);\n      setState({ ...state, wrongCode: true });\n    }\n  };\n\n  return (\n    <>\n      <Heading\n        as=\"h3\"\n        content=\"Mobile Number Settings\"\n        fontSize={18}\n        color=\"#333333\"\n        fontWeight={600}\n        mb={30}\n      />\n      {values.mobile && (\n        <MobileNumberList\n          items={values.mobile}\n          handleRemoveMobile={item => handleRemove(item)}\n        />\n      )}\n\n      {!confirmResult ? (\n        <>\n          <Input\n            elementType=\"input\"\n            elementConfig={{\n              type: 'text',\n              required: 'required',\n            }}\n            label=\"Enter Number(ex. +30*********)\"\n            changed={handleChange('number')}\n            value={values.number}\n            touched={touched}\n          />\n\n          <Recaptcha />\n\n          <Button\n            onClick={handleGetVerificationCode}\n            title=\"Send Verification Code\"\n            bg=\"#30C56D\"\n            color=\"#ffffff\"\n            mt={30}\n            width={1}\n          />\n        </>\n      ) : null}\n      {!isMobileVerified && confirmResult ? (\n        <>\n          <Input\n            elementType=\"input\"\n            elementConfig={{\n              type: 'text',\n              required: 'required',\n            }}\n            label=\"Verify Code\"\n            changed={handleChange('code')}\n            value={values.code}\n            touched={touched}\n          />\n          <Button\n            onClick={handleVerifyCode}\n            title=\"Verify Code\"\n            bg=\"#30C56D\"\n            color=\"#ffffff\"\n            width={1}\n          />\n        </>\n      ) : null}\n      {isMobileVerified ? (\n        <>\n          <p style={{ color: '#30C56D', textAlign: 'center' }}>\n            Your number is verified!\n          </p>\n          <Button\n            onClick={HandleStoringMobileNumber}\n            title=\"Save Mobile Number\"\n            bg=\"#30C56D\"\n            color=\"#ffffff\"\n            mt={30}\n            width={1}\n          />\n        </>\n      ) : (\n        ''\n      )}\n      {!isMobileVerified && wrongCode ? (\n        <p style={{ color: '#EF5A5A', textAlign: 'center' }}>Invalid code!</p>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n\nexport default MobileNumbersEnhancer(AddMobileNumber);\n"]},"metadata":{},"sourceType":"module"}