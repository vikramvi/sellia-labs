{"ast":null,"code":"import cookie from 'js-cookie';\nimport nextCookie from 'next-cookies';\nvar FIREBASE_COOKIE = '__session';\n\nvar getCookieFromBrowser = function getCookieFromBrowser(key) {\n  return cookie.get(key);\n};\n\nvar getCookieFromServer = function getCookieFromServer(ctx) {\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'id_token';\n  var cookie = nextCookie(ctx);\n  var token = cookie && cookie[key] ? cookie[key] : false;\n  if (!token) return null;\n  return token;\n};\n\nexport var getCookie = function getCookie(key) {\n  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return process.browser ? getCookieFromBrowser(key) : getCookieFromServer(context, key);\n};\nexport var setCookie = function setCookie(key, token) {\n  cookie.set(key, token, {\n    expires: 7\n  });\n};\nexport var removeCookie = function removeCookie(key) {\n  cookie.remove(key);\n};\nexport var setFirebaseCookie = function setFirebaseCookie(key, token) {\n  // get cookie from __session using getCookie function\n  // parse the data from cookie\n  // assign the token to the key\n  // call set cookie function with the new data\n  try {\n    var cookieData = getCookie(FIREBASE_COOKIE);\n    var data = cookieData ? JSON.parse(cookieData) : {};\n    data[key] = token;\n    setCookie(FIREBASE_COOKIE, data);\n  } catch (error) {\n    console.log(error, 'setFirebaseCookie');\n  }\n};\nexport var removeFirebaseCookie = function removeFirebaseCookie(key) {\n  // get cookie from __session  using getCookie function\n  // parse the data from cookie\n  // remove the key from the data\n  // call set cookie function with the new data\n  try {\n    var cookieData = getCookie(FIREBASE_COOKIE);\n    var data = cookieData ? JSON.parse(cookieData) : {};\n\n    if (data && data.hasOwnProperty(key)) {\n      delete data[key];\n      setCookie(FIREBASE_COOKIE, data);\n    } else {// console.log(\n      //   `${key} is probably not available inside the cookie removeFirebaseCookie`\n      // );\n    }\n  } catch (error) {\n    console.log(error, 'removeFirebaseCookie');\n  }\n};\nexport var getFirebaseCookie = function getFirebaseCookie(key) {\n  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  // get cookie from __session using getCookie function\n  // parse the data from cookie\n  // get the relatedData using the key\n  try {\n    var cookieData = getCookie(FIREBASE_COOKIE, context);\n    var data = cookieData ? JSON.parse(cookieData) : {};\n\n    if (data && data.hasOwnProperty(key)) {\n      return data[key];\n    } else {// console.log(\n      //   `${key} is probably not available inside the cookie getFirebaseCookie`\n      // );\n    }\n  } catch (error) {\n    console.log(error, 'getFirebaseCookie');\n  }\n};","map":{"version":3,"sources":["/Users/bhavikshah/Work/headless-graphql/packages/web/helpers/session.js"],"names":["cookie","nextCookie","FIREBASE_COOKIE","getCookieFromBrowser","key","get","getCookieFromServer","ctx","token","getCookie","context","process","browser","setCookie","set","expires","removeCookie","remove","setFirebaseCookie","cookieData","data","JSON","parse","error","console","log","removeFirebaseCookie","hasOwnProperty","getFirebaseCookie"],"mappings":"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","sourcesContent":["import cookie from 'js-cookie';\nimport nextCookie from 'next-cookies';\n\nconst FIREBASE_COOKIE = '__session';\n\nconst getCookieFromBrowser = key => {\n  return cookie.get(key);\n};\n\nconst getCookieFromServer = (ctx, key = 'id_token') => {\n  const cookie = nextCookie(ctx);\n  const token = cookie && cookie[key] ? cookie[key] : false;\n  if (!token) return null;\n  return token;\n};\n\nexport const getCookie = (key, context = {}) => {\n  return process.browser\n    ? getCookieFromBrowser(key)\n    : getCookieFromServer(context, key);\n};\n\nexport const setCookie = (key, token) => {\n  cookie.set(key, token, { expires: 7 });\n};\n\nexport const removeCookie = key => {\n  cookie.remove(key);\n};\n\nexport const setFirebaseCookie = (key, token) => {\n  // get cookie from __session using getCookie function\n  // parse the data from cookie\n  // assign the token to the key\n  // call set cookie function with the new data\n  try {\n    const cookieData = getCookie(FIREBASE_COOKIE);\n    const data = cookieData ? JSON.parse(cookieData) : {};\n    data[key] = token;\n    setCookie(FIREBASE_COOKIE, data);\n  } catch (error) {\n    console.log(error, 'setFirebaseCookie');\n  }\n};\n\nexport const removeFirebaseCookie = key => {\n  // get cookie from __session  using getCookie function\n  // parse the data from cookie\n  // remove the key from the data\n  // call set cookie function with the new data\n  try {\n    const cookieData = getCookie(FIREBASE_COOKIE);\n    const data = cookieData ? JSON.parse(cookieData) : {};\n    if (data && data.hasOwnProperty(key)) {\n      delete data[key];\n      setCookie(FIREBASE_COOKIE, data);\n    } else {\n      // console.log(\n      //   `${key} is probably not available inside the cookie removeFirebaseCookie`\n      // );\n    }\n  } catch (error) {\n    console.log(error, 'removeFirebaseCookie');\n  }\n};\n\nexport const getFirebaseCookie = (key, context = false) => {\n  // get cookie from __session using getCookie function\n  // parse the data from cookie\n  // get the relatedData using the key\n  try {\n    const cookieData = getCookie(FIREBASE_COOKIE, context);\n    const data = cookieData ? JSON.parse(cookieData) : {};\n    if (data && data.hasOwnProperty(key)) {\n      return data[key];\n    } else {\n      // console.log(\n      //   `${key} is probably not available inside the cookie getFirebaseCookie`\n      // );\n    }\n  } catch (error) {\n    console.log(error, 'getFirebaseCookie');\n  }\n};\n"]},"metadata":{},"sourceType":"module"}