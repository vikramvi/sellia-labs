{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/bhavikshah/Work/headless-graphql/packages/web/components/CategoryCard/categoryListCard.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Text from 'reusecore/src/elements/Text';\nimport Image from 'reusecore/src/elements/Image';\nimport PlaceholderImage from 'core/static/images/categoryPlaceholder.svg';\nvar GridWrapper = styled('div').withConfig({\n  displayName: \"categoryListCard__GridWrapper\",\n  componentId: \"sc-1phjjuk-0\"\n})([\"display:flex;flex-direction:row;align-items:center;width:100%;margin-bottom:25px;flex-shrink:0;cursor:pointer;padding:10px 15px 10px 25px;&:last-child{margin-right:0;margin-bottom:0;}&:hover{background-color:rgba(226,226,226,0.15);}\"]);\nvar ImageWrapper = styled('div').withConfig({\n  displayName: \"categoryListCard__ImageWrapper\",\n  componentId: \"sc-1phjjuk-1\"\n})([\"width:50px;height:50px;display:flex;flex-shrink:0;overflow:hidden;position:relative;border-radius:25px;\"]);\nvar GridData = styled('div').withConfig({\n  displayName: \"categoryListCard__GridData\",\n  componentId: \"sc-1phjjuk-2\"\n})([\"width:100%;display:flex;flex-direction:column;align-items:flex-start;margin-left:20px;overflow:hidden;\"]);\n\nvar CategoryListCard = function CategoryListCard(_ref) {\n  var title = _ref.title,\n      postNumber = _ref.postNumber,\n      source = _ref.source,\n      imageStyle = _ref.imageStyle,\n      selected = _ref.selected,\n      titleStyle = _ref.titleStyle,\n      postNumberStyle = _ref.postNumberStyle,\n      handleClick = _ref.handleClick,\n      props = _objectWithoutProperties(_ref, [\"title\", \"postNumber\", \"source\", \"imageStyle\", \"selected\", \"titleStyle\", \"postNumberStyle\", \"handleClick\"]);\n\n  var imgSrc = source ? source : PlaceholderImage;\n  var selectedBg = selected === true ? 'rgba(226,226,226,0.5)' : 'transparent';\n  return __jsx(GridWrapper, _extends({}, props, {\n    style: {\n      backgroundColor: selectedBg\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), imgSrc && __jsx(ImageWrapper, _extends({}, imageStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), __jsx(Image, {\n    src: imgSrc,\n    alt: title,\n    width: \"100%\",\n    height: \"100%\",\n    style: {\n      objectFit: 'cover'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), __jsx(GridData, {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, title && __jsx(Heading, _extends({\n    content: title,\n    color: \"#595959\",\n    fontSize: 16\n  }, titleStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), postNumber && __jsx(Text, _extends({\n    content: postNumber,\n    color: \"#8C8C8C\",\n    fontSize: 12,\n    style: {\n      margin: 0\n    }\n  }, postNumberStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }))));\n};\n\nCategoryListCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  source: PropTypes.string,\n  postNumber: PropTypes.string,\n  imageStyle: PropTypes.object,\n  titleStyle: PropTypes.object,\n  postNumberStyle: PropTypes.object\n};\nCategoryListCard.defaultProps = {\n  titleStyle: {\n    fontSize: '16px',\n    fontWeight: 'normal',\n    mb: '0',\n    color: '#333333'\n  }\n};\nexport default CategoryListCard;","map":{"version":3,"sources":["/Users/bhavikshah/Work/headless-graphql/packages/web/components/CategoryCard/categoryListCard.js"],"names":["React","PropTypes","styled","Heading","Text","Image","PlaceholderImage","GridWrapper","ImageWrapper","GridData","CategoryListCard","title","postNumber","source","imageStyle","selected","titleStyle","postNumberStyle","handleClick","props","imgSrc","selectedBg","backgroundColor","objectFit","margin","propTypes","string","isRequired","object","defaultProps","fontSize","fontWeight","mb","color"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;AAEA,IAAMC,WAAW,GAAGL,MAAM,CAAC,KAAD,CAAT;AAAA;AAAA;AAAA,gPAAjB;AAmBA,IAAMM,YAAY,GAAGN,MAAM,CAAC,KAAD,CAAT;AAAA;AAAA;AAAA,+GAAlB;AAUA,IAAMO,QAAQ,GAAGP,MAAM,CAAC,KAAD,CAAT;AAAA;AAAA;AAAA,8GAAd;;AASA,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,OAUnB;AAAA,MATJC,KASI,QATJA,KASI;AAAA,MARJC,UAQI,QARJA,UAQI;AAAA,MAPJC,MAOI,QAPJA,MAOI;AAAA,MANJC,UAMI,QANJA,UAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,eAGI,QAHJA,eAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADDC,KACC;;AACJ,MAAMC,MAAM,GAAGP,MAAM,GAAGA,MAAH,GAAYP,gBAAjC;AACA,MAAMe,UAAU,GACdN,QAAQ,KAAK,IAAb,GAAoB,uBAApB,GAA8C,aADhD;AAEA,SACE,MAAC,WAAD,eAAiBI,KAAjB;AAAwB,IAAA,KAAK,EAAE;AAAEG,MAAAA,eAAe,EAAED;AAAnB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,MAAM,IACL,MAAC,YAAD,eAAkBN,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,KAAD;AACE,IAAA,GAAG,EAAEM,MADP;AAEE,IAAA,GAAG,EAAET,KAFP;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,IAAA,KAAK,EAAE;AAAEY,MAAAA,SAAS,EAAE;AAAb,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,EAaE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEL,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,IACJ,MAAC,OAAD;AACE,IAAA,OAAO,EAAEA,KADX;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,QAAQ,EAAE;AAHZ,KAIMK,UAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EASGJ,UAAU,IACT,MAAC,IAAD;AACE,IAAA,OAAO,EAAEA,UADX;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,QAAQ,EAAE,EAHZ;AAIE,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV;AAJT,KAKMP,eALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVJ,CAbF,CADF;AAmCD,CAjDD;;AAmDAP,gBAAgB,CAACe,SAAjB,GAA6B;AAC3Bd,EAAAA,KAAK,EAAEV,SAAS,CAACyB,MAAV,CAAiBC,UADG;AAE3Bd,EAAAA,MAAM,EAAEZ,SAAS,CAACyB,MAFS;AAG3Bd,EAAAA,UAAU,EAAEX,SAAS,CAACyB,MAHK;AAI3BZ,EAAAA,UAAU,EAAEb,SAAS,CAAC2B,MAJK;AAK3BZ,EAAAA,UAAU,EAAEf,SAAS,CAAC2B,MALK;AAM3BX,EAAAA,eAAe,EAAEhB,SAAS,CAAC2B;AANA,CAA7B;AASAlB,gBAAgB,CAACmB,YAAjB,GAAgC;AAC9Bb,EAAAA,UAAU,EAAE;AACVc,IAAAA,QAAQ,EAAE,MADA;AAEVC,IAAAA,UAAU,EAAE,QAFF;AAGVC,IAAAA,EAAE,EAAE,GAHM;AAIVC,IAAAA,KAAK,EAAE;AAJG;AADkB,CAAhC;AASA,eAAevB,gBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Text from 'reusecore/src/elements/Text';\nimport Image from 'reusecore/src/elements/Image';\nimport PlaceholderImage from 'core/static/images/categoryPlaceholder.svg';\n\nconst GridWrapper = styled('div')`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 25px;\n  flex-shrink: 0;\n  cursor: pointer;\n  padding: 10px 15px 10px 25px;\n  // background-color: ${props => props.selected && 'rgba(226,226,226,0.2)'};\n  &:last-child {\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  &:hover {\n    background-color: rgba(226, 226, 226, 0.15);\n  }\n`;\n\nconst ImageWrapper = styled('div')`\n  width: 50px;\n  height: 50px;\n  display: flex;\n  flex-shrink: 0;\n  overflow: hidden;\n  position: relative;\n  border-radius: 25px;\n`;\n\nconst GridData = styled('div')`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-left: 20px;\n  overflow: hidden;\n`;\n\nconst CategoryListCard = ({\n  title,\n  postNumber,\n  source,\n  imageStyle,\n  selected,\n  titleStyle,\n  postNumberStyle,\n  handleClick,\n  ...props\n}) => {\n  const imgSrc = source ? source : PlaceholderImage;\n  const selectedBg =\n    selected === true ? 'rgba(226,226,226,0.5)' : 'transparent';\n  return (\n    <GridWrapper {...props} style={{ backgroundColor: selectedBg }}>\n      {imgSrc && (\n        <ImageWrapper {...imageStyle}>\n          <Image\n            src={imgSrc}\n            alt={title}\n            width=\"100%\"\n            height=\"100%\"\n            style={{ objectFit: 'cover' }}\n          />\n        </ImageWrapper>\n      )}\n\n      <GridData onClick={handleClick}>\n        {title && (\n          <Heading\n            content={title}\n            color=\"#595959\"\n            fontSize={16}\n            {...titleStyle}\n          />\n        )}\n        {postNumber && (\n          <Text\n            content={postNumber}\n            color=\"#8C8C8C\"\n            fontSize={12}\n            style={{ margin: 0 }}\n            {...postNumberStyle}\n          />\n        )}\n      </GridData>\n    </GridWrapper>\n  );\n};\n\nCategoryListCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  source: PropTypes.string,\n  postNumber: PropTypes.string,\n  imageStyle: PropTypes.object,\n  titleStyle: PropTypes.object,\n  postNumberStyle: PropTypes.object,\n};\n\nCategoryListCard.defaultProps = {\n  titleStyle: {\n    fontSize: '16px',\n    fontWeight: 'normal',\n    mb: '0',\n    color: '#333333',\n  },\n};\n\nexport default CategoryListCard;\n"]},"metadata":{},"sourceType":"module"}