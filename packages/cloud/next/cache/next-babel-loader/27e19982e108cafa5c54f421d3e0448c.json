{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bhavikshah/Work/headless-graphql/packages/web/hoc/withLayout.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { getFirebaseCookie } from '../helpers/session';\nimport Layout from '../containers/Layout';\n/**\n * HOC for all pages except authentication routes like login route.\n *  This is where we have placed our top bar and menus\n */\n\nexport default (function (ComposedComponent) {\n  return (\n    /*#__PURE__*/\n    function (_Component) {\n      _inherits(withLayout, _Component);\n\n      function withLayout() {\n        _classCallCheck(this, withLayout);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(withLayout).apply(this, arguments));\n      }\n\n      _createClass(withLayout, [{\n        key: \"render\",\n        value: function render() {\n          return __jsx(Layout, {\n            userId: this.props.userId,\n            isLoggedIn: this.props.isLoggedIn,\n            pathname: this.props.pathname,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, __jsx(ComposedComponent, _extends({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          })));\n        }\n      }], [{\n        key: \"getInitialProps\",\n        value: function () {\n          var _getInitialProps = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(context) {\n            var token, location, user, isLoggedIn;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return getFirebaseCookie('id_token', context);\n\n                  case 2:\n                    token = _context.sent;\n                    _context.next = 5;\n                    return getFirebaseCookie('currentLocation', context);\n\n                  case 5:\n                    location = _context.sent;\n                    _context.next = 8;\n                    return getFirebaseCookie('user', context);\n\n                  case 8:\n                    user = _context.sent;\n                    isLoggedIn = token ? true : false;\n                    return _context.abrupt(\"return\", {\n                      isLoggedIn: isLoggedIn,\n                      pathname: context.pathname,\n                      location: location,\n                      userId: user ? user.userId : 'false',\n                      email: user ? user.email : false,\n                      error: user ? user.error : false\n                    });\n\n                  case 11:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          function getInitialProps(_x) {\n            return _getInitialProps.apply(this, arguments);\n          }\n\n          return getInitialProps;\n        }()\n      }]);\n\n      return withLayout;\n    }(Component)\n  );\n});","map":{"version":3,"sources":["/Users/bhavikshah/Work/headless-graphql/packages/web/hoc/withLayout.js"],"names":["React","Component","getFirebaseCookie","Layout","ComposedComponent","props","userId","isLoggedIn","pathname","context","token","location","user","email","error"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA;;;;;AAIA,gBAAe,UAAAC,iBAAiB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAgBnB;AACP,iBACE,MAAC,MAAD;AACE,YAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MADrB;AAEE,YAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAFzB;AAGE,YAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKE,MAAC,iBAAD,eAAuB,KAAKH,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CADF;AASD;AA1B2B;AAAA;AAAA;AAAA;AAAA;AAAA,oDAECI,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAGNP,iBAAiB,CAAC,UAAD,EAAaO,OAAb,CAHX;;AAAA;AAGpBC,oBAAAA,KAHoB;AAAA;AAAA,2BAIHR,iBAAiB,CAAC,iBAAD,EAAoBO,OAApB,CAJd;;AAAA;AAIpBE,oBAAAA,QAJoB;AAAA;AAAA,2BAKPT,iBAAiB,CAAC,MAAD,EAASO,OAAT,CALV;;AAAA;AAKpBG,oBAAAA,IALoB;AAMpBL,oBAAAA,UANoB,GAMPG,KAAK,GAAG,IAAH,GAAU,KANR;AAAA,qDAOnB;AACLH,sBAAAA,UAAU,EAAVA,UADK;AAELC,sBAAAA,QAAQ,EAAEC,OAAO,CAACD,QAFb;AAGLG,sBAAAA,QAAQ,EAARA,QAHK;AAILL,sBAAAA,MAAM,EAAEM,IAAI,GAAGA,IAAI,CAACN,MAAR,GAAiB,OAJxB;AAKLO,sBAAAA,KAAK,EAAED,IAAI,GAAGA,IAAI,CAACC,KAAR,GAAgB,KALtB;AAMLC,sBAAAA,KAAK,EAAEF,IAAI,GAAGA,IAAI,CAACE,KAAR,GAAgB;AANtB,qBAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MACLb,SADK;AAAA;AAAA,CAAhC","sourcesContent":["import React, { Component } from 'react';\nimport { getFirebaseCookie } from '../helpers/session';\nimport Layout from '../containers/Layout';\n\n/**\n * HOC for all pages except authentication routes like login route.\n *  This is where we have placed our top bar and menus\n */\nexport default ComposedComponent =>\n  class withLayout extends Component {\n    static async getInitialProps(context) {\n      const token = await getFirebaseCookie('id_token', context);\n      const location = await getFirebaseCookie('currentLocation', context);\n      const user = await getFirebaseCookie('user', context);\n      const isLoggedIn = token ? true : false;\n      return {\n        isLoggedIn,\n        pathname: context.pathname,\n        location,\n        userId: user ? user.userId : 'false',\n        email: user ? user.email : false,\n        error: user ? user.error : false,\n      };\n    }\n    render() {\n      return (\n        <Layout\n          userId={this.props.userId}\n          isLoggedIn={this.props.isLoggedIn}\n          pathname={this.props.pathname}\n        >\n          <ComposedComponent {...this.props} />\n        </Layout>\n      );\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}