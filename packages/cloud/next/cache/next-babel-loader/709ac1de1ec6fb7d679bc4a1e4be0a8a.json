{"ast":null,"code":"import _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport getSlug from 'speakingurl';\nimport { uploadMultipleImages } from '../../../helpers/uploadMultipleImage';\nimport Icon from 'react-icons-kit';\nimport { archive } from 'react-icons-kit/ionicons/archive';\nimport { chevronRight } from 'react-icons-kit/ionicons/chevronRight';\nimport Switch from 'reusecore/src/elements/Switch';\nimport Button from 'reusecore/src/elements/Button';\nimport Text from 'reusecore/src/elements/Text';\nimport Box from 'reusecore/src/elements/Box';\nimport Input from '../../../components/Input';\nimport AuthHelper from '../../../helpers/authHelper';\nimport { ADD_POST } from 'core/graphql/Mutations';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AddPostContext } from '../../../contexts/AddPostContext';\nvar imagesUrl = [];\nexport default (function () {\n  var _useContext = useContext(AddPostContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var step = state.step,\n      adPost = state.adPost;\n\n  var _useState = useState(''),\n      errors = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      btnLoading = _useState2[0],\n      setBtnLoading = _useState2[1];\n\n  var _useMutation = useMutation(ADD_POST),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      postMutation = _useMutation2[0];\n\n  var handleDraftingPost =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return AuthHelper.refreshToken();\n\n            case 2:\n              setBtnLoading(true);\n\n              if (!adPost.localGallery.length) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 6;\n              return uploadMultipleImages(adPost.localGallery);\n\n            case 6:\n              imagesUrl = _context.sent;\n\n              if (imagesUrl && imagesUrl.length > 0) {\n                dispatch({\n                  type: 'UPDATE_FULL_ADPOST',\n                  payload: {\n                    gallery: adPost.gallery.concat(imagesUrl[0]),\n                    image: !adPost.image.url ? imagesUrl[0][0] : adPost.image,\n                    localImage: {},\n                    localGallery: []\n                  }\n                });\n              }\n\n              _context.next = 21;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.next = 13;\n              return postMutation({\n                variables: {\n                  post: finalData\n                }\n              });\n\n            case 13:\n              data = _context.sent;\n              setBtnLoading(false);\n\n              if (!adPost.id) {\n                dispatch({\n                  type: 'UPDATE_ADPOST',\n                  payload: {\n                    key: 'id',\n                    value: data.data.addPost.id\n                  }\n                });\n              }\n\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](10);\n              setBtnLoading(false);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[10, 18]]);\n    }));\n\n    return function handleDraftingPost() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var preImage = adPost.preImage,\n      preGallery = adPost.preGallery,\n      localImage = adPost.localImage,\n      localGallery = adPost.localGallery,\n      location = adPost.location,\n      prossedAdPostData = _objectWithoutProperties(adPost, [\"preImage\", \"preGallery\", \"localImage\", \"localGallery\", \"location\"]);\n\n  var finalData = prossedAdPostData;\n\n  if (location && location.lat) {\n    finalData = _objectSpread({}, prossedAdPostData, {\n      location: location\n    });\n  }\n\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!imagesUrl.length) {\n                _context2.next = 13;\n                break;\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return postMutation({\n                variables: {\n                  post: finalData\n                }\n              });\n\n            case 4:\n              data = _context2.sent;\n              console.log(data, 'data');\n              setBtnLoading(false);\n\n              if (!adPost.id) {\n                dispatch({\n                  type: 'UPDATE_ADPOST',\n                  payload: {\n                    key: 'id',\n                    value: data.data.addPost.id\n                  }\n                });\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n              setBtnLoading(false);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 10]]);\n    }))();\n  }, [prossedAdPostData.gallery]);\n  return __jsx(React.Fragment, null, __jsx(Text, {\n    content: \"Enter the below details\",\n    pb: 20,\n    style: {\n      fontSize: 16,\n      fontWeight: 400,\n      color: '#595959'\n    }\n  }), __jsx(Input, {\n    elementType: \"input\",\n    value: adPost.title,\n    elementConfig: {\n      type: 'text',\n      required: 'required'\n    },\n    label: \"Title\",\n    changed: function changed(title) {\n      dispatch({\n        type: 'UPDATE_ADPOST',\n        payload: {\n          key: 'title',\n          value: title.target.value\n        }\n      }); // if (adPost.slug === '') {\n\n      dispatch({\n        type: 'UPDATE_ADPOST',\n        payload: {\n          key: 'slug',\n          value: getSlug(title.target.value)\n        }\n      }); // }\n    }\n  }), __jsx(Input, {\n    elementType: \"input\",\n    elementConfig: {\n      type: 'number',\n      required: 'required'\n    },\n    label: \"Price\",\n    value: adPost.price,\n    changed: function changed(price) {\n      return dispatch({\n        type: 'UPDATE_ADPOST',\n        payload: {\n          key: 'price',\n          value: _parseFloat(price.target.value)\n        }\n      });\n    },\n    style: {\n      marginBottom: 40\n    }\n  }), __jsx(Box, {\n    flexBox: true,\n    justifyContent: \"space-between\",\n    mb: 30\n  }, __jsx(Text, {\n    content: \"Negotiable?\",\n    color: \"#595959\"\n  }), __jsx(Switch, {\n    switchSize: \"50px\",\n    switchColor: \"#30C56D\",\n    barColor: \"#30C56D\",\n    onChange: function onChange(val) {\n      return dispatch({\n        type: 'UPDATE_ADPOST',\n        payload: {\n          key: 'isNegotiable',\n          value: !adPost.isNegotiable\n        }\n      });\n    },\n    isChecked: adPost.isNegotiable\n  })), __jsx(Box, {\n    flexBox: true,\n    justifyContent: \"space-between\",\n    mb: 30\n  }, __jsx(Text, {\n    content: \"New Condition?\",\n    color: \"#595959\"\n  }), __jsx(Switch, {\n    switchSize: \"50px\",\n    switchColor: \"#30C56D\",\n    barColor: \"#30C56D\",\n    onChange: function onChange(val) {\n      dispatch({\n        type: 'UPDATE_ADPOST',\n        payload: {\n          key: 'condition',\n          value: !adPost.condition\n        }\n      });\n    },\n    isChecked: adPost.condition\n  })), __jsx(Box, {\n    flexBox: true,\n    justifyContent: \"space-between\"\n  }, __jsx(Button, {\n    title: \"Save\",\n    iconPosition: \"left\",\n    icon: __jsx(Icon, {\n      icon: archive,\n      size: 18,\n      color: \"#8C8C8C\"\n    }),\n    onClick: handleDraftingPost,\n    variant: \"textButton\",\n    isLoading: btnLoading\n  }), __jsx(Button, {\n    title: \"Next\",\n    iconPosition: \"right\",\n    disabled: adPost.title.length === 0 || adPost.price.length === 0 || btnLoading,\n    onClick: function onClick() {\n      return dispatch({\n        type: 'UPDATE_STEP',\n        payload: {\n          step: step + 1\n        }\n      });\n    },\n    icon: __jsx(Icon, {\n      icon: chevronRight,\n      size: 21,\n      color: \"#ffffff\"\n    }),\n    style: {\n      backgroundColor: adPost.title.length === 0 || adPost.price.length === 0 || btnLoading ? '#e2e2e2' : '#30C56D'\n    }\n  })));\n});","map":null,"metadata":{},"sourceType":"module"}