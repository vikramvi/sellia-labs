{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport InputField from './Input.style'; // get input focus class\n\nvar getInputFocusClass = function getInputFocusClass(value) {\n  if (value !== '' && value != null) {\n    return 'is-focus';\n  } else {\n    return '';\n  }\n};\n\nvar input = function input(props) {\n  var inputElement;\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = __jsx(\"input\", _extends({}, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        onBlur: props.onBlur\n      }));\n      break;\n\n    case 'select':\n      inputElement = __jsx(\"select\", {\n        value: props.value,\n        onChange: props.changed\n      }, props.elementConfig.options.map(function (option) {\n        return __jsx(\"option\", {\n          key: option.value,\n          value: option.value\n        }, option.name);\n      }));\n      break;\n\n    case 'textarea':\n      inputElement = __jsx(\"textarea\", _extends({}, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        rows: props.rows\n      }));\n      break;\n\n    default:\n      inputElement = __jsx(\"input\", _extends({}, props, {\n        value: props.value\n      }));\n  }\n\n  return __jsx(InputField, {\n    style: props.style,\n    className: \"\".concat(getInputFocusClass(props.value))\n  }, inputElement, __jsx(\"span\", {\n    className: \"highlight\"\n  }), __jsx(\"label\", {\n    htmlFor: props.label\n  }, \" \", props.label, \" \"));\n};\n\nexport default input;","map":null,"metadata":{},"sourceType":"module"}