{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { DropdownMenuWrapper, DropdownMenuItemsWrapper, DropdownMenuItemWrapper } from './style';\n\nconst DropdownMenu = props => {\n  const {\n    0: menuState,\n    1: setMenuState\n  } = useState({\n    show: false\n  });\n  useEffect(() => {\n    window.addEventListener('click', handleDocumentClick);\n    return () => {\n      window.removeEventListener('click', handleDocumentClick);\n    };\n  });\n\n  const handleToggle = () => {\n    setMenuState(prevState => _objectSpread(_objectSpread({}, menuState), {}, {\n      show: !prevState.show\n    }));\n  };\n\n  const handleDocumentClick = () => {\n    if (menuState.show) {\n      handleToggle();\n    }\n  };\n\n  const {\n    content,\n    dropdownItems,\n    dropdownDirection,\n    className\n  } = props;\n  return __jsx(DropdownMenuWrapper, {\n    onClick: e => e.stopPropagation()\n  }, __jsx(\"span\", {\n    onClick: handleToggle\n  }, content), menuState.show && __jsx(DropdownMenuItemsWrapper, {\n    className: className,\n    dropdownDirection: dropdownDirection\n  }, dropdownItems && dropdownItems.map((item, index) => __jsx(DropdownMenuItemWrapper, {\n    key: index,\n    onClick: handleToggle\n  }, item))));\n};\n\nexport default DropdownMenu;","map":null,"metadata":{},"sourceType":"module"}