{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { naviconRound } from 'react-icons-kit/ionicons/naviconRound';\nimport { plusRound } from 'react-icons-kit/ionicons/plusRound';\nimport { more } from 'react-icons-kit/ionicons/more';\nimport { FullPageSpinner } from '../../components/Loader/spinnerLoader';\nimport { LOGOUT } from 'core/graphql/Mutations';\nimport { GET_AUTHOR_INFO } from 'core/graphql/Profile.query';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport AuthHelper from '../../helpers/authHelper';\nimport { removeFirebaseCookie } from '../../helpers/session';\nimport redirect from '../../helpers/redirect';\nimport { androidClose } from 'react-icons-kit/ionicons/androidClose';\nimport Icon from 'react-icons-kit';\nimport Button from 'reusecore/src/elements/Button';\nimport Navbar from '../../components/Navbar';\nimport Footer from '../../components/Footer';\nimport SideDrawer from 'reusecore/src/elements/Drawer';\nimport { setFirebaseCookie } from '../../helpers/session';\nimport { HOME_PAGE, SEARCH_PAGE, NEAREST_POST_PAGE, RECENT_POST_PAGE, CATEGORIES_PAGE, SINGLE_CATEGORY_PAGE, SINGLE_POST_PAGE, FAVOURITE_PAGE, PROFILE_PAGE, SIGNIN_PAGE, SIGNUP_PAGE, FORGET_PASSWORD_PAGE, RESET_PASSWORD_PAGE, ADD_POST, ACCOUNT_SETTING_PAGE } from 'core/navigation/constant';\nconst Main = styled.main.withConfig({\n  displayName: \"Layout__Main\",\n  componentId: \"sc-1ece30d-0\"\n})([\"min-height:100vh;min-height:calc(100vh - 153px);\"]);\nconst DrawerWrapper = styled('div').withConfig({\n  displayName: \"Layout__DrawerWrapper\",\n  componentId: \"sc-1ece30d-1\"\n})([\"display:inline-flex;flex-direction:column;height:100%;width:100%;padding:70px 20px 50px;\"]);\nconst DrawerLink = styled('span').withConfig({\n  displayName: \"Layout__DrawerLink\",\n  componentId: \"sc-1ece30d-2\"\n})([\"display:inline-flex;padding:11px 0;a{color:#333;}\"]);\nexport default (({\n  children,\n  userId = '',\n  history,\n  isLoggedIn,\n  location,\n  logout,\n  pathname\n}) => {\n  const {\n    0: drawerState,\n    1: toggleDrawer\n  } = useState(false);\n  const {\n    0: loggingOut,\n    1: setloggingOut\n  } = useState(false);\n  let userAvatar = '';\n  let userFallbackAvatar = '';\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_AUTHOR_INFO, {\n    variables: {\n      USERNAME: userId\n    }\n  });\n  userAvatar = data && data.author && data.author.image && data.author.image.url ? data.author.image.url : '';\n  userFallbackAvatar = data && data.author && data.author.image && data.author.image.largeUrl ? data.author.image.largeUrl : '';\n  useEffect(() => {\n    if (process.browser && localStorage.getItem('currentLocation') === null) {\n      getLocation();\n    }\n  }, []);\n\n  const getLocation = () => {\n    navigator.geolocation.getCurrentPosition(storePosition);\n  };\n\n  const storePosition = position => {\n    setFirebaseCookie('currentLocation', {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    });\n  };\n\n  const handleLogout = async () => {\n    setloggingOut(true);\n    const isLoggedOut = await AuthHelper.logout();\n    setloggingOut(false);\n\n    if (isLoggedOut === true) {\n      removeFirebaseCookie('id_token');\n      removeFirebaseCookie('user');\n      redirect({}, '/');\n    }\n  };\n\n  const handleToggle = () => toggleDrawer(!drawerState);\n\n  const DRAWER_MENU = [{\n    path: HOME_PAGE,\n    name: 'Home'\n  }, {\n    path: `${ADD_POST}/new`,\n    name: 'Add Post'\n  }, {\n    path: SEARCH_PAGE,\n    name: 'Search Page'\n  }, {\n    path: NEAREST_POST_PAGE,\n    name: 'Nearest Post Page'\n  }, {\n    path: RECENT_POST_PAGE,\n    name: 'Recent Post Page'\n  }, {\n    path: CATEGORIES_PAGE,\n    name: 'Category Page'\n  }];\n  return __jsx(React.Fragment, null, loggingOut && __jsx(FullPageSpinner, null), __jsx(Navbar, {\n    onToggle: handleToggle,\n    userId: userId,\n    history: history,\n    isLoggedIn: isLoggedIn,\n    location: location,\n    logout: handleLogout,\n    buttonIcon: __jsx(Icon, {\n      icon: naviconRound,\n      size: 21,\n      color: \"#ffffff\"\n    }),\n    menuButtonIcon: __jsx(Icon, {\n      icon: plusRound,\n      size: 20,\n      color: \"#595959\"\n    }),\n    dropdownMenuIcon: __jsx(Icon, {\n      icon: more,\n      size: 40,\n      color: \"#595959\"\n    }),\n    pathname: pathname,\n    avatar: [userAvatar, userFallbackAvatar]\n  }), drawerState && __jsx(SideDrawer, {\n    open: drawerState,\n    onClose: handleToggle,\n    toggleHandler: handleToggle,\n    isLoggedIn: isLoggedIn,\n    userId: userId,\n    logout: logout,\n    closeButton: __jsx(Icon, {\n      icon: androidClose,\n      size: 21,\n      color: \"#333333\"\n    }),\n    closeButtonStyle: {\n      display: 'inline-flex',\n      position: 'absolute',\n      top: 20,\n      right: 20,\n      cursor: 'pointer'\n    }\n  }, __jsx(DrawerWrapper, null, DRAWER_MENU.map((item, index) => __jsx(DrawerLink, {\n    key: index\n  }, __jsx(Link, {\n    href: item.path\n  }, __jsx(\"a\", null, item.name)))), isLoggedIn ? __jsx(React.Fragment, null, __jsx(DrawerLink, {\n    key: PROFILE_PAGE\n  }, __jsx(Link, {\n    href: `${PROFILE_PAGE}/[username]`,\n    as: `${PROFILE_PAGE}/${userId}`\n  }, __jsx(\"a\", null, \"Profile\"))), __jsx(DrawerLink, {\n    key: ACCOUNT_SETTING_PAGE\n  }, __jsx(Link, {\n    href: `${ACCOUNT_SETTING_PAGE}?view=edit-profile`\n  }, __jsx(\"a\", null, \"Account Setting\"))), __jsx(Button, {\n    onClick: handleLogout,\n    title: \"Logout\",\n    variant: \"textButton\",\n    width: 1,\n    color: \"#EF5A5A\",\n    style: {\n      minHeight: 'auto',\n      minWidth: 'auto',\n      textDecoration: 'none',\n      justifyContent: 'flex-start',\n      marginTop: 8,\n      marginLeft: '-4px'\n    }\n  })) : __jsx(Link, {\n    href: SIGNIN_PAGE\n  }, __jsx(Button, {\n    title: \"Login\",\n    variant: \"textButton\",\n    width: 1,\n    color: \"#30C56D\",\n    style: {\n      minHeight: 'auto',\n      minWidth: 'auto',\n      textDecoration: 'none',\n      justifyContent: 'flex-start',\n      marginTop: 8,\n      marginLeft: '-4px'\n    }\n  })))), __jsx(Main, null, children), __jsx(Footer, null));\n});","map":null,"metadata":{},"sourceType":"module"}